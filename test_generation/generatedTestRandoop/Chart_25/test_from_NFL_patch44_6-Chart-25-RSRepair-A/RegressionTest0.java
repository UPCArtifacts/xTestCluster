import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        double double0 = org.jfree.chart.renderer.category.BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 3.0d + "'", double0 == 3.0d);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Stroke stroke7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlineStroke(stroke7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Paint paint4 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseItemLabelPaint(paint4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        java.lang.Class<?> wildcardClass9 = paint8.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7);
        statisticalBarRenderer6.setIncludeBaseInRange(false);
        java.awt.Shape shape12 = statisticalBarRenderer6.lookupSeriesShape((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (byte) -1, shape12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape12);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener2 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        double double0 = org.jfree.chart.renderer.category.BarRenderer.DEFAULT_ITEM_MARGIN;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 0.2d + "'", double0 == 0.2d);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.data.category.CategoryDataset categoryDataset4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range5 = statisticalBarRenderer0.findRangeBounds(categoryDataset4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D9, categoryPlot10, categoryAxis11, categoryMarker12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Paint paint4 = statisticalBarRenderer0.lookupSeriesPaint((-1));
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation5 = null;
        org.jfree.chart.util.Layer layer6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation5, layer6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint4);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((-1), paint7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.data.category.CategoryDataset categoryDataset3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range4 = statisticalBarRenderer0.findRangeBounds(categoryDataset3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D6, categoryPlot7, valueAxis8, rectangle2D9, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer2.setSeriesOutlinePaint(10, paint4);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = statisticalBarRenderer2.getBaseItemLabelGenerator();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer2.setBaseFillPaint(paint7);
        java.awt.Paint paint11 = statisticalBarRenderer2.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        statisticalBarRenderer12.setIncludeBaseInRange(false);
        java.awt.Shape shape18 = statisticalBarRenderer12.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer2.setBaseShape(shape18, false);
        statisticalBarRenderer0.setBaseShape(shape18, false);
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range24 = statisticalBarRenderer0.findRangeBounds(categoryDataset23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNull(categoryItemLabelGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(shape18);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D18, categoryPlot19, valueAxis20, rectangle2D21, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D5, categoryItemRendererState6, rectangle2D7, categoryPlot8, categoryAxis9, valueAxis10, categoryDataset11, (int) (byte) 10, (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        statisticalBarRenderer19.setIncludeBaseInRange(false);
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27);
        statisticalBarRenderer26.setIncludeBaseInRange(false);
        java.awt.Shape shape32 = statisticalBarRenderer26.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke35 = statisticalBarRenderer26.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer19.setBaseOutlineStroke(stroke35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator41 = null;
        statisticalBarRenderer37.setLegendItemURLGenerator(categorySeriesLabelGenerator41);
        boolean boolean43 = statisticalBarRenderer37.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = null;
        statisticalBarRenderer37.setPositiveItemLabelPositionFallback(itemLabelPosition44);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer37.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer19.setNegativeItemLabelPositionFallback(itemLabelPosition46);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(1, itemLabelPosition46, false);
        org.jfree.data.category.CategoryDataset categoryDataset50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range51 = statisticalBarRenderer0.findRangeBounds(categoryDataset50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(shape32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        java.util.EventListener eventListener4 = null;
        boolean boolean5 = statisticalBarRenderer0.hasListener(eventListener4);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true, false);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke15 = statisticalBarRenderer9.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getErrorIndicatorStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((-1), stroke16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D10, categoryPlot11, categoryAxis12, categoryMarker13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D10, categoryPlot11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Graphics2D graphics2D21 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState22 = null;
        java.awt.geom.Rectangle2D rectangle2D23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D21, categoryItemRendererState22, rectangle2D23, categoryPlot24, categoryAxis25, valueAxis26, categoryDataset27, 1, (int) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D18, categoryPlot19, categoryAxis20, categoryMarker21, rectangle2D22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Stroke stroke5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseStroke(stroke5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D8, categoryPlot9, categoryAxis10, categoryMarker11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke19);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        boolean boolean13 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator14);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint21);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer19.getBaseItemLabelGenerator();
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke27 = statisticalBarRenderer19.lookupSeriesStroke((int) (byte) -1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke27);
        java.awt.Graphics2D graphics2D29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.util.Layer layer33 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D29, rectangle2D30, categoryAxis31, valueAxis32, layer33, plotRenderingInfo34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getErrorIndicatorStroke();
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean21 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        int int39 = statisticalBarRenderer0.getPassCount();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        java.awt.Font font11 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 100);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D12, categoryPlot13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
        org.junit.Assert.assertNull(font11);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke13);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(stroke13);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        java.awt.geom.Rectangle2D rectangle2D31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D28, categoryPlot29, valueAxis30, rectangle2D31, 2.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Stroke stroke26 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke26);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D28, categoryPlot29, rectangle2D30, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator12);
        boolean boolean14 = statisticalBarRenderer8.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint16 = statisticalBarRenderer8.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 10, paint16, true);
        java.awt.Paint paint19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseFillPaint(paint19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.junit.Assert.assertNull(categoryURLGenerator7);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range8 = statisticalBarRenderer0.findRangeBounds(categoryDataset7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        boolean boolean5 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = statisticalBarRenderer5.getBaseOutlinePaint();
        statisticalBarRenderer0.setBasePaint(paint6, false);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D9, categoryPlot10, rectangle2D11, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint6);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator7);
        java.lang.Class<?> wildcardClass9 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D10, categoryPlot11, categoryAxis12, categoryMarker13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Stroke stroke30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseStroke(stroke30, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = null;
        statisticalBarRenderer19.setLegendItemURLGenerator(categorySeriesLabelGenerator23);
        boolean boolean25 = statisticalBarRenderer19.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint27 = statisticalBarRenderer19.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer19.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        java.awt.Paint paint33 = statisticalBarRenderer19.getItemFillPaint((int) 'a', (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((-1), paint33, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNotNull(paint33);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemFillPaint((int) ' ', (int) '4');
        java.lang.Class<?> wildcardClass14 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable6 = null; // flaky: defaultStatisticalCategoryDataset0.getRowKey((int) (short) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer0.getToolTipGenerator((int) 'a', (int) (short) 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        double double4 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18);
        statisticalBarRenderer17.setIncludeBaseInRange(false);
        java.awt.Shape shape23 = statisticalBarRenderer17.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer17.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer10.setBaseOutlineStroke(stroke26);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = null;
        statisticalBarRenderer28.setLegendItemURLGenerator(categorySeriesLabelGenerator32);
        boolean boolean34 = statisticalBarRenderer28.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = null;
        statisticalBarRenderer28.setPositiveItemLabelPositionFallback(itemLabelPosition35);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer28.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer10.setNegativeItemLabelPositionFallback(itemLabelPosition37);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 100, itemLabelPosition39);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) -1, (java.lang.Boolean) true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable13 = defaultStatisticalCategoryDataset0.getRowKey((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.Marker marker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D9, categoryPlot10, valueAxis11, marker12, rectangle2D13);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list4 = defaultStatisticalCategoryDataset0.getRowKeys();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable6 = null; // flaky: defaultStatisticalCategoryDataset0.getRowKey((int) (byte) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNotNull(list4);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer6.setIncludeBaseInRange(true);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer6.drawOutline(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setBaseShape(shape9);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        java.awt.Graphics2D graphics2D29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.util.Layer layer33 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D29, rectangle2D30, categoryAxis31, valueAxis32, layer33, plotRenderingInfo34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D13, categoryPlot14, categoryAxis15, categoryMarker16, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        int int4 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number7 = defaultStatisticalCategoryDataset0.getMeanValue((int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setBaseItemLabelPaint(paint24);
        java.awt.Font font28 = statisticalBarRenderer19.getItemLabelFont((int) '#', 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30);
        java.awt.Stroke stroke33 = statisticalBarRenderer29.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer29.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer37.setSeriesOutlinePaint(10, paint39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator41 = statisticalBarRenderer37.getBaseItemLabelGenerator();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer37.setBaseFillPaint(paint42);
        java.awt.Paint paint46 = statisticalBarRenderer37.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer29.setBasePaint(paint46);
        statisticalBarRenderer19.setBaseItemLabelPaint(paint46, false);
        java.awt.Stroke stroke51 = statisticalBarRenderer19.lookupSeriesStroke((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (short) -1, stroke51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(font28);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(categoryItemLabelGenerator41);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(stroke51);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        boolean boolean31 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (short) -1);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D32, categoryPlot33, rectangle2D34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (short) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker30 = null;
        java.awt.geom.Rectangle2D rectangle2D31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D27, categoryPlot28, categoryAxis29, categoryMarker30, rectangle2D31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.LegendItemCollection legendItemCollection5 = statisticalBarRenderer0.getLegendItems();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D6, categoryPlot7, valueAxis8, rectangle2D9, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(legendItemCollection5);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getMeanValue((java.lang.Comparable) 1.0d, (java.lang.Comparable) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number6 = defaultStatisticalCategoryDataset0.getStdDevValue((int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number6 = defaultStatisticalCategoryDataset0.getMeanValue((int) '#', (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 35, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        java.awt.geom.Rectangle2D rectangle2D44 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState48 = statisticalBarRenderer0.initialise(graphics2D43, rectangle2D44, categoryPlot45, (int) '4', plotRenderingInfo47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        java.awt.Stroke stroke16 = statisticalBarRenderer12.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer9.setBaseStroke(stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer9.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer9.getNegativeItemLabelPosition((int) '#', (int) (byte) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition24, false);
        boolean boolean27 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Stroke stroke16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (short) -1, stroke16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation8 = null;
        org.jfree.chart.util.Layer layer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation8, layer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertNull(paint7);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Paint paint4 = statisticalBarRenderer0.lookupSeriesPaint((-1));
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint5);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) '#', 0);
        java.awt.Paint paint10 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        boolean boolean12 = statisticalBarRenderer8.getAutoPopulateSeriesStroke();
        statisticalBarRenderer8.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setBaseOutlineStroke(stroke31);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer15.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint38 = statisticalBarRenderer15.getItemFillPaint(1, (int) (short) 1);
        statisticalBarRenderer8.setBaseItemLabelPaint(paint38, false);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint38);
        java.awt.Paint paint43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (byte) -1, paint43, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(paint43);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemOutlineStroke((-1), 100);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState17 = statisticalBarRenderer1.initialise(graphics2D12, rectangle2D13, categoryPlot14, (int) (byte) 10, plotRenderingInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Font font22 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator24);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        defaultStatisticalCategoryDataset0.validateObject();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number20 = null; // flaky: defaultStatisticalCategoryDataset0.getMeanValue((int) (short) -1, (int) '4');
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation10, layer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator9);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke10);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        java.awt.Stroke stroke16 = statisticalBarRenderer12.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer9.setBaseStroke(stroke16);
        statisticalBarRenderer0.setSeriesStroke(100, stroke16, false);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Paint paint4 = statisticalBarRenderer0.lookupSeriesPaint((-1));
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint5);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) '#', 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer10.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setSeriesOutlinePaint(10, paint20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer18.getBaseItemLabelGenerator();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseFillPaint(paint23);
        java.awt.Paint paint27 = statisticalBarRenderer18.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer10.setBasePaint(paint27);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint27, false);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setSeriesOutlinePaint(10, paint35);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = statisticalBarRenderer33.getBaseItemLabelGenerator();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setBaseFillPaint(paint38);
        java.awt.Paint paint42 = statisticalBarRenderer33.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator44 = null;
        statisticalBarRenderer43.setBaseURLGenerator(categoryURLGenerator44, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator47 = null;
        statisticalBarRenderer43.setLegendItemURLGenerator(categorySeriesLabelGenerator47);
        boolean boolean49 = statisticalBarRenderer43.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint51 = statisticalBarRenderer43.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer43.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer33.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54, false);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(categoryItemLabelGenerator37);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer0.getToolTipGenerator((int) 'a', (int) (short) 1);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list4 = defaultStatisticalCategoryDataset0.getRowKeys();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener5 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number9 = defaultStatisticalCategoryDataset0.getStdDevValue((int) (byte) 0, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNotNull(list4);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D12, categoryPlot13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = defaultStatisticalCategoryDataset0.hasListener(eventListener5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number9 = defaultStatisticalCategoryDataset0.getStdDevValue(0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        java.awt.Stroke stroke14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseStroke(stroke14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke19);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.plot.Marker marker46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D43, categoryPlot44, valueAxis45, marker46, rectangle2D47);
        java.awt.Font font49 = statisticalBarRenderer0.getBaseItemLabelFont();
        double double50 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(font49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2.0d + "'", double50 == 2.0d);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        java.awt.Graphics2D graphics2D13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D13, rectangle2D14, categoryAxis15, valueAxis16, layer17, plotRenderingInfo18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator23, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = defaultStatisticalCategoryDataset0.hasListener(eventListener5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable8 = defaultStatisticalCategoryDataset0.getColumnKey(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18);
        statisticalBarRenderer17.setIncludeBaseInRange(false);
        java.awt.Shape shape23 = statisticalBarRenderer17.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer17.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer10.setBaseOutlineStroke(stroke26);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = null;
        statisticalBarRenderer28.setLegendItemURLGenerator(categorySeriesLabelGenerator32);
        boolean boolean34 = statisticalBarRenderer28.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = null;
        statisticalBarRenderer28.setPositiveItemLabelPositionFallback(itemLabelPosition35);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer28.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer10.setNegativeItemLabelPositionFallback(itemLabelPosition37);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 100, itemLabelPosition39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) '4');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator45 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) -1, categoryToolTipGenerator45, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Font font22 = statisticalBarRenderer0.getItemLabelFont(10, (int) '#');
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(font22);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        statisticalBarRenderer14.setAutoPopulateSeriesShape(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setSeriesOutlinePaint(10, paint24);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer22.getBaseItemLabelGenerator();
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint29 = statisticalBarRenderer22.getBaseItemLabelPaint();
        statisticalBarRenderer14.setSeriesPaint(100, paint29);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getErrorIndicatorStroke();
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) '4', categoryItemLabelGenerator22);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        boolean boolean12 = statisticalBarRenderer8.getAutoPopulateSeriesStroke();
        statisticalBarRenderer8.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setBaseOutlineStroke(stroke31);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer15.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint38 = statisticalBarRenderer15.getItemFillPaint(1, (int) (short) 1);
        statisticalBarRenderer8.setBaseItemLabelPaint(paint38, false);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint38);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint46 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer44.setSeriesOutlinePaint(10, paint46);
        boolean boolean48 = statisticalBarRenderer44.getAutoPopulateSeriesStroke();
        boolean boolean49 = statisticalBarRenderer44.getAutoPopulateSeriesOutlineStroke();
        boolean boolean52 = statisticalBarRenderer44.isItemLabelVisible((int) (short) 100, 0);
        java.awt.Font font55 = statisticalBarRenderer44.getItemLabelFont((int) 'a', (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((-1), font55, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(font55);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint45 = statisticalBarRenderer0.getItemPaint((int) (short) 100, (int) ' ');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator47 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator47, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator50 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation51 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator50);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition(100, (int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        java.awt.Paint paint17 = statisticalBarRenderer13.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke(100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint26 = statisticalBarRenderer25.getBaseOutlinePaint();
        statisticalBarRenderer20.setBasePaint(paint26, false);
        statisticalBarRenderer20.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33);
        java.awt.Paint paint36 = statisticalBarRenderer32.lookupSeriesPaint((-1));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setBaseItemLabelPaint(paint37);
        java.awt.Font font41 = statisticalBarRenderer32.getItemLabelFont((int) '#', 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43);
        java.awt.Stroke stroke46 = statisticalBarRenderer42.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer42.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint52 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer50.setSeriesOutlinePaint(10, paint52);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator54 = statisticalBarRenderer50.getBaseItemLabelGenerator();
        java.awt.Paint paint55 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer50.setBaseFillPaint(paint55);
        java.awt.Paint paint59 = statisticalBarRenderer50.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer42.setBasePaint(paint59);
        statisticalBarRenderer32.setBaseItemLabelPaint(paint59, false);
        statisticalBarRenderer20.setBaseItemLabelPaint(paint59);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 1, paint59);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(font41);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertNull(categoryItemLabelGenerator54);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.plot.Marker marker46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D43, categoryPlot44, valueAxis45, marker46, rectangle2D47);
        java.awt.Paint paint50 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNull(paint50);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        java.util.EventListener eventListener4 = null;
        boolean boolean5 = statisticalBarRenderer0.hasListener(eventListener4);
        java.awt.Font font7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) -1, font7, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(font7);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer10.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setSeriesOutlinePaint(10, paint20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer18.getBaseItemLabelGenerator();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseFillPaint(paint23);
        java.awt.Paint paint27 = statisticalBarRenderer18.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer10.setBasePaint(paint27);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint27);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true);
        boolean boolean35 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 100, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator15);
        java.awt.Paint paint18 = statisticalBarRenderer0.getSeriesPaint((int) ' ');
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNull(paint18);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 10);
        double double32 = statisticalBarRenderer0.getMaximumBarWidth();
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation15 = null;
        boolean boolean16 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation15);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        java.lang.Boolean boolean40 = statisticalBarRenderer0.getSeriesItemLabelsVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43);
        java.awt.Stroke stroke46 = statisticalBarRenderer42.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer42.getNegativeItemLabelPosition(100, (int) (short) 1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 100, itemLabelPosition49, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        boolean boolean12 = statisticalBarRenderer8.getAutoPopulateSeriesStroke();
        statisticalBarRenderer8.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setBaseOutlineStroke(stroke31);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer15.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint38 = statisticalBarRenderer15.getItemFillPaint(1, (int) (short) 1);
        statisticalBarRenderer8.setBaseItemLabelPaint(paint38, false);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint38);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.chart.LegendItem legendItem18 = statisticalBarRenderer0.getLegendItem(1, (int) (byte) 10);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNull(legendItem18);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setSeriesOutlinePaint(10, paint19);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer17.getBaseItemLabelGenerator();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint22);
        java.awt.Paint paint26 = statisticalBarRenderer17.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28);
        statisticalBarRenderer27.setIncludeBaseInRange(false);
        java.awt.Shape shape33 = statisticalBarRenderer27.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer17.setBaseShape(shape33, false);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape33, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((-1), (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(shape33);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = null;
        statisticalBarRenderer22.setLegendItemURLGenerator(categorySeriesLabelGenerator26);
        boolean boolean28 = statisticalBarRenderer22.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint30 = statisticalBarRenderer22.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer22.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator34 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        java.awt.Paint paint36 = statisticalBarRenderer22.lookupSeriesOutlinePaint((int) (byte) 0);
        java.awt.Paint paint39 = statisticalBarRenderer22.getItemFillPaint((int) (byte) 1, 10);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((-1), paint39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator34);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setSeriesOutlinePaint(10, paint8);
        java.awt.Stroke stroke11 = statisticalBarRenderer6.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = null;
        statisticalBarRenderer13.setLegendItemURLGenerator(categorySeriesLabelGenerator17);
        boolean boolean19 = statisticalBarRenderer13.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint21 = statisticalBarRenderer13.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer6.setSeriesOutlinePaint(0, paint21, false);
        double double24 = statisticalBarRenderer6.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer25.setBaseURLGenerator(categoryURLGenerator26);
        java.awt.Paint paint29 = statisticalBarRenderer25.lookupSeriesPaint((-1));
        statisticalBarRenderer6.setBaseFillPaint(paint29, true);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) ' ', paint29);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation33 = null;
        org.jfree.chart.util.Layer layer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation33, layer34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = null;
        statisticalBarRenderer11.setLegendItemURLGenerator(categorySeriesLabelGenerator15);
        boolean boolean17 = statisticalBarRenderer11.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer11.setBaseItemLabelsVisible(true);
        java.awt.Paint paint20 = statisticalBarRenderer11.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint20, true);
        double double23 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator24, false);
        boolean boolean27 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint45 = statisticalBarRenderer0.getItemPaint((int) (short) 100, (int) ' ');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator47 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator47, true);
        int int50 = statisticalBarRenderer0.getPassCount();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator52 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator52, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        double double9 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 1, paint7);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        defaultStatisticalCategoryDataset0.validateObject();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number20 = defaultStatisticalCategoryDataset0.getValue((int) (byte) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke15 = statisticalBarRenderer9.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint17 = statisticalBarRenderer16.getBaseOutlinePaint();
        statisticalBarRenderer9.setBaseFillPaint(paint17);
        statisticalBarRenderer0.setBaseFillPaint(paint17);
        java.awt.Font font22 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 1, 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(font22);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        java.util.EventListener eventListener4 = null;
        boolean boolean5 = statisticalBarRenderer0.hasListener(eventListener4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer7.getBaseItemLabelGenerator();
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke15 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) -1);
        statisticalBarRenderer0.setSeriesStroke(10, stroke15, false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke15);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer0.hasListener(eventListener12);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (short) -1, (java.lang.Boolean) false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke15 = statisticalBarRenderer9.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 10, stroke16, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = statisticalBarRenderer20.getBaseOutlinePaint();
        statisticalBarRenderer20.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer20.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        java.awt.Stroke stroke30 = statisticalBarRenderer26.getErrorIndicatorStroke();
        boolean boolean31 = statisticalBarRenderer20.equals((java.lang.Object) statisticalBarRenderer26);
        statisticalBarRenderer20.setBase((double) 0L);
        java.lang.Boolean boolean35 = statisticalBarRenderer20.getSeriesCreateEntities((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer37.setSeriesOutlinePaint(10, paint39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator41 = statisticalBarRenderer37.getBaseItemLabelGenerator();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer37.setBaseFillPaint(paint42);
        java.awt.Paint paint46 = statisticalBarRenderer37.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator48 = null;
        statisticalBarRenderer47.setBaseURLGenerator(categoryURLGenerator48);
        statisticalBarRenderer47.setIncludeBaseInRange(false);
        java.awt.Shape shape53 = statisticalBarRenderer47.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer37.setBaseShape(shape53, false);
        statisticalBarRenderer20.setSeriesShape((int) '4', shape53, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((-1), shape53, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(categoryItemLabelGenerator41);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(shape53);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        double double11 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean14 = statisticalBarRenderer0.isItemLabelVisible((-1), (int) ' ');
        java.lang.Object obj15 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number7 = defaultStatisticalCategoryDataset0.getValue(10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer0.getToolTipGenerator((int) 'a', (int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Graphics2D graphics2D24 = null;
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.util.Layer layer28 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D24, rectangle2D25, categoryAxis26, valueAxis27, layer28, plotRenderingInfo29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(categoryURLGenerator23);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemFillPaint((int) 'a', (int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        java.awt.Paint paint20 = statisticalBarRenderer16.lookupSeriesPaint((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (short) -1, paint20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener43 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesPaint((int) (short) 100);
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint(10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNull(paint11);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = null;
        statisticalBarRenderer6.setLegendItemURLGenerator(categorySeriesLabelGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        statisticalBarRenderer13.setIncludeBaseInRange(false);
        java.awt.Shape shape19 = statisticalBarRenderer13.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke22 = statisticalBarRenderer13.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer6.setSeriesStroke((int) (short) 100, stroke22, false);
        java.awt.Stroke stroke26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer6.setSeriesOutlineStroke(0, stroke26, true);
        statisticalBarRenderer6.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint31 = statisticalBarRenderer6.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint31);
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesItemLabelPaint(10);
        java.lang.Boolean boolean36 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 1);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        java.awt.geom.Rectangle2D rectangle2D40 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D37, categoryPlot38, valueAxis39, rectangle2D40, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(paint34);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 10);
        statisticalBarRenderer0.setMinimumBarLength((double) (short) 1);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = statisticalBarRenderer0.getURLGenerator((int) ' ', (-1));
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryURLGenerator9);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        double double6 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable8 = defaultStatisticalCategoryDataset0.getRowKey(1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint21);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer19.getBaseItemLabelGenerator();
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke27 = statisticalBarRenderer19.lookupSeriesStroke((int) (byte) -1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke27);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesStroke((int) (short) 100);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesItemLabelsVisible(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator38 = null;
        statisticalBarRenderer34.setLegendItemURLGenerator(categorySeriesLabelGenerator38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator42 = null;
        statisticalBarRenderer41.setBaseURLGenerator(categoryURLGenerator42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer45.setSeriesOutlinePaint(10, paint47);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = statisticalBarRenderer45.getBaseItemLabelGenerator();
        java.awt.Shape shape51 = statisticalBarRenderer45.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer45.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer45.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint58 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer45.setSeriesFillPaint((int) '#', paint58);
        statisticalBarRenderer41.setSeriesOutlinePaint((int) (short) 1, paint58, false);
        statisticalBarRenderer34.setSeriesPaint((int) '#', paint58);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((-1), paint58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNull(categoryItemLabelGenerator49);
        org.junit.Assert.assertNotNull(shape51);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(paint58);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        org.jfree.data.Range range4 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable6 = defaultStatisticalCategoryDataset0.getRowKey((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(range4);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke24);
        java.awt.Font font26 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.lang.Class<?> wildcardClass27 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (byte) 0);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemFillPaint((int) (byte) 1, 10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation18 = null;
        org.jfree.chart.util.Layer layer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation18, layer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        java.util.List list13 = defaultStatisticalCategoryDataset0.getRowKeys();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number16 = null; // flaky: defaultStatisticalCategoryDataset0.getStdDevValue((-1), 0);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = statisticalBarRenderer5.getBaseOutlinePaint();
        statisticalBarRenderer0.setBasePaint(paint6, false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        java.awt.Paint paint16 = statisticalBarRenderer12.lookupSeriesPaint((-1));
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setBaseItemLabelPaint(paint17);
        java.awt.Font font21 = statisticalBarRenderer12.getItemLabelFont((int) '#', 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        java.awt.Stroke stroke26 = statisticalBarRenderer22.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer22.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setSeriesOutlinePaint(10, paint32);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = statisticalBarRenderer30.getBaseItemLabelGenerator();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseFillPaint(paint35);
        java.awt.Paint paint39 = statisticalBarRenderer30.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer22.setBasePaint(paint39);
        statisticalBarRenderer12.setBaseItemLabelPaint(paint39, false);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint39);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(categoryItemLabelGenerator34);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(itemLabelPosition45);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator16 = null;
        statisticalBarRenderer12.setLegendItemURLGenerator(categorySeriesLabelGenerator16);
        boolean boolean18 = statisticalBarRenderer12.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer12.setBaseItemLabelsVisible(true);
        boolean boolean21 = statisticalBarRenderer12.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer12.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer12.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = null;
        statisticalBarRenderer28.setLegendItemURLGenerator(categorySeriesLabelGenerator32);
        boolean boolean34 = statisticalBarRenderer28.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = null;
        statisticalBarRenderer28.setPositiveItemLabelPositionFallback(itemLabelPosition35);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer28.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer12.setBaseNegativeItemLabelPosition(itemLabelPosition37);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition37);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition37);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) -1);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D6, categoryPlot7, rectangle2D8, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        double double14 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        statisticalBarRenderer15.setLegendItemURLGenerator(categorySeriesLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setSeriesStroke((int) (short) 100, stroke31, false);
        java.lang.Boolean boolean35 = statisticalBarRenderer15.getSeriesCreateEntities((int) 'a');
        boolean boolean36 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number39 = defaultStatisticalCategoryDataset0.getStdDevValue((int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Font font22 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        org.jfree.data.category.CategoryDataset categoryDataset24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range25 = statisticalBarRenderer0.findRangeBounds(categoryDataset24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer0.getLegendItemURLGenerator();
        int int27 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryURLGenerator7);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list4 = defaultStatisticalCategoryDataset0.getRowKeys();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener5 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener5);
        java.lang.Number number9 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) (short) -1, (java.lang.Comparable) ' ');
        double double11 = defaultStatisticalCategoryDataset0.getRangeLowerBound(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number14 = null; // flaky: defaultStatisticalCategoryDataset0.getValue((int) (short) -1, (int) (short) 100);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNull(number9);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 0);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 10);
        java.awt.Shape shape22 = statisticalBarRenderer0.getBaseShape();
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = defaultStatisticalCategoryDataset0.hasListener(eventListener5);
        java.lang.Comparable comparable10 = null;
        defaultStatisticalCategoryDataset0.add((double) (-1.0f), (double) (byte) 1, (java.lang.Comparable) 1.0d, comparable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number14 = defaultStatisticalCategoryDataset0.getMeanValue((int) (short) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation7 = null;
        org.jfree.chart.util.Layer layer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation7, layer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Font font22 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(font22);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        double double14 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.jfree.data.general.DatasetGroup datasetGroup15 = defaultStatisticalCategoryDataset0.getGroup();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener16 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number20 = defaultStatisticalCategoryDataset0.getStdDevValue((int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(datasetGroup15);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.List list5 = defaultStatisticalCategoryDataset0.getRowKeys();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number8 = defaultStatisticalCategoryDataset0.getValue((int) (byte) 0, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(list5);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator8);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (short) -1);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNotNull(paint2);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        java.awt.Font font11 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setSeriesOutlinePaint(10, paint14);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer12.getBaseItemLabelGenerator();
        java.awt.Shape shape18 = statisticalBarRenderer12.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint19 = statisticalBarRenderer12.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.plot.Marker marker23 = null;
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        statisticalBarRenderer12.drawRangeMarker(graphics2D20, categoryPlot21, valueAxis22, marker23, rectangle2D24);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.plot.Marker marker29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        statisticalBarRenderer12.drawRangeMarker(graphics2D26, categoryPlot27, valueAxis28, marker29, rectangle2D30);
        java.lang.Boolean boolean33 = statisticalBarRenderer12.getSeriesCreateEntities((int) (byte) 10);
        java.awt.Stroke stroke35 = statisticalBarRenderer12.lookupSeriesStroke(1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke35);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
        org.junit.Assert.assertNull(font11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(stroke35);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = statisticalBarRenderer7.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint8);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        java.awt.Font font15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer11.setBaseItemLabelFont(font15);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 10, font15, true);
        java.awt.Paint paint19 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(font15);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        java.awt.Graphics2D graphics2D20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState25 = statisticalBarRenderer0.initialise(graphics2D20, rectangle2D21, categoryPlot22, 100, plotRenderingInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 0, 10);
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D10, rectangle2D11, categoryAxis12, valueAxis13, layer14, plotRenderingInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(font9);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        java.awt.Font font15 = statisticalBarRenderer0.getSeriesItemLabelFont(10);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(font15);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        java.awt.Font font11 = statisticalBarRenderer0.getItemLabelFont((int) 'a', (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(font11);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.plot.Marker marker46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D43, categoryPlot44, valueAxis45, marker46, rectangle2D47);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator49 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator49, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) '#', (int) (byte) 10);
        double double13 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer14.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setSeriesOutlinePaint(10, paint24);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer22.getBaseItemLabelGenerator();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseFillPaint(paint27);
        java.awt.Paint paint31 = statisticalBarRenderer22.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer14.setBasePaint(paint31);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator35 = statisticalBarRenderer14.getToolTipGenerator((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer14.getNegativeItemLabelPosition((int) '#', (int) (byte) 100);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition38);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer40 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(categoryToolTipGenerator35);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(gradientPaintTransformer40);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        double double30 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        int int18 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) 0.0d);
        java.util.List list19 = defaultStatisticalCategoryDataset0.getColumnKeys();
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(list19);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint21);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer19.getBaseItemLabelGenerator();
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke27 = statisticalBarRenderer19.lookupSeriesStroke((int) (byte) -1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke27);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesStroke((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33);
        java.awt.Stroke stroke36 = statisticalBarRenderer32.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer32.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setSeriesOutlinePaint(10, paint42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = statisticalBarRenderer40.getBaseItemLabelGenerator();
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setBaseFillPaint(paint45);
        java.awt.Paint paint49 = statisticalBarRenderer40.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer32.setBasePaint(paint49);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator53 = statisticalBarRenderer32.getToolTipGenerator((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition56 = statisticalBarRenderer32.getNegativeItemLabelPosition((int) '#', (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) -1, itemLabelPosition56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(categoryItemLabelGenerator44);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryToolTipGenerator53);
        org.junit.Assert.assertNotNull(itemLabelPosition56);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseItemLabelPaint(paint15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        java.awt.Shape shape15 = statisticalBarRenderer0.lookupSeriesShape((-1));
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent16 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent16);
        java.lang.Boolean boolean19 = statisticalBarRenderer0.getSeriesCreateEntities(0);
        boolean boolean20 = statisticalBarRenderer0.getBaseSeriesVisible();
        java.awt.Graphics2D graphics2D21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = null;
        java.awt.geom.Rectangle2D rectangle2D23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D21, categoryPlot22, rectangle2D23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        java.awt.Shape shape20 = statisticalBarRenderer14.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke23 = statisticalBarRenderer14.getItemOutlineStroke((-1), 100);
        java.awt.Stroke stroke25 = statisticalBarRenderer14.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke25);
        statisticalBarRenderer0.setSeriesVisible((int) '4', (java.lang.Boolean) false, true);
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D31, categoryPlot32, valueAxis33, rectangle2D34, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.lang.Object obj14 = statisticalBarRenderer0.clone();
        java.lang.Object obj15 = statisticalBarRenderer0.clone();
        java.awt.Shape shape17 = statisticalBarRenderer0.getSeriesShape((int) (byte) 10);
        java.awt.Graphics2D graphics2D18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.util.Layer layer22 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D18, rectangle2D19, categoryAxis20, valueAxis21, layer22, plotRenderingInfo23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNull(shape17);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setSeriesOutlinePaint(10, paint13);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer11.getBaseItemLabelGenerator();
        java.awt.Shape shape17 = statisticalBarRenderer11.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer11.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesFillPaint((int) '#', paint24);
        statisticalBarRenderer7.setSeriesOutlinePaint((int) (short) 1, paint24, false);
        statisticalBarRenderer0.setSeriesPaint((int) '#', paint24);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        double double14 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        statisticalBarRenderer15.setLegendItemURLGenerator(categorySeriesLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setSeriesStroke((int) (short) 100, stroke31, false);
        java.lang.Boolean boolean35 = statisticalBarRenderer15.getSeriesCreateEntities((int) 'a');
        boolean boolean36 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = statisticalBarRenderer15.getSeriesItemLabelGenerator((int) 'a');
        statisticalBarRenderer15.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator(0, categoryItemLabelGenerator43, false);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator38);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        double double4 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) 0);
        boolean boolean13 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 10, categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getMeanValue((java.lang.Comparable) 1.0d, (java.lang.Comparable) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number6 = null; // flaky: defaultStatisticalCategoryDataset0.getStdDevValue((int) (byte) -1, (int) (byte) 1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        double double14 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        statisticalBarRenderer15.setLegendItemURLGenerator(categorySeriesLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setSeriesStroke((int) (short) 100, stroke31, false);
        java.lang.Boolean boolean35 = statisticalBarRenderer15.getSeriesCreateEntities((int) 'a');
        boolean boolean36 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer38.setBaseURLGenerator(categoryURLGenerator39, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = null;
        statisticalBarRenderer38.setLegendItemURLGenerator(categorySeriesLabelGenerator42);
        boolean boolean44 = statisticalBarRenderer38.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = null;
        statisticalBarRenderer38.setPositiveItemLabelPositionFallback(itemLabelPosition45);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer38.getBaseNegativeItemLabelPosition();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer15.setSeriesNegativeItemLabelPosition((-1), itemLabelPosition47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        java.lang.Class<?> wildcardClass9 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.addChangeListener(datasetChangeListener1);
        int int3 = defaultStatisticalCategoryDataset0.getRowCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable comparable5 = null; // flaky: defaultStatisticalCategoryDataset0.getColumnKey((int) (byte) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24);
        statisticalBarRenderer23.setIncludeBaseInRange(false);
        boolean boolean29 = statisticalBarRenderer23.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke31 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) ' ');
        statisticalBarRenderer0.setBaseOutlineStroke(stroke31);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(stroke31);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setSeriesOutlinePaint(10, paint13);
        java.awt.Stroke stroke16 = statisticalBarRenderer11.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint26 = statisticalBarRenderer18.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer11.setSeriesOutlinePaint(0, paint26, false);
        double double29 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = null;
        statisticalBarRenderer30.setBaseURLGenerator(categoryURLGenerator31);
        java.awt.Paint paint34 = statisticalBarRenderer30.lookupSeriesPaint((-1));
        statisticalBarRenderer11.setBaseFillPaint(paint34, true);
        java.awt.Paint paint38 = statisticalBarRenderer11.lookupSeriesPaint((int) (byte) 100);
        java.awt.Paint paint39 = statisticalBarRenderer11.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint39, false);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 10);
        boolean boolean22 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator15);
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) -1, categoryItemLabelGenerator20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.LegendItemCollection legendItemCollection5 = statisticalBarRenderer0.getLegendItems();
        statisticalBarRenderer0.setMinimumBarLength((double) 1L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator12);
        boolean boolean14 = statisticalBarRenderer8.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint16 = statisticalBarRenderer8.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18);
        statisticalBarRenderer17.setIncludeBaseInRange(false);
        java.awt.Shape shape23 = statisticalBarRenderer17.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25);
        statisticalBarRenderer24.setIncludeBaseInRange(false);
        java.awt.Shape shape30 = statisticalBarRenderer24.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke33 = statisticalBarRenderer24.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer17.setBaseOutlineStroke(stroke33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = null;
        statisticalBarRenderer35.setLegendItemURLGenerator(categorySeriesLabelGenerator39);
        boolean boolean41 = statisticalBarRenderer35.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = null;
        statisticalBarRenderer35.setPositiveItemLabelPositionFallback(itemLabelPosition42);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = statisticalBarRenderer35.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer17.setNegativeItemLabelPositionFallback(itemLabelPosition44);
        statisticalBarRenderer8.setBaseNegativeItemLabelPosition(itemLabelPosition44);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition44);
        java.lang.Boolean boolean49 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        statisticalBarRenderer50.setBaseURLGenerator(categoryURLGenerator51, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator54 = null;
        statisticalBarRenderer50.setLegendItemURLGenerator(categorySeriesLabelGenerator54);
        boolean boolean56 = statisticalBarRenderer50.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = null;
        statisticalBarRenderer50.setPositiveItemLabelPositionFallback(itemLabelPosition57);
        java.awt.Graphics2D graphics2D59 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot60 = null;
        org.jfree.chart.axis.ValueAxis valueAxis61 = null;
        org.jfree.chart.plot.Marker marker62 = null;
        java.awt.geom.Rectangle2D rectangle2D63 = null;
        statisticalBarRenderer50.drawRangeMarker(graphics2D59, categoryPlot60, valueAxis61, marker62, rectangle2D63);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator66 = null;
        statisticalBarRenderer65.setBaseURLGenerator(categoryURLGenerator66, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator69 = null;
        statisticalBarRenderer65.setLegendItemURLGenerator(categorySeriesLabelGenerator69);
        boolean boolean71 = statisticalBarRenderer65.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer65.setBaseItemLabelsVisible(true);
        boolean boolean74 = statisticalBarRenderer65.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition77 = statisticalBarRenderer65.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer65.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer81 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator82 = null;
        statisticalBarRenderer81.setBaseURLGenerator(categoryURLGenerator82, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator85 = null;
        statisticalBarRenderer81.setLegendItemURLGenerator(categorySeriesLabelGenerator85);
        boolean boolean87 = statisticalBarRenderer81.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition88 = null;
        statisticalBarRenderer81.setPositiveItemLabelPositionFallback(itemLabelPosition88);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition90 = statisticalBarRenderer81.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer65.setBaseNegativeItemLabelPosition(itemLabelPosition90);
        statisticalBarRenderer50.setBaseNegativeItemLabelPosition(itemLabelPosition90, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition90, false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(legendItemCollection5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition44);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition77);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition90);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getBaseStroke();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesCreateEntities((int) '#');
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) 0);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer38.setSeriesOutlinePaint(10, paint40);
        boolean boolean42 = statisticalBarRenderer38.getAutoPopulateSeriesStroke();
        statisticalBarRenderer38.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator46 = null;
        statisticalBarRenderer45.setBaseURLGenerator(categoryURLGenerator46);
        statisticalBarRenderer45.setIncludeBaseInRange(false);
        java.awt.Shape shape51 = statisticalBarRenderer45.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator53 = null;
        statisticalBarRenderer52.setBaseURLGenerator(categoryURLGenerator53);
        statisticalBarRenderer52.setIncludeBaseInRange(false);
        java.awt.Shape shape58 = statisticalBarRenderer52.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke61 = statisticalBarRenderer52.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer45.setBaseOutlineStroke(stroke61);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer45.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint68 = statisticalBarRenderer45.getItemFillPaint(1, (int) (short) 1);
        statisticalBarRenderer38.setBaseItemLabelPaint(paint68, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (short) -1, paint68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNull(paint33);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shape51);
        org.junit.Assert.assertNotNull(shape58);
        org.junit.Assert.assertNotNull(stroke61);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertNotNull(paint68);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = null;
        statisticalBarRenderer16.setLegendItemURLGenerator(categorySeriesLabelGenerator20);
        boolean boolean22 = statisticalBarRenderer16.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = null;
        statisticalBarRenderer16.setPositiveItemLabelPositionFallback(itemLabelPosition23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer16.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition25);
        java.awt.Stroke stroke28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (byte) -1, stroke28, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNotNull(stroke28);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        int int5 = defaultStatisticalCategoryDataset0.getColumnCount();
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset6 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number9 = defaultStatisticalCategoryDataset6.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list10 = defaultStatisticalCategoryDataset6.getRowKeys();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener11 = null;
        defaultStatisticalCategoryDataset6.removeChangeListener(datasetChangeListener11);
        java.lang.Number number15 = defaultStatisticalCategoryDataset6.getValue((java.lang.Comparable) (short) -1, (java.lang.Comparable) ' ');
        int int16 = defaultStatisticalCategoryDataset6.getColumnCount();
        org.jfree.data.general.DatasetGroup datasetGroup17 = defaultStatisticalCategoryDataset6.getGroup();
        defaultStatisticalCategoryDataset0.setGroup(datasetGroup17);
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(number9);
        org.junit.Assert.assertNotNull(list10);
        org.junit.Assert.assertNull(number15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(datasetGroup17);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator10, false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint21);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer19.getBaseItemLabelGenerator();
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke27 = statisticalBarRenderer19.lookupSeriesStroke((int) (byte) -1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke27);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesStroke((int) (short) 100);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesItemLabelsVisible(10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 100, (int) (short) 10);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        double double11 = statisticalBarRenderer0.getMinimumBarLength();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.LegendItemCollection legendItemCollection5 = statisticalBarRenderer0.getLegendItems();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D6, categoryPlot7, categoryAxis8, categoryMarker9, rectangle2D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(legendItemCollection5);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer10.getBaseItemLabelGenerator();
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.Marker marker21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        statisticalBarRenderer10.drawRangeMarker(graphics2D18, categoryPlot19, valueAxis20, marker21, rectangle2D22);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer10.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer10.getPositiveItemLabelPosition((int) 'a', (int) (short) 100);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27, true);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        double double37 = statisticalBarRenderer33.getItemLabelAnchorOffset();
        statisticalBarRenderer33.setAutoPopulateSeriesStroke(false);
        statisticalBarRenderer33.setBaseSeriesVisible(true, false);
        java.awt.Stroke stroke44 = statisticalBarRenderer33.lookupSeriesOutlineStroke((int) (short) 10);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke44, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0d + "'", double37 == 2.0d);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28);
        statisticalBarRenderer27.setIncludeBaseInRange(false);
        java.awt.Shape shape33 = statisticalBarRenderer27.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35);
        statisticalBarRenderer34.setIncludeBaseInRange(false);
        java.awt.Shape shape40 = statisticalBarRenderer34.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke43 = statisticalBarRenderer34.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer27.setBaseOutlineStroke(stroke43);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) ' ', stroke43);
        boolean boolean47 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 10);
        java.awt.Paint paint48 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(shape33);
        org.junit.Assert.assertNotNull(shape40);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(paint48);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D10, categoryPlot11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator6, false);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((-1));
        statisticalBarRenderer0.setBaseCreateEntities(false);
        boolean boolean13 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(itemLabelPosition14);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Paint paint4 = statisticalBarRenderer0.lookupSeriesPaint((-1));
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint5);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) '#', 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 1);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemFillPaint((int) '4', 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D16, categoryPlot17, rectangle2D18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer10.getBaseItemLabelGenerator();
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.plot.Marker marker21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        statisticalBarRenderer10.drawRangeMarker(graphics2D18, categoryPlot19, valueAxis20, marker21, rectangle2D22);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer10.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer10.getPositiveItemLabelPosition((int) 'a', (int) (short) 100);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(10, categoryURLGenerator31);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        java.awt.Paint paint23 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer7.getBaseItemLabelGenerator();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint12);
        java.awt.Paint paint16 = statisticalBarRenderer7.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18);
        statisticalBarRenderer17.setIncludeBaseInRange(false);
        java.awt.Shape shape23 = statisticalBarRenderer17.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer7.setBaseShape(shape23, false);
        statisticalBarRenderer7.setMinimumBarLength((double) '4');
        boolean boolean29 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) (short) 0);
        java.awt.Stroke stroke31 = statisticalBarRenderer7.lookupSeriesOutlineStroke((int) ' ');
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke31);
        java.awt.Paint paint35 = statisticalBarRenderer0.getItemLabelPaint((int) (byte) 1, (-1));
        double double36 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setSeriesOutlinePaint(10, paint17);
        java.awt.Stroke stroke20 = statisticalBarRenderer15.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator22);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation24 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.lang.Boolean boolean5 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7);
        statisticalBarRenderer6.setIncludeBaseInRange(false);
        statisticalBarRenderer6.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        java.awt.Paint paint19 = statisticalBarRenderer6.getItemFillPaint((int) ' ', (int) '4');
        statisticalBarRenderer0.setBaseOutlinePaint(paint19, true);
        java.awt.Graphics2D graphics2D22 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = null;
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D22, categoryPlot23, rectangle2D24, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 1, paint7);
        java.awt.Shape shape10 = statisticalBarRenderer0.getSeriesShape(100);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(shape10);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Shape shape14 = statisticalBarRenderer8.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint15 = statisticalBarRenderer8.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesPaint(100, paint15);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = null;
        statisticalBarRenderer20.setLegendItemURLGenerator(categorySeriesLabelGenerator24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer27.setSeriesOutlinePaint(10, paint29);
        java.awt.Stroke stroke32 = statisticalBarRenderer27.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer20.setSeriesStroke((int) '#', stroke32);
        statisticalBarRenderer20.setBaseSeriesVisible(true);
        java.awt.Stroke stroke36 = statisticalBarRenderer20.getBaseOutlineStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (short) -1, stroke36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(stroke36);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        int int6 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator7);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer10.getBaseItemLabelGenerator();
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (short) 100);
        statisticalBarRenderer0.setBaseShape(shape16);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D18, categoryPlot19, categoryAxis20, categoryMarker21, rectangle2D22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(shape16);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator8);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator6, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getToolTipGenerator(0, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list4 = defaultStatisticalCategoryDataset0.getRowKeys();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener5 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener5);
        java.lang.Number number9 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) (short) -1, (java.lang.Comparable) ' ');
        double double11 = defaultStatisticalCategoryDataset0.getRangeLowerBound(false);
        int int12 = defaultStatisticalCategoryDataset0.getColumnCount();
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNull(number9);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemFillPaint((int) ' ', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = null;
        statisticalBarRenderer14.setLegendItemURLGenerator(categorySeriesLabelGenerator18);
        statisticalBarRenderer14.setSeriesVisible((int) (short) 0, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setSeriesOutlinePaint(10, paint26);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator28 = statisticalBarRenderer24.getBaseItemLabelGenerator();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer29 = statisticalBarRenderer24.getGradientPaintTransformer();
        statisticalBarRenderer14.setGradientPaintTransformer(gradientPaintTransformer29);
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer29);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryItemLabelGenerator28);
        org.junit.Assert.assertNotNull(gradientPaintTransformer29);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) ' ');
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setBaseShape(shape9, false);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D12, categoryPlot13, categoryAxis14, categoryMarker15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        java.lang.Object obj9 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((-1), itemLabelPosition11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
        org.junit.Assert.assertNotNull(obj9);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemOutlinePaint((int) '#', (int) '#');
        org.jfree.chart.event.RendererChangeListener rendererChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation28);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(10, categoryToolTipGenerator31);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        java.util.EventListener eventListener4 = null;
        boolean boolean5 = statisticalBarRenderer0.hasListener(eventListener4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        java.awt.Shape shape20 = statisticalBarRenderer14.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke23 = statisticalBarRenderer14.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer7.setBaseOutlineStroke(stroke23);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer25.setBaseURLGenerator(categoryURLGenerator26, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = null;
        statisticalBarRenderer25.setLegendItemURLGenerator(categorySeriesLabelGenerator29);
        boolean boolean31 = statisticalBarRenderer25.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = null;
        statisticalBarRenderer25.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer25.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer7.setNegativeItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer7.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(10, itemLabelPosition36, false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Shape shape7 = statisticalBarRenderer0.lookupSeriesShape((-1));
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shape7);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer19 = statisticalBarRenderer0.getGradientPaintTransformer();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer19);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        java.awt.Font font4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer0.setBaseItemLabelFont(font4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        java.awt.Shape shape20 = statisticalBarRenderer14.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke23 = statisticalBarRenderer14.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer7.setBaseOutlineStroke(stroke23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer7.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 0, itemLabelPosition27, false);
        java.awt.Graphics2D graphics2D30 = null;
        java.awt.geom.Rectangle2D rectangle2D31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.util.Layer layer34 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo35 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D30, rectangle2D31, categoryAxis32, valueAxis33, layer34, plotRenderingInfo35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator6, false);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((-1));
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset17 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number20 = defaultStatisticalCategoryDataset17.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int21 = defaultStatisticalCategoryDataset17.getColumnCount();
        int int22 = defaultStatisticalCategoryDataset17.getColumnCount();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D11, categoryItemRendererState12, rectangle2D13, categoryPlot14, categoryAxis15, valueAxis16, (org.jfree.data.category.CategoryDataset) defaultStatisticalCategoryDataset17, (int) (short) 1, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(number20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D15, categoryPlot16, categoryAxis17, categoryMarker18, rectangle2D19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(0, categoryItemLabelGenerator17);
        double double19 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22);
        statisticalBarRenderer21.setIncludeBaseInRange(false);
        java.awt.Shape shape27 = statisticalBarRenderer21.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer21.removeAnnotations();
        java.awt.Paint paint30 = statisticalBarRenderer21.lookupSeriesPaint(100);
        statisticalBarRenderer0.setSeriesItemLabelPaint(100, paint30, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(paint30);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 10);
        double double32 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = null;
        java.awt.geom.Rectangle2D rectangle2D35 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D33, categoryPlot34, rectangle2D35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator12);
        boolean boolean14 = statisticalBarRenderer8.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer8.setBaseItemLabelsVisible(true);
        java.awt.Paint paint17 = statisticalBarRenderer8.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint17);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 1);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        boolean boolean28 = statisticalBarRenderer0.getItemVisible((int) (byte) 1, (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = statisticalBarRenderer30.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setSeriesOutlinePaint(10, paint34);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = statisticalBarRenderer32.getBaseItemLabelGenerator();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setBaseFillPaint(paint37);
        java.awt.Paint paint41 = statisticalBarRenderer32.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43);
        statisticalBarRenderer42.setIncludeBaseInRange(false);
        java.awt.Shape shape48 = statisticalBarRenderer42.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer32.setBaseShape(shape48, false);
        statisticalBarRenderer30.setBaseShape(shape48, false);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape48);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(categoryToolTipGenerator23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(categoryItemLabelGenerator36);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(shape48);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (short) -1, (int) ' ');
        java.lang.Class<?> wildcardClass12 = paint11.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Font font22 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        java.awt.Stroke stroke25 = statisticalBarRenderer0.getSeriesStroke((int) (byte) -1);
        boolean boolean28 = statisticalBarRenderer0.getItemVisible((int) (short) 10, (int) '4');
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke16, true);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D19, categoryPlot20, valueAxis21, rectangle2D22, 3.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = null;
        statisticalBarRenderer9.setLegendItemURLGenerator(categorySeriesLabelGenerator13);
        boolean boolean15 = statisticalBarRenderer9.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint17 = statisticalBarRenderer9.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer9.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 0, itemLabelPosition20, true);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 0, paint24, true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation25 = null;
        org.jfree.chart.util.Layer layer26 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation25, layer26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        double double4 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12);
        java.awt.Stroke stroke15 = statisticalBarRenderer11.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer8.setBaseStroke(stroke15);
        java.awt.Paint paint18 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font21 = statisticalBarRenderer8.getBaseItemLabelFont();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((-1), font21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(font21);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        double double30 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean32 = statisticalBarRenderer0.isSeriesVisible((int) (short) 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean34 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryURLGenerator7);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        java.awt.Paint paint14 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 10);
        double double15 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        int int6 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator7);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true, true);
        java.awt.Paint paint26 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 0);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(paint26);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        java.lang.Boolean boolean40 = statisticalBarRenderer0.getSeriesItemLabelsVisible(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator48 = null;
        statisticalBarRenderer44.setLegendItemURLGenerator(categorySeriesLabelGenerator48);
        boolean boolean50 = statisticalBarRenderer44.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint52 = statisticalBarRenderer44.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator53 = statisticalBarRenderer44.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator53);
        java.lang.Object obj55 = statisticalBarRenderer0.clone();
        double double56 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator53);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2.0d + "'", double56 == 2.0d);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        boolean boolean23 = statisticalBarRenderer0.getItemCreateEntity((int) (short) -1, (int) (short) 1);
        java.awt.Paint paint25 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(paint25);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean15 = statisticalBarRenderer0.getIncludeBaseInRange();
        int int16 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19);
        java.awt.Stroke stroke22 = statisticalBarRenderer18.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer18.getNegativeItemLabelPosition(100, (int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) -1, itemLabelPosition25, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        double double14 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        statisticalBarRenderer15.setLegendItemURLGenerator(categorySeriesLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setSeriesStroke((int) (short) 100, stroke31, false);
        java.lang.Boolean boolean35 = statisticalBarRenderer15.getSeriesCreateEntities((int) 'a');
        boolean boolean36 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = statisticalBarRenderer15.getSeriesItemLabelGenerator((int) 'a');
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        double double41 = statisticalBarRenderer15.getMaximumBarWidth();
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator38);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 1.0d + "'", double41 == 1.0d);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke13);
        java.lang.Boolean boolean16 = statisticalBarRenderer0.getSeriesVisible(0);
        java.lang.Class<?> wildcardClass17 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 10, (java.lang.Boolean) false, false);
        java.lang.Class<?> wildcardClass11 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator14, false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean17 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = statisticalBarRenderer0.getItemLabelGenerator((int) ' ', (int) ' ');
        statisticalBarRenderer0.setBase((double) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        statisticalBarRenderer13.setIncludeBaseInRange(false);
        statisticalBarRenderer13.setAutoPopulateSeriesShape(true);
        java.awt.Font font22 = statisticalBarRenderer13.getItemLabelFont((int) (byte) 0, 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer13.getSeriesNegativeItemLabelPosition(0);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 1, itemLabelPosition24, true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator9);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator25, true);
        java.awt.Font font30 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 1, (int) (short) 10);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(font30);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot43 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis44 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker45 = null;
        java.awt.geom.Rectangle2D rectangle2D46 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D42, categoryPlot43, categoryAxis44, categoryMarker45, rectangle2D46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = null;
        statisticalBarRenderer11.setLegendItemURLGenerator(categorySeriesLabelGenerator15);
        boolean boolean17 = statisticalBarRenderer11.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer11.setBaseItemLabelsVisible(true);
        java.awt.Paint paint20 = statisticalBarRenderer11.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint20, true);
        java.awt.Stroke stroke23 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) ' ', categoryURLGenerator25, true);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent28 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent28);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        int int6 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator12);
        boolean boolean14 = statisticalBarRenderer8.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = null;
        statisticalBarRenderer8.setPositiveItemLabelPositionFallback(itemLabelPosition15);
        boolean boolean17 = statisticalBarRenderer8.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer18.setBaseItemLabelsVisible(true);
        boolean boolean27 = statisticalBarRenderer18.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer18.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator38 = null;
        statisticalBarRenderer34.setLegendItemURLGenerator(categorySeriesLabelGenerator38);
        boolean boolean40 = statisticalBarRenderer34.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = null;
        statisticalBarRenderer34.setPositiveItemLabelPositionFallback(itemLabelPosition41);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer34.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer18.setBaseNegativeItemLabelPosition(itemLabelPosition43);
        java.awt.Paint paint47 = statisticalBarRenderer18.getItemOutlinePaint((int) ' ', (int) (short) -1);
        statisticalBarRenderer8.setBasePaint(paint47, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((-1), paint47, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNotNull(paint47);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        boolean boolean7 = statisticalBarRenderer0.getItemVisible((int) (byte) 10, (-1));
        statisticalBarRenderer0.setBase(2.0d);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((int) (short) -1, categoryURLGenerator11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27);
        statisticalBarRenderer26.setIncludeBaseInRange(false);
        statisticalBarRenderer26.setAutoPopulateSeriesShape(true);
        java.awt.Font font35 = statisticalBarRenderer26.getItemLabelFont((int) (byte) 0, 10);
        statisticalBarRenderer0.setSeriesItemLabelFont(1, font35);
        boolean boolean37 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        java.awt.Graphics2D graphics2D38 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = null;
        java.awt.geom.Rectangle2D rectangle2D40 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D38, categoryPlot39, rectangle2D40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getBasePaint();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setSeriesOutlinePaint(10, paint23);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer21.getBaseItemLabelGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseFillPaint(paint26);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = null;
        statisticalBarRenderer21.setLegendItemToolTipGenerator(categorySeriesLabelGenerator28);
        java.awt.Paint paint30 = statisticalBarRenderer21.getBasePaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint30);
        boolean boolean32 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem36 = statisticalBarRenderer0.getLegendItem(0, 10);
        java.lang.Object obj37 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(categoryPlot33);
        org.junit.Assert.assertNull(legendItem36);
        org.junit.Assert.assertNotNull(obj37);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke24 = statisticalBarRenderer18.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer18.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getPositiveItemLabelPosition((int) '#', (int) (byte) 10);
        double double31 = statisticalBarRenderer18.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33);
        java.awt.Stroke stroke36 = statisticalBarRenderer32.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer32.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setSeriesOutlinePaint(10, paint42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = statisticalBarRenderer40.getBaseItemLabelGenerator();
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setBaseFillPaint(paint45);
        java.awt.Paint paint49 = statisticalBarRenderer40.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer32.setBasePaint(paint49);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator53 = statisticalBarRenderer32.getToolTipGenerator((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition56 = statisticalBarRenderer32.getNegativeItemLabelPosition((int) '#', (int) (byte) 100);
        statisticalBarRenderer18.setBasePositiveItemLabelPosition(itemLabelPosition56);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) -1, itemLabelPosition56, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1.0d + "'", double31 == 1.0d);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(categoryItemLabelGenerator44);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryToolTipGenerator53);
        org.junit.Assert.assertNotNull(itemLabelPosition56);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Font font22 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 10, (java.lang.Boolean) false, false);
        double double28 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 1.0d + "'", double28 == 1.0d);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        int int4 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setSeriesOutlinePaint(10, paint7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = statisticalBarRenderer5.getBaseItemLabelGenerator();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setBaseFillPaint(paint10);
        java.awt.Paint paint14 = statisticalBarRenderer5.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer5.setBaseShape(shape21, false);
        statisticalBarRenderer5.setMinimumBarLength((double) '4');
        statisticalBarRenderer5.setSeriesCreateEntities(1, (java.lang.Boolean) true, true);
        boolean boolean30 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer5);
        java.awt.Graphics2D graphics2D31 = null;
        java.awt.geom.Rectangle2D rectangle2D32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState36 = statisticalBarRenderer5.initialise(graphics2D31, rectangle2D32, categoryPlot33, (int) (byte) 1, plotRenderingInfo35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        java.lang.Number number14 = defaultStatisticalCategoryDataset0.getMeanValue((java.lang.Comparable) 0.0d, (java.lang.Comparable) 100.0d);
        defaultStatisticalCategoryDataset0.add((java.lang.Number) 100.0f, (java.lang.Number) 0.0d, (java.lang.Comparable) Double.NaN, (java.lang.Comparable) ' ');
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(number14);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer10.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setSeriesOutlinePaint(10, paint20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer18.getBaseItemLabelGenerator();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseFillPaint(paint23);
        java.awt.Paint paint27 = statisticalBarRenderer18.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer10.setBasePaint(paint27);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint27);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer35 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Paint paint37 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(gradientPaintTransformer35);
        org.junit.Assert.assertNull(paint37);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        boolean boolean13 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        java.awt.Paint paint19 = statisticalBarRenderer15.lookupSeriesPaint((-1));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseItemLabelPaint(paint20);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint20);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer1.setBaseURLGenerator(categoryURLGenerator12, false);
        boolean boolean15 = statisticalBarRenderer1.isDrawBarOutline();
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getMeanValue((java.lang.Comparable) 1.0d, (java.lang.Comparable) (short) 10);
        java.lang.Number number6 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) (short) 1, (java.lang.Comparable) 1);
        double double8 = defaultStatisticalCategoryDataset0.getRangeUpperBound(false);
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNull(number6);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier18 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(drawingSupplier18);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation28);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (byte) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator8);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) true, true);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setSeriesOutlinePaint(10, paint8);
        java.awt.Stroke stroke11 = statisticalBarRenderer6.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = null;
        statisticalBarRenderer13.setLegendItemURLGenerator(categorySeriesLabelGenerator17);
        boolean boolean19 = statisticalBarRenderer13.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint21 = statisticalBarRenderer13.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer6.setSeriesOutlinePaint(0, paint21, false);
        double double24 = statisticalBarRenderer6.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer25.setBaseURLGenerator(categoryURLGenerator26);
        java.awt.Paint paint29 = statisticalBarRenderer25.lookupSeriesPaint((-1));
        statisticalBarRenderer6.setBaseFillPaint(paint29, true);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) ' ', paint29);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 0, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer38.setSeriesOutlinePaint(10, paint40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = statisticalBarRenderer38.getBaseItemLabelGenerator();
        java.awt.Paint paint43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer38.setBaseFillPaint(paint43);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator45 = null;
        statisticalBarRenderer38.setLegendItemToolTipGenerator(categorySeriesLabelGenerator45);
        java.awt.Shape shape48 = statisticalBarRenderer38.lookupSeriesShape((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (byte) -1, shape48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNull(categoryItemLabelGenerator42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(shape48);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesVisible(0);
        boolean boolean12 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 1, 0);
        java.awt.Shape shape14 = statisticalBarRenderer0.getSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        java.awt.Paint paint20 = statisticalBarRenderer16.lookupSeriesPaint((-1));
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setBaseItemLabelPaint(paint21);
        java.awt.Font font25 = statisticalBarRenderer16.getItemLabelFont((int) '#', 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27);
        java.awt.Stroke stroke30 = statisticalBarRenderer26.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer26.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setSeriesOutlinePaint(10, paint36);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = statisticalBarRenderer34.getBaseItemLabelGenerator();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint39);
        java.awt.Paint paint43 = statisticalBarRenderer34.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer26.setBasePaint(paint43);
        statisticalBarRenderer16.setBaseItemLabelPaint(paint43, false);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer51.setBaseURLGenerator(categoryURLGenerator52, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator55 = null;
        statisticalBarRenderer51.setLegendItemURLGenerator(categorySeriesLabelGenerator55);
        boolean boolean57 = statisticalBarRenderer51.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer51.setBaseItemLabelsVisible(true);
        boolean boolean60 = statisticalBarRenderer51.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = statisticalBarRenderer51.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer51.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer67 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator68 = null;
        statisticalBarRenderer67.setBaseURLGenerator(categoryURLGenerator68, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator71 = null;
        statisticalBarRenderer67.setLegendItemURLGenerator(categorySeriesLabelGenerator71);
        boolean boolean73 = statisticalBarRenderer67.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition74 = null;
        statisticalBarRenderer67.setPositiveItemLabelPositionFallback(itemLabelPosition74);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition76 = statisticalBarRenderer67.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer51.setBaseNegativeItemLabelPosition(itemLabelPosition76);
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition(0, itemLabelPosition76);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition76);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(shape14);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNull(categoryItemLabelGenerator38);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition63);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition76);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator12);
        boolean boolean14 = statisticalBarRenderer8.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint16 = statisticalBarRenderer8.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 10, paint16, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = statisticalBarRenderer20.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23, false);
        java.awt.Font font26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer22.setBaseItemLabelFont(font26);
        statisticalBarRenderer20.setBaseItemLabelFont(font26);
        statisticalBarRenderer20.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator32, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator35 = null;
        statisticalBarRenderer31.setLegendItemURLGenerator(categorySeriesLabelGenerator35);
        boolean boolean37 = statisticalBarRenderer31.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer31.setBaseItemLabelsVisible(true);
        java.awt.Paint paint40 = statisticalBarRenderer31.getBasePaint();
        statisticalBarRenderer20.setBasePaint(paint40, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.lang.Object obj14 = statisticalBarRenderer0.clone();
        java.lang.Object obj15 = statisticalBarRenderer0.clone();
        java.awt.Shape shape17 = statisticalBarRenderer0.getSeriesShape((int) (byte) 10);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer18 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer18);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertNull(shape17);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list4 = defaultStatisticalCategoryDataset0.getRowKeys();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener5 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener5);
        int int8 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) (short) 0);
        defaultStatisticalCategoryDataset0.add((double) 10L, (double) (short) -1, (java.lang.Comparable) (-1.0f), (java.lang.Comparable) 1.0f);
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) -1);
        double double9 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        double double10 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0d + "'", double9 == 2.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setSeriesOutlinePaint(10, paint16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = statisticalBarRenderer14.getBaseItemLabelGenerator();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setBaseFillPaint(paint19);
        java.awt.Paint paint23 = statisticalBarRenderer14.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25);
        statisticalBarRenderer24.setIncludeBaseInRange(false);
        java.awt.Shape shape30 = statisticalBarRenderer24.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer14.setBaseShape(shape30, false);
        statisticalBarRenderer14.setMinimumBarLength((double) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = null;
        statisticalBarRenderer35.setLegendItemURLGenerator(categorySeriesLabelGenerator39);
        boolean boolean41 = statisticalBarRenderer35.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint43 = statisticalBarRenderer35.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator44 = statisticalBarRenderer35.getLegendItemLabelGenerator();
        statisticalBarRenderer14.setLegendItemLabelGenerator(categorySeriesLabelGenerator44);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator44);
        double double47 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer49.setBaseURLGenerator(categoryURLGenerator50);
        statisticalBarRenderer49.setIncludeBaseInRange(false);
        java.awt.Shape shape55 = statisticalBarRenderer49.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke58 = statisticalBarRenderer49.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke(10, stroke58, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation61 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(categoryItemLabelGenerator18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator44);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(shape55);
        org.junit.Assert.assertNotNull(stroke58);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        double double30 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean32 = statisticalBarRenderer0.isSeriesVisible((int) (short) 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D34, categoryPlot35, categoryAxis36, categoryMarker37, rectangle2D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator33);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 0, 10);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint13 = statisticalBarRenderer12.getBaseOutlinePaint();
        statisticalBarRenderer12.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer12.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        java.awt.Stroke stroke22 = statisticalBarRenderer18.getErrorIndicatorStroke();
        boolean boolean23 = statisticalBarRenderer12.equals((java.lang.Object) statisticalBarRenderer18);
        java.awt.Stroke stroke26 = statisticalBarRenderer18.getItemStroke(1, 100);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke26);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(stroke26);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisibleInLegend(1);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        defaultStatisticalCategoryDataset0.validateObject();
        int int18 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.List list19 = defaultStatisticalCategoryDataset0.getRowKeys();
        org.jfree.data.Range range21 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
        java.util.List list22 = defaultStatisticalCategoryDataset0.getRowKeys();
        java.util.List list23 = defaultStatisticalCategoryDataset0.getRowKeys();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number26 = defaultStatisticalCategoryDataset0.getMeanValue((int) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(range21);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(list23);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = statisticalBarRenderer7.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint8);
        boolean boolean10 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        int int3 = defaultStatisticalCategoryDataset0.getColumnCount();
        org.jfree.data.general.DatasetGroup datasetGroup4 = defaultStatisticalCategoryDataset0.getGroup();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(datasetGroup4);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState3 = null;
        java.awt.geom.Rectangle2D rectangle2D4 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset8 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener9 = null;
        defaultStatisticalCategoryDataset8.removeChangeListener(datasetChangeListener9);
        org.jfree.data.Range range12 = defaultStatisticalCategoryDataset8.getRangeBounds(false);
        org.jfree.data.Range range14 = defaultStatisticalCategoryDataset8.getRangeBounds(true);
        int int16 = defaultStatisticalCategoryDataset8.getColumnIndex((java.lang.Comparable) 0L);
        java.lang.Object obj17 = defaultStatisticalCategoryDataset8.clone();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D2, categoryItemRendererState3, rectangle2D4, categoryPlot5, categoryAxis6, valueAxis7, (org.jfree.data.category.CategoryDataset) defaultStatisticalCategoryDataset8, (int) (byte) 100, 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(range12);
        org.junit.Assert.assertNull(range14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(obj17);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer2.setSeriesOutlinePaint(10, paint4);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = statisticalBarRenderer2.getBaseItemLabelGenerator();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer2.setBaseFillPaint(paint7);
        java.awt.Paint paint11 = statisticalBarRenderer2.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        statisticalBarRenderer12.setIncludeBaseInRange(false);
        java.awt.Shape shape18 = statisticalBarRenderer12.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer2.setBaseShape(shape18, false);
        statisticalBarRenderer0.setBaseShape(shape18, false);
        java.awt.Paint paint24 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNull(categoryItemLabelGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) 0);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        java.awt.Graphics2D graphics2D37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.util.Layer layer41 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo42 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D37, rectangle2D38, categoryAxis39, valueAxis40, layer41, plotRenderingInfo42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNull(paint33);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer10.setBaseItemLabelsVisible(true);
        boolean boolean19 = statisticalBarRenderer10.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer10.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer10.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = null;
        statisticalBarRenderer26.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        boolean boolean32 = statisticalBarRenderer26.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = null;
        statisticalBarRenderer26.setPositiveItemLabelPositionFallback(itemLabelPosition33);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer26.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer10.setBaseNegativeItemLabelPosition(itemLabelPosition35);
        java.awt.Paint paint39 = statisticalBarRenderer10.getItemOutlinePaint((int) ' ', (int) (short) -1);
        statisticalBarRenderer0.setBasePaint(paint39, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setItemMargin((double) (short) -1);
        java.awt.Font font18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) -1, font18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font18);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities((int) '4');
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getItemOutlineStroke(0, (int) '#');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categoryURLGenerator20);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        int int4 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setSeriesOutlinePaint(10, paint7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = statisticalBarRenderer5.getBaseItemLabelGenerator();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setBaseFillPaint(paint10);
        java.awt.Paint paint14 = statisticalBarRenderer5.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer5.setBaseShape(shape21, false);
        statisticalBarRenderer5.setMinimumBarLength((double) '4');
        statisticalBarRenderer5.setSeriesCreateEntities(1, (java.lang.Boolean) true, true);
        boolean boolean30 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer5);
        statisticalBarRenderer5.removeAnnotations();
        java.awt.Paint paint32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer5.setBaseOutlinePaint(paint32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        java.awt.Shape shape20 = statisticalBarRenderer14.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke23 = statisticalBarRenderer14.getItemOutlineStroke((-1), 100);
        java.awt.Stroke stroke25 = statisticalBarRenderer14.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator32);
        java.awt.Stroke stroke35 = statisticalBarRenderer31.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer28.setBaseStroke(stroke35);
        boolean boolean37 = statisticalBarRenderer28.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint40 = statisticalBarRenderer28.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        statisticalBarRenderer0.setSeriesOutlinePaint(1, paint40);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) 'a', (int) (byte) 100);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        int int18 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) 0.0d);
        java.lang.Number number21 = defaultStatisticalCategoryDataset0.getMeanValue((java.lang.Comparable) Double.NaN, (java.lang.Comparable) 10L);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(number21);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        boolean boolean8 = statisticalBarRenderer0.isSeriesVisibleInLegend(0);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNull(categoryPlot11);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        statisticalBarRenderer19.setIncludeBaseInRange(false);
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27);
        statisticalBarRenderer26.setIncludeBaseInRange(false);
        java.awt.Shape shape32 = statisticalBarRenderer26.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke35 = statisticalBarRenderer26.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer19.setBaseOutlineStroke(stroke35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator41 = null;
        statisticalBarRenderer37.setLegendItemURLGenerator(categorySeriesLabelGenerator41);
        boolean boolean43 = statisticalBarRenderer37.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = null;
        statisticalBarRenderer37.setPositiveItemLabelPositionFallback(itemLabelPosition44);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer37.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer19.setNegativeItemLabelPositionFallback(itemLabelPosition46);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(1, itemLabelPosition46, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint53 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer51.setSeriesOutlinePaint(10, paint53);
        boolean boolean55 = statisticalBarRenderer51.getAutoPopulateSeriesStroke();
        boolean boolean56 = statisticalBarRenderer51.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator58 = null;
        statisticalBarRenderer57.setBaseURLGenerator(categoryURLGenerator58, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator61 = null;
        statisticalBarRenderer57.setLegendItemURLGenerator(categorySeriesLabelGenerator61);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer64 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator65 = null;
        statisticalBarRenderer64.setBaseURLGenerator(categoryURLGenerator65);
        statisticalBarRenderer64.setIncludeBaseInRange(false);
        java.awt.Shape shape70 = statisticalBarRenderer64.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke73 = statisticalBarRenderer64.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer57.setSeriesStroke((int) (short) 100, stroke73, false);
        java.awt.Stroke stroke77 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer57.setSeriesOutlineStroke(0, stroke77, true);
        statisticalBarRenderer57.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint82 = statisticalBarRenderer57.getBaseItemLabelPaint();
        statisticalBarRenderer51.setBasePaint(paint82);
        statisticalBarRenderer0.setSeriesItemLabelPaint(100, paint82);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(shape32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shape70);
        org.junit.Assert.assertNotNull(stroke73);
        org.junit.Assert.assertNotNull(stroke77);
        org.junit.Assert.assertNotNull(paint82);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setSeriesOutlinePaint(10, paint16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = statisticalBarRenderer14.getBaseItemLabelGenerator();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setBaseFillPaint(paint19);
        java.awt.Paint paint23 = statisticalBarRenderer14.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25);
        statisticalBarRenderer24.setIncludeBaseInRange(false);
        java.awt.Shape shape30 = statisticalBarRenderer24.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer14.setBaseShape(shape30, false);
        statisticalBarRenderer14.setMinimumBarLength((double) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = null;
        statisticalBarRenderer35.setLegendItemURLGenerator(categorySeriesLabelGenerator39);
        boolean boolean41 = statisticalBarRenderer35.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint43 = statisticalBarRenderer35.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator44 = statisticalBarRenderer35.getLegendItemLabelGenerator();
        statisticalBarRenderer14.setLegendItemLabelGenerator(categorySeriesLabelGenerator44);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator44);
        java.awt.Stroke stroke49 = statisticalBarRenderer0.getItemStroke((int) (short) 100, 0);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(categoryItemLabelGenerator18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator44);
        org.junit.Assert.assertNotNull(stroke49);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        double double4 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setSeriesOutlinePaint(10, paint14);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer12.getBaseItemLabelGenerator();
        boolean boolean17 = statisticalBarRenderer12.getAutoPopulateSeriesShape();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer12.getLegendItemLabelGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer12.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator19);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator19);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean15 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMinimumBarLength((double) 10L);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryToolTipGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.lang.Object obj14 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) -1, categoryItemLabelGenerator16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (short) -1, (int) ' ');
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(stroke15);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.addChangeListener(datasetChangeListener1);
        defaultStatisticalCategoryDataset0.validateObject();
        java.lang.Number number6 = defaultStatisticalCategoryDataset0.getStdDevValue((java.lang.Comparable) "hi!", (java.lang.Comparable) (byte) 100);
        defaultStatisticalCategoryDataset0.validateObject();
        org.junit.Assert.assertNull(number6);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint23 = statisticalBarRenderer0.getItemFillPaint(1, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer25.setSeriesOutlinePaint(10, paint27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        java.awt.Stroke stroke33 = statisticalBarRenderer29.getErrorIndicatorStroke();
        statisticalBarRenderer25.setBaseOutlineStroke(stroke33, true);
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke33, true);
        java.awt.Paint paint39 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        double double40 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setSeriesOutlinePaint(10, paint18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = statisticalBarRenderer16.getBaseItemLabelGenerator();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setBaseFillPaint(paint21);
        java.awt.Paint paint25 = statisticalBarRenderer16.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(true, false);
        boolean boolean29 = statisticalBarRenderer16.getBaseCreateEntities();
        java.awt.Stroke stroke30 = statisticalBarRenderer16.getBaseStroke();
        statisticalBarRenderer0.setBaseOutlineStroke(stroke30, false);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator12);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(categoryItemLabelGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(stroke30);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer10.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setSeriesOutlinePaint(10, paint20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer18.getBaseItemLabelGenerator();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseFillPaint(paint23);
        java.awt.Paint paint27 = statisticalBarRenderer18.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer10.setBasePaint(paint27);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint27);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer35 = statisticalBarRenderer0.getGradientPaintTransformer();
        boolean boolean38 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 100, 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(gradientPaintTransformer35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        int int5 = defaultStatisticalCategoryDataset0.getColumnCount();
        int int7 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) 3.0d);
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemOutlineStroke((-1), 100);
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesOutlinePaint(100);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D12, categoryPlot13, rectangle2D14, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(paint11);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        java.awt.Stroke stroke20 = statisticalBarRenderer16.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer13.setBaseStroke(stroke20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer13.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator23, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = null;
        statisticalBarRenderer26.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        boolean boolean32 = statisticalBarRenderer26.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint34 = statisticalBarRenderer26.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer13.setBaseOutlinePaint(paint34, false);
        statisticalBarRenderer0.setBasePaint(paint34, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier39 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.plot.CategoryPlot categoryPlot40 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(drawingSupplier39);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemOutlineStroke((-1), 100);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator8);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 100, categoryItemLabelGenerator14, false);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke35 = statisticalBarRenderer29.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer29.setBaseOutlinePaint(paint36, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer29.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition40);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.lang.Boolean boolean5 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 0);
        boolean boolean6 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.plot.Marker marker46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D43, categoryPlot44, valueAxis45, marker46, rectangle2D47);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation49 = null;
        org.jfree.chart.util.Layer layer50 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation49, layer50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = defaultStatisticalCategoryDataset0.hasListener(eventListener5);
        java.lang.Comparable comparable10 = null;
        defaultStatisticalCategoryDataset0.add((double) (-1.0f), (double) (byte) 1, (java.lang.Comparable) 1.0d, comparable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number14 = null; // flaky: defaultStatisticalCategoryDataset0.getStdDevValue((int) (short) -1, (int) (byte) 1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator6, false);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator16 = null;
        statisticalBarRenderer12.setLegendItemURLGenerator(categorySeriesLabelGenerator16);
        boolean boolean18 = statisticalBarRenderer12.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint20 = statisticalBarRenderer12.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22);
        statisticalBarRenderer21.setIncludeBaseInRange(false);
        java.awt.Shape shape27 = statisticalBarRenderer21.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29);
        statisticalBarRenderer28.setIncludeBaseInRange(false);
        java.awt.Shape shape34 = statisticalBarRenderer28.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke37 = statisticalBarRenderer28.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer21.setBaseOutlineStroke(stroke37);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator43 = null;
        statisticalBarRenderer39.setLegendItemURLGenerator(categorySeriesLabelGenerator43);
        boolean boolean45 = statisticalBarRenderer39.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = null;
        statisticalBarRenderer39.setPositiveItemLabelPositionFallback(itemLabelPosition46);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer39.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer21.setNegativeItemLabelPositionFallback(itemLabelPosition48);
        statisticalBarRenderer12.setBaseNegativeItemLabelPosition(itemLabelPosition48);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition48, true);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        int int4 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number7 = defaultStatisticalCategoryDataset0.getStdDevValue((int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        java.awt.Shape shape20 = statisticalBarRenderer14.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke23 = statisticalBarRenderer14.getItemOutlineStroke((-1), 100);
        java.awt.Stroke stroke25 = statisticalBarRenderer14.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke25);
        statisticalBarRenderer0.setSeriesVisible((int) '4', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = null;
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 0, itemLabelPosition32, true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9);
        statisticalBarRenderer8.setIncludeBaseInRange(false);
        statisticalBarRenderer8.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = null;
        statisticalBarRenderer20.setLegendItemURLGenerator(categorySeriesLabelGenerator24);
        boolean boolean26 = statisticalBarRenderer20.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = null;
        statisticalBarRenderer20.setPositiveItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer20.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition29, false);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition29, true);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemFillPaint((int) ' ', (int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint11 = statisticalBarRenderer10.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        java.awt.Font font16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer12.setBaseItemLabelFont(font16);
        statisticalBarRenderer10.setBaseItemLabelFont(font16);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 100, font16);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(font16);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke24);
        java.awt.Font font26 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset28 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener29 = null;
        defaultStatisticalCategoryDataset28.removeChangeListener(datasetChangeListener29);
        int int32 = defaultStatisticalCategoryDataset28.getRowIndex((java.lang.Comparable) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setSeriesOutlinePaint(10, paint35);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = statisticalBarRenderer33.getBaseItemLabelGenerator();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setBaseFillPaint(paint38);
        java.awt.Paint paint42 = statisticalBarRenderer33.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator44 = null;
        statisticalBarRenderer43.setBaseURLGenerator(categoryURLGenerator44);
        statisticalBarRenderer43.setIncludeBaseInRange(false);
        java.awt.Shape shape49 = statisticalBarRenderer43.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer33.setBaseShape(shape49, false);
        statisticalBarRenderer33.setMinimumBarLength((double) '4');
        statisticalBarRenderer33.setSeriesCreateEntities(1, (java.lang.Boolean) true, true);
        boolean boolean58 = defaultStatisticalCategoryDataset28.equals((java.lang.Object) statisticalBarRenderer33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer60.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.lang.Boolean boolean65 = statisticalBarRenderer60.getSeriesItemLabelsVisible((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator67 = null;
        statisticalBarRenderer66.setBaseURLGenerator(categoryURLGenerator67);
        statisticalBarRenderer66.setIncludeBaseInRange(false);
        statisticalBarRenderer66.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer66.setBaseCreateEntities(true, false);
        java.awt.Paint paint79 = statisticalBarRenderer66.getItemFillPaint((int) ' ', (int) '4');
        statisticalBarRenderer60.setBaseOutlinePaint(paint79, true);
        statisticalBarRenderer33.setSeriesPaint(10, paint79);
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint79, false);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(categoryItemLabelGenerator37);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(shape49);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(paint79);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.addChangeListener(datasetChangeListener1);
        org.jfree.data.Range range4 = defaultStatisticalCategoryDataset0.getRangeBounds(true);
        int int6 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) (short) 100);
        org.junit.Assert.assertNull(range4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer0.getToolTipGenerator((int) 'a', (int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent28 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent28);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categoryPlot25);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) ' ');
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setBaseShape(shape9, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        java.awt.Paint paint16 = statisticalBarRenderer12.lookupSeriesPaint((-1));
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setBaseItemLabelPaint(paint17);
        java.awt.Font font21 = statisticalBarRenderer12.getItemLabelFont((int) '#', 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) (short) 1);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(0, categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        boolean boolean15 = statisticalBarRenderer0.isItemLabelVisible(10, (-1));
        org.jfree.chart.LegendItemCollection legendItemCollection16 = statisticalBarRenderer0.getLegendItems();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(legendItemCollection16);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean15 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Font font16 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryToolTipGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font16);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint7, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        double double12 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator14);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 10);
        double double32 = statisticalBarRenderer0.getMaximumBarWidth();
        boolean boolean33 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator34);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 10.0d + "'", double32 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        boolean boolean12 = statisticalBarRenderer8.getAutoPopulateSeriesStroke();
        statisticalBarRenderer8.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setBaseOutlineStroke(stroke31);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer15.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint38 = statisticalBarRenderer15.getItemFillPaint(1, (int) (short) 1);
        statisticalBarRenderer8.setBaseItemLabelPaint(paint38, false);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint38);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, false);
        boolean boolean45 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getSeriesOutlineStroke((-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(stroke11);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D5, categoryPlot6, rectangle2D7, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 0, 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer0.getItemLabelGenerator((int) (byte) 100, (int) (short) 0);
        boolean boolean13 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke20 = statisticalBarRenderer14.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = statisticalBarRenderer14.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer14.getPositiveItemLabelPosition((int) '#', (int) (byte) 10);
        double double27 = statisticalBarRenderer14.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29);
        java.awt.Stroke stroke32 = statisticalBarRenderer28.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer28.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setSeriesOutlinePaint(10, paint38);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = statisticalBarRenderer36.getBaseItemLabelGenerator();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setBaseFillPaint(paint41);
        java.awt.Paint paint45 = statisticalBarRenderer36.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer28.setBasePaint(paint45);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator49 = statisticalBarRenderer28.getToolTipGenerator((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer28.getNegativeItemLabelPosition((int) '#', (int) (byte) 100);
        statisticalBarRenderer14.setBasePositiveItemLabelPosition(itemLabelPosition52);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer14.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition54, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(categoryToolTipGenerator23);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categoryItemLabelGenerator40);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNull(categoryToolTipGenerator49);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer5.setBaseURLGenerator(categoryURLGenerator6, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = null;
        statisticalBarRenderer5.setLegendItemURLGenerator(categorySeriesLabelGenerator9);
        boolean boolean11 = statisticalBarRenderer5.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint13 = statisticalBarRenderer5.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        statisticalBarRenderer14.setIncludeBaseInRange(false);
        java.awt.Shape shape20 = statisticalBarRenderer14.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22);
        statisticalBarRenderer21.setIncludeBaseInRange(false);
        java.awt.Shape shape27 = statisticalBarRenderer21.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke30 = statisticalBarRenderer21.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer14.setBaseOutlineStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = null;
        statisticalBarRenderer32.setLegendItemURLGenerator(categorySeriesLabelGenerator36);
        boolean boolean38 = statisticalBarRenderer32.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = null;
        statisticalBarRenderer32.setPositiveItemLabelPositionFallback(itemLabelPosition39);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer32.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer14.setNegativeItemLabelPositionFallback(itemLabelPosition41);
        statisticalBarRenderer5.setBaseNegativeItemLabelPosition(itemLabelPosition41);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer5.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator45);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator47 = statisticalBarRenderer5.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D48 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot49 = null;
        org.jfree.chart.axis.ValueAxis valueAxis50 = null;
        org.jfree.chart.plot.Marker marker51 = null;
        java.awt.geom.Rectangle2D rectangle2D52 = null;
        statisticalBarRenderer5.drawRangeMarker(graphics2D48, categoryPlot49, valueAxis50, marker51, rectangle2D52);
        java.awt.Font font54 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font54, false);
        java.awt.Paint paint58 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        double double61 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator47);
        org.junit.Assert.assertNotNull(font54);
        org.junit.Assert.assertNull(paint58);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint7, false);
        double double10 = statisticalBarRenderer0.getUpperClip();
        statisticalBarRenderer0.setBaseCreateEntities(true, true);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        java.awt.Shape shape15 = statisticalBarRenderer0.lookupSeriesShape((-1));
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent16 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent16);
        java.lang.Boolean boolean19 = statisticalBarRenderer0.getSeriesCreateEntities(0);
        boolean boolean20 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean21 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        double double11 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getSeriesOutlineStroke((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNull(stroke13);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator19);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator22, true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = statisticalBarRenderer5.getBaseOutlinePaint();
        statisticalBarRenderer0.setBasePaint(paint6, false);
        int int9 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.plot.Marker marker46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D43, categoryPlot44, valueAxis45, marker46, rectangle2D47);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator50, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator27);
        java.awt.Font font30 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 100);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(font30);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getURLGenerator((int) (byte) 100, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) '#', (int) (byte) 10);
        double double13 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        java.util.EventListener eventListener4 = null;
        boolean boolean5 = statisticalBarRenderer0.hasListener(eventListener4);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible(100);
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesPaint((int) '#');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(paint9);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        boolean boolean13 = statisticalBarRenderer0.isSeriesVisible(1);
        boolean boolean15 = statisticalBarRenderer0.isSeriesItemLabelsVisible(0);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        boolean boolean17 = statisticalBarRenderer0.getItemVisible((-1), (int) (byte) 1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) 0);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        java.awt.Paint paint23 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator25);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 1);
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint9);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer0.getToolTipGenerator((int) 'a', (int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25);
        java.awt.Stroke stroke28 = statisticalBarRenderer24.lookupSeriesOutlineStroke(100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint30 = statisticalBarRenderer29.getBaseOutlinePaint();
        statisticalBarRenderer24.setBasePaint(paint30, false);
        statisticalBarRenderer0.setBasePaint(paint30);
        double double34 = statisticalBarRenderer0.getMaximumBarWidth();
        statisticalBarRenderer0.setBaseCreateEntities(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41);
        java.awt.Stroke stroke44 = statisticalBarRenderer40.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer37.setBaseStroke(stroke44);
        statisticalBarRenderer0.setBaseStroke(stroke44, true);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1.0d + "'", double34 == 1.0d);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(0, categoryItemLabelGenerator15, true);
        java.awt.Stroke stroke20 = statisticalBarRenderer0.getItemOutlineStroke(0, (int) '4');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Stroke stroke14 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(itemLabelPosition15);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint21);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer19.getBaseItemLabelGenerator();
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke27 = statisticalBarRenderer19.lookupSeriesStroke((int) (byte) -1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke27);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesStroke((int) (short) 100);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesItemLabelsVisible(10);
        java.awt.Paint paint33 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlinePaint(paint33, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer10.getBaseItemLabelGenerator();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer10.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer15);
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 100, (int) ' ');
        java.awt.Graphics2D graphics2D20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.util.Layer layer24 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D20, rectangle2D21, categoryAxis22, valueAxis23, layer24, plotRenderingInfo25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator6, false);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape((int) (short) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape13);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) 'a', (int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setSeriesOutlinePaint(10, paint23);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer21.getBaseItemLabelGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseFillPaint(paint26);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = null;
        statisticalBarRenderer21.setLegendItemToolTipGenerator(categorySeriesLabelGenerator28);
        java.awt.Paint paint30 = statisticalBarRenderer21.getBasePaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint30);
        boolean boolean32 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem36 = statisticalBarRenderer0.getLegendItem(0, 10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(categoryPlot33);
        org.junit.Assert.assertNull(legendItem36);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) -1, (int) 'a');
        java.awt.Paint paint23 = statisticalBarRenderer0.getItemFillPaint(1, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer25.setSeriesOutlinePaint(10, paint27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        java.awt.Stroke stroke33 = statisticalBarRenderer29.getErrorIndicatorStroke();
        statisticalBarRenderer25.setBaseOutlineStroke(stroke33, true);
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke33, true);
        java.awt.Paint paint39 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setSeriesOutlinePaint(10, paint42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = statisticalBarRenderer40.getBaseItemLabelGenerator();
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setBaseFillPaint(paint45);
        java.awt.Paint paint49 = statisticalBarRenderer40.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        statisticalBarRenderer50.setBaseURLGenerator(categoryURLGenerator51, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator54 = null;
        statisticalBarRenderer50.setLegendItemURLGenerator(categorySeriesLabelGenerator54);
        boolean boolean56 = statisticalBarRenderer50.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint58 = statisticalBarRenderer50.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition61 = statisticalBarRenderer50.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer40.setBaseNegativeItemLabelPosition(itemLabelPosition61);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition61, false);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(categoryItemLabelGenerator44);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(itemLabelPosition61);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        int int30 = statisticalBarRenderer0.getPassCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) 'a');
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(categoryToolTipGenerator32);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        java.util.List list13 = defaultStatisticalCategoryDataset0.getRowKeys();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number16 = defaultStatisticalCategoryDataset0.getStdDevValue(0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(list13);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        double double11 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(1);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 0);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        int int6 = statisticalBarRenderer0.getColumnCount();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator30, true);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean39 = statisticalBarRenderer0.getItemCreateEntity(1, (int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator42 = statisticalBarRenderer0.getURLGenerator(100, (int) (byte) -1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation43 = null;
        org.jfree.chart.util.Layer layer44 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation43, layer44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(categoryURLGenerator42);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint25 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean27 = statisticalBarRenderer0.getSeriesVisibleInLegend(0);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.plot.Marker marker31 = null;
        java.awt.geom.Rectangle2D rectangle2D32 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D28, categoryPlot29, valueAxis30, marker31, rectangle2D32);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemOutlineStroke((-1), 100);
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesOutlinePaint(100);
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D13, categoryPlot14, categoryAxis15, categoryMarker16, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke24);
        java.awt.Font font26 = statisticalBarRenderer0.getBaseItemLabelFont();
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(font26);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getSeriesOutlineStroke(100);
        boolean boolean8 = statisticalBarRenderer0.isSeriesVisibleInLegend(100);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = statisticalBarRenderer7.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint8);
        boolean boolean10 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        boolean boolean12 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer13 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(gradientPaintTransformer13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint45 = statisticalBarRenderer0.getItemPaint((int) (short) 100, (int) ' ');
        java.awt.Graphics2D graphics2D46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState51 = statisticalBarRenderer0.initialise(graphics2D46, rectangle2D47, categoryPlot48, (int) (byte) 1, plotRenderingInfo50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint45);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator15);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator18 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (byte) 0, categoryToolTipGenerator18, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer0.getURLGenerator(0, (int) (short) -1);
        boolean boolean24 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        statisticalBarRenderer0.removeAnnotations();
        java.awt.Paint paint14 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        defaultStatisticalCategoryDataset0.validateObject();
        int int18 = defaultStatisticalCategoryDataset0.getColumnCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number21 = null; // flaky: defaultStatisticalCategoryDataset0.getMeanValue((int) (short) -1, 1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        double double16 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.0d + "'", double16 == 2.0d);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer14.setBaseStroke(stroke21);
        java.awt.Paint paint24 = statisticalBarRenderer14.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer14.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = null;
        statisticalBarRenderer30.setBaseURLGenerator(categoryURLGenerator31);
        java.awt.Stroke stroke34 = statisticalBarRenderer30.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer27.setBaseStroke(stroke34);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer27.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator37, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator44 = null;
        statisticalBarRenderer40.setLegendItemURLGenerator(categorySeriesLabelGenerator44);
        boolean boolean46 = statisticalBarRenderer40.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint48 = statisticalBarRenderer40.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer27.setBaseOutlinePaint(paint48, false);
        statisticalBarRenderer14.setBasePaint(paint48, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier53 = statisticalBarRenderer14.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator56 = statisticalBarRenderer14.getItemLabelGenerator((int) 'a', (int) 'a');
        java.awt.Paint paint57 = statisticalBarRenderer14.getBaseItemLabelPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) -1, paint57, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertNull(drawingSupplier53);
        org.junit.Assert.assertNull(categoryItemLabelGenerator56);
        org.junit.Assert.assertNotNull(paint57);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemOutlinePaint((int) '#', (int) '#');
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, true);
        statisticalBarRenderer0.setItemMargin(2.0d);
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot16);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemOutlineStroke((-1), 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        java.awt.Paint paint14 = statisticalBarRenderer10.lookupSeriesPaint((-1));
        statisticalBarRenderer10.setSeriesItemLabelsVisible(100, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke25 = statisticalBarRenderer19.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer19.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer19.getPositiveItemLabelPosition((int) '#', (int) (byte) 10);
        double double32 = statisticalBarRenderer19.getMaximumBarWidth();
        java.awt.Paint paint35 = statisticalBarRenderer19.getItemLabelPaint((int) 'a', (int) (byte) 100);
        statisticalBarRenderer10.setSeriesItemLabelPaint((int) (byte) 1, paint35, false);
        boolean boolean38 = statisticalBarRenderer0.equals((java.lang.Object) false);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 1.0d + "'", double32 == 1.0d);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        boolean boolean15 = statisticalBarRenderer0.isItemLabelVisible(10, (-1));
        org.jfree.chart.LegendItemCollection legendItemCollection16 = statisticalBarRenderer0.getLegendItems();
        boolean boolean17 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(legendItemCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = statisticalBarRenderer5.getBaseOutlinePaint();
        statisticalBarRenderer0.setBasePaint(paint6, false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint6);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getIncludeBaseInRange();
        boolean boolean7 = statisticalBarRenderer0.isItemLabelVisible(10, (int) '4');
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = statisticalBarRenderer7.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint8);
        boolean boolean10 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        boolean boolean12 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) ' ');
        java.awt.Shape shape14 = null;
        statisticalBarRenderer0.setSeriesShape(0, shape14);
        java.awt.Font font17 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font17, true);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer0.getToolTipGenerator((int) '4', 10);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 0, categoryURLGenerator19);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        java.awt.Stroke stroke20 = statisticalBarRenderer16.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer13.setBaseStroke(stroke20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer13.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator23, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = null;
        statisticalBarRenderer26.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        boolean boolean32 = statisticalBarRenderer26.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint34 = statisticalBarRenderer26.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer13.setBaseOutlinePaint(paint34, false);
        statisticalBarRenderer0.setBasePaint(paint34, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier39 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer40.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke46 = statisticalBarRenderer40.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer40.setBaseOutlinePaint(paint47, false);
        statisticalBarRenderer0.setBasePaint(paint47, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator52 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(drawingSupplier39);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator52);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list4 = defaultStatisticalCategoryDataset0.getRowKeys();
        defaultStatisticalCategoryDataset0.validateObject();
        java.lang.Number number8 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) (byte) -1, (java.lang.Comparable) (byte) 10);
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertNotNull(list4);
        org.junit.Assert.assertNull(number8);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer3.setBaseURLGenerator(categoryURLGenerator4);
        java.awt.Stroke stroke7 = statisticalBarRenderer3.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        java.awt.Stroke stroke20 = statisticalBarRenderer16.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer13.setBaseStroke(stroke20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer13.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator23, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = null;
        statisticalBarRenderer26.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        boolean boolean32 = statisticalBarRenderer26.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint34 = statisticalBarRenderer26.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer13.setBaseOutlinePaint(paint34, false);
        statisticalBarRenderer0.setBasePaint(paint34, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator25, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator29, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator32);
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.chart.plot.Marker marker37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D34, categoryPlot35, valueAxis36, marker37, rectangle2D38);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator5, false);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        boolean boolean15 = statisticalBarRenderer0.isItemLabelVisible(10, (-1));
        org.jfree.chart.LegendItemCollection legendItemCollection16 = statisticalBarRenderer0.getLegendItems();
        boolean boolean17 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint21);
        boolean boolean23 = statisticalBarRenderer19.getAutoPopulateSeriesStroke();
        statisticalBarRenderer19.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.LegendItemCollection legendItemCollection26 = statisticalBarRenderer19.getLegendItems();
        java.awt.Stroke stroke27 = statisticalBarRenderer19.getBaseStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (byte) -1, stroke27, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(legendItemCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(legendItemCollection26);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 1);
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint9);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset15 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number18 = defaultStatisticalCategoryDataset15.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int19 = defaultStatisticalCategoryDataset15.getColumnCount();
        double double21 = defaultStatisticalCategoryDataset15.getRangeUpperBound(true);
        org.jfree.data.Range range22 = statisticalBarRenderer0.findRangeBounds((org.jfree.data.category.CategoryDataset) defaultStatisticalCategoryDataset15);
        java.awt.Stroke stroke24 = statisticalBarRenderer0.lookupSeriesStroke((int) '#');
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(number18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNull(range22);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer10.getBaseItemLabelGenerator();
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer10.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer10.setSeriesFillPaint((int) '#', paint23);
        statisticalBarRenderer0.setBasePaint(paint23, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) 100);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryURLGenerator28);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer7.setBaseItemLabelsVisible(true);
        boolean boolean16 = statisticalBarRenderer7.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer7.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer7.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = null;
        statisticalBarRenderer23.setLegendItemURLGenerator(categorySeriesLabelGenerator27);
        boolean boolean29 = statisticalBarRenderer23.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = null;
        statisticalBarRenderer23.setPositiveItemLabelPositionFallback(itemLabelPosition30);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer23.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer7.setBaseNegativeItemLabelPosition(itemLabelPosition32);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        int int35 = statisticalBarRenderer0.getColumnCount();
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis40 = null;
        org.jfree.chart.axis.ValueAxis valueAxis41 = null;
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset42 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number45 = defaultStatisticalCategoryDataset42.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int46 = defaultStatisticalCategoryDataset42.getColumnCount();
        double double48 = defaultStatisticalCategoryDataset42.getRangeUpperBound(true);
        org.jfree.data.general.DatasetGroup datasetGroup49 = defaultStatisticalCategoryDataset42.getGroup();
        int int51 = defaultStatisticalCategoryDataset42.getRowIndex((java.lang.Comparable) 100);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D36, categoryItemRendererState37, rectangle2D38, categoryPlot39, categoryAxis40, valueAxis41, (org.jfree.data.category.CategoryDataset) defaultStatisticalCategoryDataset42, (int) '4', (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(number45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(datasetGroup49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28);
        statisticalBarRenderer27.setIncludeBaseInRange(false);
        java.awt.Shape shape33 = statisticalBarRenderer27.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35);
        statisticalBarRenderer34.setIncludeBaseInRange(false);
        java.awt.Shape shape40 = statisticalBarRenderer34.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke43 = statisticalBarRenderer34.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer27.setBaseOutlineStroke(stroke43);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) ' ', stroke43);
        boolean boolean47 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 10);
        java.awt.Paint paint48 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) 1);
        boolean boolean51 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(shape33);
        org.junit.Assert.assertNotNull(shape40);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint13);
        java.awt.Paint paint17 = statisticalBarRenderer8.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBasePaint(paint17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator20);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.lang.Boolean boolean5 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7);
        statisticalBarRenderer6.setIncludeBaseInRange(false);
        statisticalBarRenderer6.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        java.awt.Paint paint19 = statisticalBarRenderer6.getItemFillPaint((int) ' ', (int) '4');
        statisticalBarRenderer0.setBaseOutlinePaint(paint19, true);
        java.lang.Class<?> wildcardClass22 = paint19.getClass();
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = statisticalBarRenderer10.getPlot();
        double double16 = statisticalBarRenderer10.getMaximumBarWidth();
        java.awt.Stroke stroke17 = statisticalBarRenderer10.getBaseStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator21);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryPlot15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener5 = null;
        defaultStatisticalCategoryDataset0.addChangeListener(datasetChangeListener5);
        int int8 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number11 = null; // flaky: defaultStatisticalCategoryDataset0.getStdDevValue((-1), 0);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 0, 10);
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(obj10);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = defaultStatisticalCategoryDataset0.hasListener(eventListener5);
        java.lang.Comparable comparable10 = null;
        defaultStatisticalCategoryDataset0.add((double) (-1.0f), (double) (byte) 1, (java.lang.Comparable) 1.0d, comparable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number14 = null; // flaky: defaultStatisticalCategoryDataset0.getMeanValue((-1), (int) (short) 100);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator23, true);
        boolean boolean26 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemOutlinePaint((int) '#', (int) '#');
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, true);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setMinimumBarLength((double) (short) 0);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent17 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent17);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = null;
        statisticalBarRenderer2.setLegendItemURLGenerator(categorySeriesLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer2.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer2.setBaseItemLabelsVisible(true);
        boolean boolean11 = statisticalBarRenderer2.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer2.getPositiveItemLabelPosition(100, (int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        java.awt.Paint paint19 = statisticalBarRenderer15.lookupSeriesPaint((-1));
        statisticalBarRenderer2.setBasePaint(paint19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = statisticalBarRenderer21.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24, false);
        java.awt.Font font27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer23.setBaseItemLabelFont(font27);
        statisticalBarRenderer21.setBaseItemLabelFont(font27);
        statisticalBarRenderer21.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = null;
        statisticalBarRenderer32.setLegendItemURLGenerator(categorySeriesLabelGenerator36);
        boolean boolean38 = statisticalBarRenderer32.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer32.setBaseItemLabelsVisible(true);
        java.awt.Paint paint41 = statisticalBarRenderer32.getBasePaint();
        statisticalBarRenderer21.setBasePaint(paint41, true);
        statisticalBarRenderer2.setBaseFillPaint(paint41);
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 0, paint41);
        java.awt.Graphics2D graphics2D46 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot47 = null;
        org.jfree.chart.axis.ValueAxis valueAxis48 = null;
        java.awt.geom.Rectangle2D rectangle2D49 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D46, categoryPlot47, valueAxis48, rectangle2D49, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(paint41);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset3 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number6 = defaultStatisticalCategoryDataset3.getMeanValue((java.lang.Comparable) 1.0d, (java.lang.Comparable) (short) 10);
        org.jfree.data.Range range7 = statisticalBarRenderer0.findRangeBounds((org.jfree.data.category.CategoryDataset) defaultStatisticalCategoryDataset3);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.LegendItemCollection legendItemCollection10 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(number6);
        org.junit.Assert.assertNull(range7);
        org.junit.Assert.assertNotNull(legendItemCollection10);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        int int15 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setSeriesOutlinePaint(10, paint19);
        boolean boolean21 = statisticalBarRenderer17.getAutoPopulateSeriesStroke();
        boolean boolean22 = statisticalBarRenderer17.getAutoPopulateSeriesOutlineStroke();
        boolean boolean25 = statisticalBarRenderer17.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer17.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) 'a', itemLabelPosition28, true);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        java.lang.Boolean boolean40 = statisticalBarRenderer0.getSeriesItemLabelsVisible(0);
        java.awt.Graphics2D graphics2D41 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot42 = null;
        org.jfree.chart.axis.ValueAxis valueAxis43 = null;
        org.jfree.chart.plot.Marker marker44 = null;
        java.awt.geom.Rectangle2D rectangle2D45 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D41, categoryPlot42, valueAxis43, marker44, rectangle2D45);
        java.awt.Graphics2D graphics2D47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = null;
        java.awt.geom.Rectangle2D rectangle2D49 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D47, categoryPlot48, rectangle2D49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20, true);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = null;
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D23, categoryPlot24, rectangle2D25, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        double double4 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        double double7 = statisticalBarRenderer0.getItemMargin();
        boolean boolean9 = statisticalBarRenderer0.isSeriesVisibleInLegend(1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 2.0d + "'", double4 == 2.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.2d + "'", double7 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getBaseURLGenerator();
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) -1, categoryToolTipGenerator12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        boolean boolean7 = statisticalBarRenderer0.getItemVisible((int) (byte) 10, (-1));
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getItemStroke(100, (int) '#');
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getSeriesOutlineStroke((int) 'a');
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNull(stroke13);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener1 = null;
        defaultStatisticalCategoryDataset0.removeChangeListener(datasetChangeListener1);
        int int4 = defaultStatisticalCategoryDataset0.getRowIndex((java.lang.Comparable) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setSeriesOutlinePaint(10, paint7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = statisticalBarRenderer5.getBaseItemLabelGenerator();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setBaseFillPaint(paint10);
        java.awt.Paint paint14 = statisticalBarRenderer5.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16);
        statisticalBarRenderer15.setIncludeBaseInRange(false);
        java.awt.Shape shape21 = statisticalBarRenderer15.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer5.setBaseShape(shape21, false);
        statisticalBarRenderer5.setMinimumBarLength((double) '4');
        statisticalBarRenderer5.setSeriesCreateEntities(1, (java.lang.Boolean) true, true);
        boolean boolean30 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer5);
        double double32 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Paint paint4 = statisticalBarRenderer0.lookupSeriesPaint((-1));
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint5);
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) '#', 0);
        java.awt.Paint paint10 = statisticalBarRenderer0.getBaseFillPaint();
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator13, false);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator8);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator14, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer18.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(1, itemLabelPosition28);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Paint paint4 = statisticalBarRenderer0.lookupSeriesPaint((-1));
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint5);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent7 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent7);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.List list5 = defaultStatisticalCategoryDataset0.getRowKeys();
        int int7 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) 10.0f);
        int int8 = defaultStatisticalCategoryDataset0.getColumnCount();
        defaultStatisticalCategoryDataset0.validateObject();
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesCreateEntities((int) '#', (java.lang.Boolean) false, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator14, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setSeriesOutlinePaint(10, paint19);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer17.getBaseItemLabelGenerator();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint22);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = null;
        statisticalBarRenderer17.setLegendItemToolTipGenerator(categorySeriesLabelGenerator24);
        java.awt.Shape shape27 = statisticalBarRenderer17.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape27, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(shape27);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setSeriesOutlinePaint(10, paint13);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer11.getBaseItemLabelGenerator();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseFillPaint(paint16);
        java.awt.Paint paint20 = statisticalBarRenderer11.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer11.setBaseSeriesVisibleInLegend(true, false);
        java.awt.Paint paint25 = statisticalBarRenderer11.lookupSeriesOutlinePaint((int) '4');
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint25);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        double double12 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint7, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        boolean boolean14 = statisticalBarRenderer0.getItemVisible((int) (short) 0, 100);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator15);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator18 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (byte) 0, categoryToolTipGenerator18, false);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        java.awt.Stroke stroke24 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) -1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(stroke24);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 1);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D11, categoryPlot12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = null;
        statisticalBarRenderer9.setLegendItemURLGenerator(categorySeriesLabelGenerator13);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setSeriesOutlinePaint(10, paint18);
        java.awt.Stroke stroke21 = statisticalBarRenderer16.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer9.setSeriesStroke((int) '#', stroke21);
        java.awt.Shape shape24 = statisticalBarRenderer9.lookupSeriesShape((-1));
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape24);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(shape24);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemFillPaint(1, 0);
        double double18 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2.0d + "'", double18 == 2.0d);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        double double11 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean14 = statisticalBarRenderer0.isItemLabelVisible((-1), (int) ' ');
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Font font17 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(font17);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(0, categoryItemLabelGenerator15, true);
        java.lang.Boolean boolean19 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        java.awt.Stroke stroke10 = statisticalBarRenderer6.getErrorIndicatorStroke();
        boolean boolean11 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer6);
        statisticalBarRenderer0.setBase((double) 0L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        statisticalBarRenderer15.setLegendItemURLGenerator(categorySeriesLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer22.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer15.setSeriesStroke((int) (short) 100, stroke31, false);
        java.awt.Stroke stroke35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer15.setSeriesOutlineStroke(0, stroke35, true);
        statisticalBarRenderer15.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint40 = statisticalBarRenderer15.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint40, false);
        boolean boolean43 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Stroke stroke26 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke26);
        double double28 = statisticalBarRenderer0.getUpperClip();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) true);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis34 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker35 = null;
        java.awt.geom.Rectangle2D rectangle2D36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D32, categoryPlot33, categoryAxis34, categoryMarker35, rectangle2D36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint45 = statisticalBarRenderer0.getItemPaint((int) (short) 100, (int) ' ');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator47 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator47, true);
        double double50 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer8.getBaseItemLabelGenerator();
        java.awt.Shape shape14 = statisticalBarRenderer8.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint15 = statisticalBarRenderer8.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesPaint(100, paint15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator17);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator30, true);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean39 = statisticalBarRenderer0.getItemCreateEntity(1, (int) (byte) 0);
        java.awt.Graphics2D graphics2D40 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis42 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker43 = null;
        java.awt.geom.Rectangle2D rectangle2D44 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D40, categoryPlot41, categoryAxis42, categoryMarker43, rectangle2D44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItemCollection legendItemCollection11 = statisticalBarRenderer0.getLegendItems();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setSeriesOutlinePaint(10, paint14);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer12.getBaseItemLabelGenerator();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint17);
        java.awt.Font font19 = statisticalBarRenderer12.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font19, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(legendItemCollection11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(font19);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator6, false);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        int int12 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator13, false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 10, (java.lang.Boolean) true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((-1), categoryItemLabelGenerator21, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator19);
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        defaultStatisticalCategoryDataset0.validateObject();
        int int18 = defaultStatisticalCategoryDataset0.getRowCount();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number21 = null; // flaky: defaultStatisticalCategoryDataset0.getMeanValue((int) (byte) -1, (int) (byte) -1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setSeriesOutlinePaint(10, paint17);
        java.awt.Stroke stroke20 = statisticalBarRenderer15.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener5 = null;
        defaultStatisticalCategoryDataset0.addChangeListener(datasetChangeListener5);
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset7 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number10 = defaultStatisticalCategoryDataset7.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        java.util.List list11 = defaultStatisticalCategoryDataset7.getRowKeys();
        org.jfree.data.general.DatasetChangeListener datasetChangeListener12 = null;
        defaultStatisticalCategoryDataset7.removeChangeListener(datasetChangeListener12);
        java.lang.Number number16 = defaultStatisticalCategoryDataset7.getValue((java.lang.Comparable) (short) -1, (java.lang.Comparable) ' ');
        int int17 = defaultStatisticalCategoryDataset7.getColumnCount();
        org.jfree.data.general.DatasetGroup datasetGroup18 = defaultStatisticalCategoryDataset7.getGroup();
        defaultStatisticalCategoryDataset0.setGroup(datasetGroup18);
        java.lang.Number number22 = defaultStatisticalCategoryDataset0.getMeanValue((java.lang.Comparable) 10, (java.lang.Comparable) "");
        java.lang.Number number25 = defaultStatisticalCategoryDataset0.getStdDevValue((java.lang.Comparable) Double.NaN, (java.lang.Comparable) 0L);
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(number10);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNull(number16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(datasetGroup18);
        org.junit.Assert.assertNull(number22);
        org.junit.Assert.assertNull(number25);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator23, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        java.awt.Font font22 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        java.awt.Stroke stroke25 = statisticalBarRenderer0.getSeriesStroke((int) (byte) -1);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertNull(stroke25);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setSeriesOutlinePaint(10, paint22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer20.getBaseItemLabelGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint25);
        java.awt.Font font27 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(100, font27);
        java.awt.Paint paint29 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke38 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(categoryURLGenerator36);
        org.junit.Assert.assertNull(stroke38);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke20, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator25, true);
        java.awt.Paint paint29 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint32 = statisticalBarRenderer31.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        java.awt.Font font37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer33.setBaseItemLabelFont(font37);
        statisticalBarRenderer31.setBaseItemLabelFont(font37);
        java.lang.Boolean boolean41 = statisticalBarRenderer31.getSeriesItemLabelsVisible((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator46 = null;
        statisticalBarRenderer42.setLegendItemURLGenerator(categorySeriesLabelGenerator46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer49.setBaseURLGenerator(categoryURLGenerator50);
        statisticalBarRenderer49.setIncludeBaseInRange(false);
        java.awt.Shape shape55 = statisticalBarRenderer49.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke58 = statisticalBarRenderer49.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer42.setSeriesStroke((int) (short) 100, stroke58, false);
        java.awt.Stroke stroke62 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer42.setSeriesOutlineStroke(0, stroke62, true);
        statisticalBarRenderer42.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint68 = statisticalBarRenderer42.getSeriesItemLabelPaint((int) ' ');
        java.awt.Shape shape70 = statisticalBarRenderer42.lookupSeriesShape((int) (short) 100);
        statisticalBarRenderer31.setBaseShape(shape70);
        statisticalBarRenderer0.setSeriesShape(0, shape70, true);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(shape55);
        org.junit.Assert.assertNotNull(stroke58);
        org.junit.Assert.assertNotNull(stroke62);
        org.junit.Assert.assertNull(paint68);
        org.junit.Assert.assertNotNull(shape70);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNull(categoryToolTipGenerator14);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) -1);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getErrorIndicatorStroke();
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setSeriesOutlinePaint(10, paint24);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer22.getBaseItemLabelGenerator();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseFillPaint(paint27);
        java.awt.Paint paint31 = statisticalBarRenderer22.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = null;
        statisticalBarRenderer32.setLegendItemURLGenerator(categorySeriesLabelGenerator36);
        boolean boolean38 = statisticalBarRenderer32.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint40 = statisticalBarRenderer32.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer32.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer22.setBaseNegativeItemLabelPosition(itemLabelPosition43);
        java.awt.Paint paint45 = statisticalBarRenderer22.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint45, true);
        boolean boolean48 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = statisticalBarRenderer7.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint8);
        boolean boolean10 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D12, categoryPlot13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(itemLabelPosition11);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        boolean boolean20 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 10);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(paint22);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        defaultStatisticalCategoryDataset0.validateObject();
        int int18 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.List list19 = defaultStatisticalCategoryDataset0.getRowKeys();
        double double21 = defaultStatisticalCategoryDataset0.getRangeLowerBound(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number24 = null; // flaky: defaultStatisticalCategoryDataset0.getValue((int) (short) -1, (-1));
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        int int12 = defaultStatisticalCategoryDataset0.getRowCount();
        defaultStatisticalCategoryDataset0.add((double) '4', (double) 100, (java.lang.Comparable) "", (java.lang.Comparable) (short) 0);
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = defaultStatisticalCategoryDataset0.hasListener(eventListener18);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        java.util.List list5 = defaultStatisticalCategoryDataset0.getRowKeys();
        int int7 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) 10.0f);
        defaultStatisticalCategoryDataset0.validateObject();
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(list5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = statisticalBarRenderer10.getPlot();
        double double16 = statisticalBarRenderer10.getMaximumBarWidth();
        java.awt.Stroke stroke17 = statisticalBarRenderer10.getBaseStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17, false);
        java.awt.Stroke stroke21 = statisticalBarRenderer0.lookupSeriesOutlineStroke(1);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(categoryPlot15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        boolean boolean14 = statisticalBarRenderer10.getAutoPopulateSeriesStroke();
        statisticalBarRenderer10.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = null;
        statisticalBarRenderer17.setLegendItemURLGenerator(categorySeriesLabelGenerator21);
        boolean boolean23 = statisticalBarRenderer17.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer17.setBaseItemLabelsVisible(true);
        boolean boolean26 = statisticalBarRenderer17.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer17.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer17.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator37 = null;
        statisticalBarRenderer33.setLegendItemURLGenerator(categorySeriesLabelGenerator37);
        boolean boolean39 = statisticalBarRenderer33.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer33.setPositiveItemLabelPositionFallback(itemLabelPosition40);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer33.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer17.setBaseNegativeItemLabelPosition(itemLabelPosition42);
        statisticalBarRenderer10.setPositiveItemLabelPositionFallback(itemLabelPosition42);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition42);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 0, (java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Font font7 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getURLGenerator(10, (int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = null;
        statisticalBarRenderer11.setLegendItemURLGenerator(categorySeriesLabelGenerator15);
        boolean boolean17 = statisticalBarRenderer11.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint19 = statisticalBarRenderer11.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21);
        statisticalBarRenderer20.setIncludeBaseInRange(false);
        java.awt.Shape shape26 = statisticalBarRenderer20.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28);
        statisticalBarRenderer27.setIncludeBaseInRange(false);
        java.awt.Shape shape33 = statisticalBarRenderer27.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke36 = statisticalBarRenderer27.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer20.setBaseOutlineStroke(stroke36);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer38.setBaseURLGenerator(categoryURLGenerator39, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = null;
        statisticalBarRenderer38.setLegendItemURLGenerator(categorySeriesLabelGenerator42);
        boolean boolean44 = statisticalBarRenderer38.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = null;
        statisticalBarRenderer38.setPositiveItemLabelPositionFallback(itemLabelPosition45);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer38.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer20.setNegativeItemLabelPositionFallback(itemLabelPosition47);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition47);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        statisticalBarRenderer11.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator51);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator53 = statisticalBarRenderer11.getLegendItemURLGenerator();
        java.awt.Paint paint56 = statisticalBarRenderer11.getItemPaint((int) (short) 100, (int) ' ');
        boolean boolean57 = statisticalBarRenderer11.getBaseSeriesVisibleInLegend();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer58 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer58.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke64 = statisticalBarRenderer58.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint66 = statisticalBarRenderer65.getBaseOutlinePaint();
        statisticalBarRenderer58.setBaseFillPaint(paint66);
        boolean boolean68 = statisticalBarRenderer58.getBaseItemLabelsVisible();
        boolean boolean70 = statisticalBarRenderer58.isSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer71 = statisticalBarRenderer58.getGradientPaintTransformer();
        statisticalBarRenderer11.setGradientPaintTransformer(gradientPaintTransformer71);
        boolean boolean73 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer74 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator75 = null;
        statisticalBarRenderer74.setBaseURLGenerator(categoryURLGenerator75);
        statisticalBarRenderer74.setIncludeBaseInRange(false);
        statisticalBarRenderer74.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator82 = statisticalBarRenderer74.getBaseURLGenerator();
        java.awt.Stroke stroke83 = statisticalBarRenderer74.getBaseStroke();
        statisticalBarRenderer11.setBaseOutlineStroke(stroke83);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer86 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator87 = null;
        statisticalBarRenderer86.setBaseURLGenerator(categoryURLGenerator87);
        java.awt.Paint paint90 = statisticalBarRenderer86.lookupSeriesPaint((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer11.setSeriesItemLabelPaint((-1), paint90, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertNotNull(shape33);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator53);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(stroke64);
        org.junit.Assert.assertNotNull(paint66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(gradientPaintTransformer71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(categoryURLGenerator82);
        org.junit.Assert.assertNotNull(stroke83);
        org.junit.Assert.assertNotNull(paint90);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        double double21 = statisticalBarRenderer0.getBase();
        java.util.EventListener eventListener22 = null;
        boolean boolean23 = statisticalBarRenderer0.hasListener(eventListener22);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        double double6 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator12);
        boolean boolean14 = statisticalBarRenderer8.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer8.setBaseItemLabelsVisible(true);
        java.awt.Paint paint17 = statisticalBarRenderer8.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint17);
        java.awt.Paint paint20 = statisticalBarRenderer0.lookupSeriesPaint(0);
        java.lang.Object obj21 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(obj21);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot3 = null;
        org.jfree.chart.axis.ValueAxis valueAxis4 = null;
        org.jfree.chart.plot.Marker marker5 = null;
        java.awt.geom.Rectangle2D rectangle2D6 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D2, categoryPlot3, valueAxis4, marker5, rectangle2D6);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (byte) 10);
        boolean boolean11 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = null;
        statisticalBarRenderer6.setLegendItemURLGenerator(categorySeriesLabelGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14);
        statisticalBarRenderer13.setIncludeBaseInRange(false);
        java.awt.Shape shape19 = statisticalBarRenderer13.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke22 = statisticalBarRenderer13.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer6.setSeriesStroke((int) (short) 100, stroke22, false);
        java.awt.Stroke stroke26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer6.setSeriesOutlineStroke(0, stroke26, true);
        statisticalBarRenderer6.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint31 = statisticalBarRenderer6.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint31);
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesItemLabelPaint(10);
        java.lang.Boolean boolean36 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 1);
        double double37 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(paint34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0d + "'", double37 == 2.0d);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = statisticalBarRenderer0.getURLGenerator(10, (int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(categoryURLGenerator13);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator30, true);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator37, false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 10);
        java.awt.Shape shape22 = statisticalBarRenderer0.getBaseShape();
        java.awt.Paint paint23 = statisticalBarRenderer0.getBasePaint();
        java.awt.Stroke stroke26 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) 100, (int) (byte) 0);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(stroke26);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28);
        statisticalBarRenderer27.setIncludeBaseInRange(false);
        java.awt.Shape shape33 = statisticalBarRenderer27.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35);
        statisticalBarRenderer34.setIncludeBaseInRange(false);
        java.awt.Shape shape40 = statisticalBarRenderer34.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke43 = statisticalBarRenderer34.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer27.setBaseOutlineStroke(stroke43);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) ' ', stroke43);
        java.lang.Boolean boolean47 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        double double48 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(shape33);
        org.junit.Assert.assertNotNull(shape40);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 1.0d + "'", double48 == 1.0d);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (short) -1, (int) ' ');
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Paint paint15 = statisticalBarRenderer0.lookupSeriesPaint((int) 'a');
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 1, (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 1);
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint9);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset15 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number18 = defaultStatisticalCategoryDataset15.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int19 = defaultStatisticalCategoryDataset15.getColumnCount();
        double double21 = defaultStatisticalCategoryDataset15.getRangeUpperBound(true);
        org.jfree.data.Range range22 = statisticalBarRenderer0.findRangeBounds((org.jfree.data.category.CategoryDataset) defaultStatisticalCategoryDataset15);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 10, (java.lang.Boolean) false, true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(number18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNull(range22);
        org.junit.Assert.assertNull(itemLabelPosition23);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 100, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition(1, (int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator15);
        java.awt.Font font19 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 1, (int) '4');
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        java.awt.Shape shape28 = statisticalBarRenderer22.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30);
        statisticalBarRenderer29.setIncludeBaseInRange(false);
        java.awt.Shape shape35 = statisticalBarRenderer29.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke38 = statisticalBarRenderer29.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer22.setBaseOutlineStroke(stroke38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator44 = null;
        statisticalBarRenderer40.setLegendItemURLGenerator(categorySeriesLabelGenerator44);
        boolean boolean46 = statisticalBarRenderer40.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = null;
        statisticalBarRenderer40.setPositiveItemLabelPositionFallback(itemLabelPosition47);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer40.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer22.setNegativeItemLabelPositionFallback(itemLabelPosition49);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator51 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer22.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) ' ', itemLabelPosition52);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape35);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator51);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        java.awt.Stroke stroke12 = statisticalBarRenderer7.lookupSeriesStroke((int) (byte) 100);
        statisticalBarRenderer0.setSeriesStroke((int) '#', stroke12);
        double double14 = statisticalBarRenderer0.getLowerClip();
        double double15 = statisticalBarRenderer0.getItemMargin();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setBase((double) 0L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13);
        statisticalBarRenderer12.setIncludeBaseInRange(false);
        boolean boolean18 = statisticalBarRenderer12.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke20 = statisticalBarRenderer12.lookupSeriesOutlineStroke((int) ' ');
        java.awt.Shape shape21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer12.setBaseShape(shape21, false);
        statisticalBarRenderer0.setBaseShape(shape21, true);
        java.awt.Shape shape27 = statisticalBarRenderer0.getSeriesShape((int) '4');
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNull(shape27);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        boolean boolean13 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24);
        statisticalBarRenderer23.setIncludeBaseInRange(false);
        java.awt.Shape shape29 = statisticalBarRenderer23.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke32 = statisticalBarRenderer23.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer16.setBaseOutlineStroke(stroke32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator38 = null;
        statisticalBarRenderer34.setLegendItemURLGenerator(categorySeriesLabelGenerator38);
        boolean boolean40 = statisticalBarRenderer34.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = null;
        statisticalBarRenderer34.setPositiveItemLabelPositionFallback(itemLabelPosition41);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer34.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer16.setNegativeItemLabelPositionFallback(itemLabelPosition43);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(1, itemLabelPosition43);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition(100, (int) (byte) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState21 = statisticalBarRenderer0.initialise(graphics2D16, rectangle2D17, categoryPlot18, (int) (short) 100, plotRenderingInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesFillPaint((int) '#', paint13);
        java.awt.Stroke stroke15 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Stroke stroke17 = statisticalBarRenderer0.getSeriesStroke((int) 'a');
        java.awt.Paint paint19 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) 10);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setSeriesOutlinePaint(10, paint23);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer21.getBaseItemLabelGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseFillPaint(paint26);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = null;
        statisticalBarRenderer21.setLegendItemToolTipGenerator(categorySeriesLabelGenerator28);
        java.awt.Paint paint30 = statisticalBarRenderer21.getBasePaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint30);
        boolean boolean32 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setSeriesOutlinePaint(10, paint35);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = statisticalBarRenderer33.getBaseItemLabelGenerator();
        java.awt.Shape shape39 = statisticalBarRenderer33.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer33.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer33.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint46 = statisticalBarRenderer33.getSeriesOutlinePaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer47.setSeriesOutlinePaint(10, paint49);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator51 = statisticalBarRenderer47.getBaseItemLabelGenerator();
        java.awt.Shape shape53 = statisticalBarRenderer47.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer47.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer47.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint60 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer47.setSeriesFillPaint((int) '#', paint60);
        statisticalBarRenderer33.setErrorIndicatorPaint(paint60);
        statisticalBarRenderer33.setBase((double) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer65.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke71 = statisticalBarRenderer65.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint72 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer65.setBaseOutlinePaint(paint72, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition76 = statisticalBarRenderer65.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        statisticalBarRenderer33.setBasePositiveItemLabelPosition(itemLabelPosition76, false);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition76);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(categoryItemLabelGenerator37);
        org.junit.Assert.assertNotNull(shape39);
        org.junit.Assert.assertNull(itemLabelPosition40);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryItemLabelGenerator51);
        org.junit.Assert.assertNotNull(shape53);
        org.junit.Assert.assertNull(itemLabelPosition54);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNotNull(stroke71);
        org.junit.Assert.assertNotNull(paint72);
        org.junit.Assert.assertNotNull(itemLabelPosition76);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21);
        statisticalBarRenderer20.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer20.getPlot();
        double double26 = statisticalBarRenderer20.getMaximumBarWidth();
        java.awt.Stroke stroke27 = statisticalBarRenderer20.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = null;
        statisticalBarRenderer28.setLegendItemURLGenerator(categorySeriesLabelGenerator32);
        boolean boolean34 = statisticalBarRenderer28.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer28.setBaseItemLabelsVisible(true);
        java.awt.Paint paint37 = statisticalBarRenderer28.getBasePaint();
        statisticalBarRenderer20.setBasePaint(paint37);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 10, paint37);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(paint37);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) ' ');
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setBaseShape(shape9, false);
        double double12 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer2.setBaseURLGenerator(categoryURLGenerator3, false);
        java.awt.Font font6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer2.setBaseItemLabelFont(font6);
        statisticalBarRenderer0.setBaseItemLabelFont(font6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 0);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset13 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setSeriesOutlinePaint(10, paint16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = statisticalBarRenderer14.getBaseItemLabelGenerator();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setBaseFillPaint(paint19);
        java.awt.Paint paint23 = statisticalBarRenderer14.getItemPaint((int) (byte) -1, 100);
        boolean boolean24 = defaultStatisticalCategoryDataset13.equals((java.lang.Object) statisticalBarRenderer14);
        java.awt.Stroke stroke26 = statisticalBarRenderer14.getSeriesOutlineStroke(1);
        boolean boolean27 = statisticalBarRenderer14.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer14.getBasePositiveItemLabelPosition();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((-1), itemLabelPosition28, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(font6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(categoryItemLabelGenerator18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        double double21 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Stroke stroke22 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2.0d + "'", double21 == 2.0d);
        org.junit.Assert.assertNotNull(stroke22);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer7.getBaseItemLabelGenerator();
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (short) 100);
        java.awt.Shape shape15 = statisticalBarRenderer7.lookupSeriesShape(100);
        statisticalBarRenderer0.setBaseShape(shape15);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(shape15);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint45 = statisticalBarRenderer0.getItemPaint((int) (short) 100, (int) ' ');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator47 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator47, true);
        double double50 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = null;
        statisticalBarRenderer18.setLegendItemURLGenerator(categorySeriesLabelGenerator22);
        boolean boolean24 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) 0);
        java.lang.Boolean boolean33 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) '#');
        java.awt.Paint paint35 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 100);
        boolean boolean38 = statisticalBarRenderer0.getItemVisible(0, (int) (short) 1);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 10, 0);
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D7, categoryPlot8, rectangle2D9, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        java.lang.Number number3 = defaultStatisticalCategoryDataset0.getValue((java.lang.Comparable) "hi!", (java.lang.Comparable) 1);
        int int4 = defaultStatisticalCategoryDataset0.getColumnCount();
        double double6 = defaultStatisticalCategoryDataset0.getRangeUpperBound(true);
        org.jfree.data.general.DatasetGroup datasetGroup7 = defaultStatisticalCategoryDataset0.getGroup();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Number number10 = defaultStatisticalCategoryDataset0.getStdDevValue(0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(number3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(datasetGroup7);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getBaseURLGenerator();
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 0);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) false, true);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemOutlinePaint((int) '#', (int) '#');
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setSeriesOutlinePaint(10, paint18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = statisticalBarRenderer16.getBaseItemLabelGenerator();
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint23 = statisticalBarRenderer16.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D24 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        org.jfree.chart.plot.Marker marker27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        statisticalBarRenderer16.drawRangeMarker(graphics2D24, categoryPlot25, valueAxis26, marker27, rectangle2D28);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.Marker marker33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        statisticalBarRenderer16.drawRangeMarker(graphics2D30, categoryPlot31, valueAxis32, marker33, rectangle2D34);
        java.lang.Boolean boolean37 = statisticalBarRenderer16.getSeriesCreateEntities((int) (byte) 10);
        java.awt.Shape shape38 = statisticalBarRenderer16.getBaseShape();
        boolean boolean39 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer16);
        boolean boolean40 = statisticalBarRenderer16.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryToolTipGenerator15);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(categoryItemLabelGenerator20);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator30, true);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean39 = statisticalBarRenderer0.getItemCreateEntity(1, (int) (byte) 0);
        double double40 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint45 = statisticalBarRenderer0.getItemPaint((int) (short) 100, (int) ' ');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator47 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator47, true);
        int int50 = statisticalBarRenderer0.getPassCount();
        java.lang.Boolean boolean52 = statisticalBarRenderer0.getSeriesVisible((int) '4');
        org.jfree.chart.event.RendererChangeListener rendererChangeListener53 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8);
        statisticalBarRenderer7.setIncludeBaseInRange(false);
        java.awt.Shape shape13 = statisticalBarRenderer7.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke16, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30);
        java.awt.Stroke stroke33 = statisticalBarRenderer29.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer26.setBaseStroke(stroke33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36);
        statisticalBarRenderer35.setIncludeBaseInRange(false);
        boolean boolean41 = statisticalBarRenderer35.equals((java.lang.Object) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator42 = statisticalBarRenderer35.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator43 = statisticalBarRenderer35.getLegendItemLabelGenerator();
        statisticalBarRenderer26.setLegendItemToolTipGenerator(categorySeriesLabelGenerator43);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator43);
        java.awt.Stroke stroke47 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) 1);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator42);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator43);
        org.junit.Assert.assertNotNull(stroke47);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getItemStroke(100, (int) 'a');
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) -1);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        java.awt.Shape shape10 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        boolean boolean15 = statisticalBarRenderer0.isItemLabelVisible((int) '4', (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) -1, (int) (short) 10);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator18);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        statisticalBarRenderer19.setIncludeBaseInRange(false);
        java.awt.Shape shape25 = statisticalBarRenderer19.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27);
        statisticalBarRenderer26.setIncludeBaseInRange(false);
        java.awt.Shape shape32 = statisticalBarRenderer26.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke35 = statisticalBarRenderer26.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer19.setBaseOutlineStroke(stroke35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator41 = null;
        statisticalBarRenderer37.setLegendItemURLGenerator(categorySeriesLabelGenerator41);
        boolean boolean43 = statisticalBarRenderer37.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = null;
        statisticalBarRenderer37.setPositiveItemLabelPositionFallback(itemLabelPosition44);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer37.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer19.setNegativeItemLabelPositionFallback(itemLabelPosition46);
        statisticalBarRenderer10.setBaseNegativeItemLabelPosition(itemLabelPosition46);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer10.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator50);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator52 = statisticalBarRenderer10.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D53 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot54 = null;
        org.jfree.chart.axis.ValueAxis valueAxis55 = null;
        org.jfree.chart.plot.Marker marker56 = null;
        java.awt.geom.Rectangle2D rectangle2D57 = null;
        statisticalBarRenderer10.drawRangeMarker(graphics2D53, categoryPlot54, valueAxis55, marker56, rectangle2D57);
        java.awt.Font font59 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(1, font59);
        boolean boolean61 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setMinimumBarLength(100.0d);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(shape32);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator52);
        org.junit.Assert.assertNotNull(font59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.jfree.data.statistics.DefaultStatisticalCategoryDataset defaultStatisticalCategoryDataset0 = new org.jfree.data.statistics.DefaultStatisticalCategoryDataset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setSeriesOutlinePaint(10, paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer1.getBaseItemLabelGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer1.setBaseFillPaint(paint6);
        java.awt.Paint paint10 = statisticalBarRenderer1.getItemPaint((int) (byte) -1, 100);
        boolean boolean11 = defaultStatisticalCategoryDataset0.equals((java.lang.Object) statisticalBarRenderer1);
        defaultStatisticalCategoryDataset0.add((double) 0.0f, (double) 0.0f, (java.lang.Comparable) (-1.0d), (java.lang.Comparable) (-1.0f));
        int int18 = defaultStatisticalCategoryDataset0.getColumnIndex((java.lang.Comparable) 0.0d);
        org.jfree.data.Range range20 = defaultStatisticalCategoryDataset0.getRangeBounds(false);
        defaultStatisticalCategoryDataset0.add((double) 10.0f, (double) '#', (java.lang.Comparable) 100.0d, (java.lang.Comparable) 0.2d);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(range20);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = null;
        statisticalBarRenderer10.setLegendItemURLGenerator(categorySeriesLabelGenerator14);
        boolean boolean16 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint18 = statisticalBarRenderer10.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getNegativeItemLabelPosition((int) (short) 100, (int) '4');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11);
        statisticalBarRenderer10.setIncludeBaseInRange(false);
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape16, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape16);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setSeriesOutlinePaint(10, paint12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer10.getBaseItemLabelGenerator();
        java.awt.Shape shape16 = statisticalBarRenderer10.lookupSeriesShape((int) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer10.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, true);
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer10.setSeriesFillPaint((int) '#', paint23);
        statisticalBarRenderer0.setBasePaint(paint23, false);
        java.awt.Paint paint28 = statisticalBarRenderer0.lookupSeriesPaint((int) 'a');
        boolean boolean29 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation30 = null;
        org.jfree.chart.util.Layer layer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation30, layer31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = statisticalBarRenderer0.getURLGenerator(10, (int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(categoryURLGenerator13);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) 'a', (int) (short) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getItemStroke((int) (byte) 10, (int) '#');
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint7, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = statisticalBarRenderer0.getURLGenerator((int) (short) 0, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = null;
        statisticalBarRenderer13.setLegendItemURLGenerator(categorySeriesLabelGenerator17);
        boolean boolean19 = statisticalBarRenderer13.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint21 = statisticalBarRenderer13.lookupSeriesPaint((int) (byte) 0);
        boolean boolean22 = statisticalBarRenderer13.getBaseSeriesVisible();
        java.awt.Paint paint25 = statisticalBarRenderer13.getItemFillPaint((int) (short) -1, (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer27.setSeriesOutlinePaint(10, paint29);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer27.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator32, false);
        java.awt.Stroke stroke36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer27.setSeriesStroke((int) '4', stroke36);
        statisticalBarRenderer13.setSeriesOutlineStroke(1, stroke36);
        statisticalBarRenderer0.setBaseStroke(stroke36);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryURLGenerator12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(stroke36);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = null;
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator11);
        boolean boolean13 = statisticalBarRenderer7.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint15 = statisticalBarRenderer7.lookupSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint15, false);
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20);
        java.awt.Paint paint23 = statisticalBarRenderer19.lookupSeriesPaint((-1));
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = null;
        statisticalBarRenderer28.setLegendItemURLGenerator(categorySeriesLabelGenerator32);
        boolean boolean34 = statisticalBarRenderer28.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint36 = statisticalBarRenderer28.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38);
        statisticalBarRenderer37.setIncludeBaseInRange(false);
        java.awt.Shape shape43 = statisticalBarRenderer37.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45);
        statisticalBarRenderer44.setIncludeBaseInRange(false);
        java.awt.Shape shape50 = statisticalBarRenderer44.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke53 = statisticalBarRenderer44.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer37.setBaseOutlineStroke(stroke53);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator59 = null;
        statisticalBarRenderer55.setLegendItemURLGenerator(categorySeriesLabelGenerator59);
        boolean boolean61 = statisticalBarRenderer55.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = null;
        statisticalBarRenderer55.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = statisticalBarRenderer55.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer37.setNegativeItemLabelPositionFallback(itemLabelPosition64);
        statisticalBarRenderer28.setBaseNegativeItemLabelPosition(itemLabelPosition64);
        java.lang.Boolean boolean68 = statisticalBarRenderer28.getSeriesItemLabelsVisible(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition71 = statisticalBarRenderer28.getNegativeItemLabelPosition((int) (short) -1, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer72 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator73 = null;
        statisticalBarRenderer72.setBaseURLGenerator(categoryURLGenerator73, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator76 = null;
        statisticalBarRenderer72.setLegendItemURLGenerator(categorySeriesLabelGenerator76);
        boolean boolean78 = statisticalBarRenderer72.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint80 = statisticalBarRenderer72.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator81 = statisticalBarRenderer72.getLegendItemLabelGenerator();
        statisticalBarRenderer28.setLegendItemLabelGenerator(categorySeriesLabelGenerator81);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator81);
        java.awt.Stroke stroke85 = statisticalBarRenderer0.lookupSeriesStroke((int) (short) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(shape43);
        org.junit.Assert.assertNotNull(shape50);
        org.junit.Assert.assertNotNull(stroke53);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition64);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(itemLabelPosition71);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator81);
        org.junit.Assert.assertNotNull(stroke85);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        java.lang.Boolean boolean40 = statisticalBarRenderer0.getSeriesItemLabelsVisible(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) '#');
        java.awt.Stroke stroke45 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator46 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator46);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNull(itemLabelPosition48);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        boolean boolean7 = statisticalBarRenderer0.getItemVisible((int) (byte) 10, (-1));
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 0, (java.lang.Boolean) false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemPaint(0, (int) (short) 0);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        boolean boolean4 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setBaseSeriesVisible(true, false);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        boolean boolean6 = statisticalBarRenderer0.equals((java.lang.Object) 'a');
        java.lang.Object obj7 = statisticalBarRenderer0.clone();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState13 = statisticalBarRenderer0.initialise(graphics2D8, rectangle2D9, categoryPlot10, (int) (byte) 0, plotRenderingInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj7);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint2);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 100);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 10);
        java.awt.Stroke stroke23 = statisticalBarRenderer0.lookupSeriesStroke(1);
        java.awt.Font font25 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 0);
        org.junit.Assert.assertNotNull(paint2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNull(font25);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10);
        statisticalBarRenderer9.setIncludeBaseInRange(false);
        java.awt.Shape shape15 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17);
        statisticalBarRenderer16.setIncludeBaseInRange(false);
        java.awt.Shape shape22 = statisticalBarRenderer16.lookupSeriesShape((int) (byte) 10);
        java.awt.Stroke stroke25 = statisticalBarRenderer16.getItemOutlineStroke((-1), 100);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer27.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        boolean boolean33 = statisticalBarRenderer27.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer27.setPositiveItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer27.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition36);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator40);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Graphics2D graphics2D43 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.chart.plot.Marker marker46 = null;
        java.awt.geom.Rectangle2D rectangle2D47 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D43, categoryPlot44, valueAxis45, marker46, rectangle2D47);
        statisticalBarRenderer0.setItemMargin((double) 1.0f);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.lang.Object obj5 = statisticalBarRenderer0.clone();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 100);
        boolean boolean9 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 0);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }
}
