import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Stroke stroke3 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlineStroke(stroke3, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis5 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D3, categoryPlot4, categoryAxis5, categoryMarker6, rectangle2D7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener1 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        double double0 = org.jfree.chart.renderer.category.BarRenderer.DEFAULT_ITEM_MARGIN;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 0.2d + "'", double0 == 0.2d);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setErrorIndicatorPaint(paint13);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((-1), paint13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) -1, categoryItemLabelGenerator9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range7 = statisticalBarRenderer0.findRangeBounds(categoryDataset6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D8, categoryPlot9, categoryAxis10, categoryMarker11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D5, categoryPlot6, valueAxis7, rectangle2D8, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation3 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke11 = statisticalBarRenderer7.lookupSeriesOutlineStroke((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) -1);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator4);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) 'a', (int) (byte) -1);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D9, categoryPlot10, rectangle2D11, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(shape8);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D5, categoryPlot6, rectangle2D7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(itemLabelPosition22);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 10);
        java.awt.Paint paint10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer0.lookupSeriesStroke(10);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
        org.junit.Assert.assertNotNull(stroke26);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((int) (short) -1, categoryURLGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity(100, (int) 'a');
        boolean boolean10 = statisticalBarRenderer0.isSeriesVisible((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (short) 10, (int) (byte) -1);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) -1, categoryURLGenerator11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D6, categoryPlot7, rectangle2D8, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(itemLabelPosition5);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 0, itemLabelPosition6);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        int int7 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        int int25 = statisticalBarRenderer22.getPassCount();
        double double26 = statisticalBarRenderer22.getUpperClip();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer22.setSeriesPaint(100, paint28);
        statisticalBarRenderer21.setBasePaint(paint28);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        java.awt.Font font13 = statisticalBarRenderer8.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range18 = statisticalBarRenderer0.findRangeBounds(categoryDataset17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(font13);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        double double10 = statisticalBarRenderer7.getBase();
        java.awt.Paint paint11 = statisticalBarRenderer7.getErrorIndicatorPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (byte) -1, paint11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        java.awt.Graphics2D graphics2D18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.util.Layer layer22 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D18, rectangle2D19, categoryAxis20, valueAxis21, layer22, plotRenderingInfo23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke8);
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((int) (short) -1, paint11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer21.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator25, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer21.getBaseToolTipGenerator();
        java.awt.Paint paint30 = statisticalBarRenderer21.lookupSeriesPaint((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (byte) -1, paint30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNotNull(paint30);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer11.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator15, false);
        java.awt.Stroke stroke18 = null;
        statisticalBarRenderer11.setErrorIndicatorStroke(stroke18);
        boolean boolean20 = statisticalBarRenderer11.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint24 = statisticalBarRenderer11.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint24, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((-1), categoryItemLabelGenerator6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D6, categoryItemRendererState7, rectangle2D8, categoryPlot9, categoryAxis10, valueAxis11, categoryDataset12, 10, (-1), (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        java.awt.Paint paint12 = statisticalBarRenderer7.getBaseFillPaint();
        java.awt.Paint paint15 = statisticalBarRenderer7.getItemLabelPaint((int) '#', (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((-1), paint15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis8 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D6, categoryPlot7, categoryAxis8, categoryMarker9, rectangle2D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState21 = statisticalBarRenderer0.initialise(graphics2D16, rectangle2D17, categoryPlot18, (int) (short) 10, plotRenderingInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer6.setBaseToolTipGenerator(categoryToolTipGenerator7);
        boolean boolean11 = statisticalBarRenderer6.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer6.setBaseItemLabelGenerator(categoryItemLabelGenerator12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        java.awt.Font font19 = statisticalBarRenderer14.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer14.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition20);
        java.awt.Paint paint22 = statisticalBarRenderer6.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint22, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(font19);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D7, categoryItemRendererState8, rectangle2D9, categoryPlot10, categoryAxis11, valueAxis12, categoryDataset13, (int) (short) 100, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(stroke6);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.data.category.CategoryDataset categoryDataset17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D11, categoryItemRendererState12, rectangle2D13, categoryPlot14, categoryAxis15, valueAxis16, categoryDataset17, (int) (byte) -1, 0, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener41 = null;
        boolean boolean42 = statisticalBarRenderer35.hasListener(eventListener41);
        java.awt.Shape shape45 = statisticalBarRenderer35.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape(100, shape45, true);
        java.awt.Graphics2D graphics2D48 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState49 = null;
        java.awt.geom.Rectangle2D rectangle2D50 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis52 = null;
        org.jfree.chart.axis.ValueAxis valueAxis53 = null;
        org.jfree.data.category.CategoryDataset categoryDataset54 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D48, categoryItemRendererState49, rectangle2D50, categoryPlot51, categoryAxis52, valueAxis53, categoryDataset54, (int) '4', (int) 'a', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shape45);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10, false);
        int int13 = statisticalBarRenderer9.getColumnCount();
        java.awt.Paint paint14 = statisticalBarRenderer9.getBaseFillPaint();
        java.awt.Paint paint17 = statisticalBarRenderer9.getItemLabelPaint((int) '#', (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) -1, paint17, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((-1), categoryToolTipGenerator14, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer6.getLegendItemToolTipGenerator();
        statisticalBarRenderer6.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer6.setSeriesOutlineStroke((int) (byte) 1, stroke14);
        java.awt.Paint paint17 = statisticalBarRenderer6.lookupSeriesOutlinePaint((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) -1, paint17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer10.setDrawBarOutline(false);
        java.awt.Font font17 = statisticalBarRenderer10.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font17, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer21.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double30 = statisticalBarRenderer21.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener34 = null;
        boolean boolean35 = statisticalBarRenderer31.hasListener(eventListener34);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator36);
        java.awt.Paint paint38 = statisticalBarRenderer31.getBaseItemLabelPaint();
        statisticalBarRenderer21.setBasePaint(paint38);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint38, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(font17);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(paint38);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double12 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D6, categoryPlot7, rectangle2D8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer10.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer10.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator16, true);
        statisticalBarRenderer10.removeAnnotations();
        java.awt.Paint paint20 = statisticalBarRenderer10.getErrorIndicatorPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((-1), paint20, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Graphics2D graphics2D4 = null;
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState9 = statisticalBarRenderer0.initialise(graphics2D4, rectangle2D5, categoryPlot6, (int) 'a', plotRenderingInfo8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) (short) 0);
        java.awt.Graphics2D graphics2D15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.util.Layer layer19 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D15, rectangle2D16, categoryAxis17, valueAxis18, layer19, plotRenderingInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer13.setBaseToolTipGenerator(categoryToolTipGenerator14);
        boolean boolean18 = statisticalBarRenderer13.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = statisticalBarRenderer19.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer28 = statisticalBarRenderer19.getGradientPaintTransformer();
        statisticalBarRenderer13.setGradientPaintTransformer(gradientPaintTransformer28);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = statisticalBarRenderer13.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        java.lang.Class<?> wildcardClass32 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator27);
        org.junit.Assert.assertNotNull(gradientPaintTransformer28);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator30);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        double double0 = org.jfree.chart.renderer.category.BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 3.0d + "'", double0 == 3.0d);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 0.0f);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        boolean boolean9 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        int int13 = statisticalBarRenderer10.getPassCount();
        double double14 = statisticalBarRenderer10.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint18 = statisticalBarRenderer10.getSeriesPaint((int) (short) -1);
        boolean boolean19 = statisticalBarRenderer10.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setBaseCreateEntities(true, false);
        java.awt.Font font27 = null;
        statisticalBarRenderer20.setSeriesItemLabelFont((int) '4', font27);
        java.awt.Stroke stroke29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer20.setBaseStroke(stroke29);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer20.getBasePositiveItemLabelPosition();
        statisticalBarRenderer10.setPositiveItemLabelPositionFallback(itemLabelPosition31);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition31, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(paint5);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = null;
        statisticalBarRenderer22.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator26, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        java.awt.Font font37 = null;
        statisticalBarRenderer30.setSeriesItemLabelFont((int) '4', font37);
        java.awt.Stroke stroke39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer30.setBaseStroke(stroke39);
        statisticalBarRenderer22.setSeriesStroke((int) (byte) 100, stroke39);
        java.lang.Boolean boolean43 = statisticalBarRenderer22.getSeriesCreateEntities(100);
        statisticalBarRenderer22.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        int int49 = statisticalBarRenderer46.getPassCount();
        double double50 = statisticalBarRenderer46.getUpperClip();
        double double51 = statisticalBarRenderer46.getItemMargin();
        java.awt.Stroke stroke52 = statisticalBarRenderer46.getBaseOutlineStroke();
        statisticalBarRenderer22.setBaseStroke(stroke52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke56 = statisticalBarRenderer54.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer54.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke59 = statisticalBarRenderer54.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator60 = null;
        statisticalBarRenderer54.setBaseItemLabelGenerator(categoryItemLabelGenerator60);
        java.awt.Stroke stroke64 = statisticalBarRenderer54.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke67 = statisticalBarRenderer65.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer65.setAutoPopulateSeriesOutlinePaint(false);
        int int70 = statisticalBarRenderer65.getRowCount();
        java.awt.Shape shape71 = statisticalBarRenderer65.getBaseShape();
        statisticalBarRenderer54.setBaseShape(shape71);
        boolean boolean73 = statisticalBarRenderer22.equals((java.lang.Object) shape71);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((-1), shape71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
        org.junit.Assert.assertNotNull(stroke52);
        org.junit.Assert.assertNull(stroke56);
        org.junit.Assert.assertNotNull(stroke59);
        org.junit.Assert.assertNotNull(stroke64);
        org.junit.Assert.assertNull(stroke67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(shape71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        int int13 = statisticalBarRenderer10.getPassCount();
        boolean boolean14 = statisticalBarRenderer10.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer10.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25, false);
        int int28 = statisticalBarRenderer24.getColumnCount();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setErrorIndicatorPaint(paint29);
        statisticalBarRenderer18.setBaseItemLabelPaint(paint29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke36 = statisticalBarRenderer32.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer18.setBaseStroke(stroke36, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener42 = null;
        boolean boolean43 = statisticalBarRenderer39.hasListener(eventListener42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        int int47 = statisticalBarRenderer44.getPassCount();
        java.awt.Font font49 = statisticalBarRenderer44.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer44.getBasePositiveItemLabelPosition();
        statisticalBarRenderer39.setNegativeItemLabelPositionFallback(itemLabelPosition50);
        statisticalBarRenderer18.setPositiveItemLabelPositionFallback(itemLabelPosition50);
        statisticalBarRenderer10.setBaseNegativeItemLabelPosition(itemLabelPosition50);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) -1, itemLabelPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNull(font49);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setBaseStroke(stroke27, false);
        statisticalBarRenderer0.setBaseStroke(stroke27, true);
        java.awt.Graphics2D graphics2D32 = null;
        java.awt.geom.Rectangle2D rectangle2D33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState37 = statisticalBarRenderer0.initialise(graphics2D32, rectangle2D33, categoryPlot34, (int) (short) -1, plotRenderingInfo36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNull(itemLabelPosition9);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer16.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer16.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator22, true);
        statisticalBarRenderer16.removeAnnotations();
        java.awt.Paint paint26 = statisticalBarRenderer16.getErrorIndicatorPaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint26);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.data.category.CategoryDataset categoryDataset34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D28, categoryItemRendererState29, rectangle2D30, categoryPlot31, categoryAxis32, valueAxis33, categoryDataset34, 10, (int) 'a', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D8, categoryPlot9, valueAxis10, rectangle2D11, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer8.getLegendItemURLGenerator();
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke15);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        double double23 = statisticalBarRenderer19.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition(1);
        boolean boolean28 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font29 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font29);
        org.jfree.data.category.CategoryDataset categoryDataset31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range32 = statisticalBarRenderer0.findRangeBounds(categoryDataset31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(font29);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) -1, categoryItemLabelGenerator30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.data.category.CategoryDataset categoryDataset1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range2 = statisticalBarRenderer0.findRangeBounds(categoryDataset1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Font font19 = statisticalBarRenderer0.getItemLabelFont((int) (short) 0, 10);
        java.awt.Graphics2D graphics2D20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D20, categoryPlot21, rectangle2D22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(font19);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double9 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        java.awt.Paint paint17 = null;
        statisticalBarRenderer10.setSeriesOutlinePaint((int) '4', paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = statisticalBarRenderer10.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer10.getSeriesPaint((int) (short) 0);
        java.awt.Stroke stroke24 = statisticalBarRenderer10.getItemOutlineStroke((int) (byte) 0, (int) '4');
        statisticalBarRenderer0.setBaseStroke(stroke24, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNull(categoryToolTipGenerator19);
        org.junit.Assert.assertNull(paint21);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, (int) '4');
        boolean boolean15 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState16 = statisticalBarRenderer0.initialise(graphics2D11, rectangle2D12, categoryPlot13, 0, plotRenderingInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        boolean boolean14 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        int int19 = statisticalBarRenderer16.getPassCount();
        double double20 = statisticalBarRenderer16.getUpperClip();
        double double21 = statisticalBarRenderer16.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer23.setBaseFillPaint(paint26);
        statisticalBarRenderer16.setSeriesPaint(1, paint26);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((-1), itemLabelPosition30, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryURLGenerator11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D14, categoryPlot15, categoryAxis16, categoryMarker17, rectangle2D18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator8);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D12, categoryPlot13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator28, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (short) -1, (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        boolean boolean24 = statisticalBarRenderer9.removeAnnotation(categoryAnnotation23);
        java.awt.Paint paint25 = statisticalBarRenderer9.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint25, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        int int33 = statisticalBarRenderer29.getColumnCount();
        java.awt.Paint paint34 = statisticalBarRenderer29.getBaseFillPaint();
        java.awt.Paint paint37 = statisticalBarRenderer29.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer38.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45, false);
        int int48 = statisticalBarRenderer44.getColumnCount();
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer44.setErrorIndicatorPaint(paint49);
        statisticalBarRenderer38.setBaseItemLabelPaint(paint49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke54 = statisticalBarRenderer52.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke56 = statisticalBarRenderer52.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer38.setBaseStroke(stroke56, false);
        statisticalBarRenderer29.setBaseStroke(stroke56, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) -1, stroke56, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(stroke54);
        org.junit.Assert.assertNotNull(stroke56);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10, false);
        int int13 = statisticalBarRenderer9.getColumnCount();
        int int14 = statisticalBarRenderer9.getColumnCount();
        java.awt.Paint paint15 = statisticalBarRenderer9.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint15, false);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer18 = statisticalBarRenderer0.getGradientPaintTransformer();
        double double19 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(gradientPaintTransformer18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean10 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        boolean boolean10 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 100, (int) (short) 100);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D15, categoryPlot16, valueAxis17, rectangle2D18, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator18 = null;
        statisticalBarRenderer12.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator18, true);
        java.awt.Paint paint21 = statisticalBarRenderer12.getErrorIndicatorPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((int) (byte) -1, paint21, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false, true);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D11, categoryPlot12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double9 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 100, categoryItemLabelGenerator11, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        java.awt.Font font13 = statisticalBarRenderer6.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation16, layer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(font13);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        double double18 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D8, categoryItemRendererState9, rectangle2D10, categoryPlot11, categoryAxis12, valueAxis13, categoryDataset14, (int) (short) 1, (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer8.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem16 = statisticalBarRenderer8.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer8.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer8.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(legendItem16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator19);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer10.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator19, false);
        boolean boolean22 = statisticalBarRenderer10.equals((java.lang.Object) categoryItemLabelGenerator19);
        statisticalBarRenderer10.removeAnnotations();
        java.awt.Paint paint24 = statisticalBarRenderer10.getBaseItemLabelPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (short) -1, paint24, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        double double11 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        boolean boolean10 = statisticalBarRenderer0.getItemVisible((int) (byte) 10, (int) (byte) 0);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator20);
        java.awt.Paint paint24 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 0, 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener4 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double14 = statisticalBarRenderer0.getLowerClip();
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.data.category.CategoryDataset categoryDataset21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D15, categoryItemRendererState16, rectangle2D17, categoryPlot18, categoryAxis19, valueAxis20, categoryDataset21, (int) 'a', 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D9, categoryPlot10, categoryAxis11, categoryMarker12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean14 = statisticalBarRenderer0.equals((java.lang.Object) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D13, categoryPlot14, rectangle2D15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        boolean boolean7 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean25 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer26.setDrawBarOutline(false);
        statisticalBarRenderer26.removeAnnotations();
        statisticalBarRenderer26.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer26.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent38 = null;
        statisticalBarRenderer26.notifyListeners(rendererChangeEvent38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke42 = statisticalBarRenderer40.getSeriesOutlineStroke((int) (byte) 10);
        int int43 = statisticalBarRenderer40.getPassCount();
        boolean boolean44 = statisticalBarRenderer40.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer40.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer48.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = null;
        statisticalBarRenderer54.setBaseURLGenerator(categoryURLGenerator55, false);
        int int58 = statisticalBarRenderer54.getColumnCount();
        java.awt.Paint paint59 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer54.setErrorIndicatorPaint(paint59);
        statisticalBarRenderer48.setBaseItemLabelPaint(paint59);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke64 = statisticalBarRenderer62.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke66 = statisticalBarRenderer62.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer48.setBaseStroke(stroke66, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer69 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer69.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener72 = null;
        boolean boolean73 = statisticalBarRenderer69.hasListener(eventListener72);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer74 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke76 = statisticalBarRenderer74.getSeriesOutlineStroke((int) (byte) 10);
        int int77 = statisticalBarRenderer74.getPassCount();
        java.awt.Font font79 = statisticalBarRenderer74.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition80 = statisticalBarRenderer74.getBasePositiveItemLabelPosition();
        statisticalBarRenderer69.setNegativeItemLabelPositionFallback(itemLabelPosition80);
        statisticalBarRenderer48.setPositiveItemLabelPositionFallback(itemLabelPosition80);
        statisticalBarRenderer40.setBaseNegativeItemLabelPosition(itemLabelPosition80);
        statisticalBarRenderer26.setBasePositiveItemLabelPosition(itemLabelPosition80);
        statisticalBarRenderer26.setAutoPopulateSeriesStroke(false);
        boolean boolean87 = statisticalBarRenderer0.equals((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(stroke42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertNull(stroke64);
        org.junit.Assert.assertNotNull(stroke66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(stroke76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNull(font79);
        org.junit.Assert.assertNotNull(itemLabelPosition80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        double double9 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0d + "'", double9 == 2.0d);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseFillPaint(paint9);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint9, false);
        java.awt.Shape shape14 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape14);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        boolean boolean32 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation36 = null;
        org.jfree.chart.util.Layer layer37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation36, layer37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D11, categoryPlot12, categoryAxis13, categoryMarker14, rectangle2D15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState28 = null;
        java.awt.geom.Rectangle2D rectangle2D29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.data.category.CategoryDataset categoryDataset33 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D27, categoryItemRendererState28, rectangle2D29, categoryPlot30, categoryAxis31, valueAxis32, categoryDataset33, (int) (short) 10, 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D11, categoryPlot12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean25 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D26, categoryItemRendererState27, rectangle2D28, categoryPlot29, categoryAxis30, valueAxis31, categoryDataset32, (int) (byte) -1, 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        int int59 = statisticalBarRenderer55.getColumnCount();
        java.awt.Paint paint60 = statisticalBarRenderer55.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem63 = statisticalBarRenderer55.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer55.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator67 = null;
        statisticalBarRenderer66.setBaseToolTipGenerator(categoryToolTipGenerator67);
        boolean boolean71 = statisticalBarRenderer66.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = null;
        statisticalBarRenderer66.setBaseItemLabelGenerator(categoryItemLabelGenerator72, false);
        java.awt.Stroke stroke75 = statisticalBarRenderer66.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation76 = null;
        boolean boolean77 = statisticalBarRenderer66.removeAnnotation(categoryAnnotation76);
        java.awt.Paint paint80 = statisticalBarRenderer66.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer55.setBasePaint(paint80);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) '#', paint80, true);
        org.jfree.chart.plot.CategoryPlot categoryPlot84 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(legendItem63);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(stroke75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertNull(categoryPlot84);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        java.awt.Stroke stroke54 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Stroke stroke56 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertNotNull(stroke56);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        boolean boolean15 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font27 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer17.setBaseItemLabelFont(font27);
        java.awt.Paint paint30 = statisticalBarRenderer17.lookupSeriesPaint(0);
        statisticalBarRenderer0.setBasePaint(paint30);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D32, categoryItemRendererState33, rectangle2D34, categoryPlot35, categoryAxis36, valueAxis37, categoryDataset38, 1, (int) (short) 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint30);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) ' ');
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker31 = null;
        java.awt.geom.Rectangle2D rectangle2D32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D28, categoryPlot29, categoryAxis30, categoryMarker31, rectangle2D32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(paint27);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        java.awt.Font font13 = statisticalBarRenderer6.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.plot.Marker marker19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D16, categoryPlot17, valueAxis18, marker19, rectangle2D20);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(font13);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Shape shape11 = statisticalBarRenderer0.getSeriesShape((int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(shape11);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint11);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 1, paint11);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.data.category.CategoryDataset categoryDataset18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D12, categoryItemRendererState13, rectangle2D14, categoryPlot15, categoryAxis16, valueAxis17, categoryDataset18, (int) '4', 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke28 = statisticalBarRenderer23.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke28);
        java.awt.Paint paint32 = statisticalBarRenderer0.getItemOutlinePaint(100, (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator34 = null;
        statisticalBarRenderer33.setBaseToolTipGenerator(categoryToolTipGenerator34);
        boolean boolean38 = statisticalBarRenderer33.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = null;
        statisticalBarRenderer33.setBaseItemLabelGenerator(categoryItemLabelGenerator39, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43, false);
        int int46 = statisticalBarRenderer42.getColumnCount();
        int int47 = statisticalBarRenderer42.getColumnCount();
        java.awt.Paint paint48 = statisticalBarRenderer42.getErrorIndicatorPaint();
        statisticalBarRenderer33.setBaseFillPaint(paint48, false);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer51 = statisticalBarRenderer33.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer51);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertNotNull(gradientPaintTransformer51);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean10 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Paint paint12 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        boolean boolean13 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range15 = statisticalBarRenderer0.findRangeBounds(categoryDataset14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((-1), (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Graphics2D graphics2D3 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = null;
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D3, categoryPlot4, rectangle2D5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer6.hasListener(eventListener12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer6.getNegativeItemLabelPosition((-1), 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18, false);
        int int21 = statisticalBarRenderer17.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer17.getNegativeItemLabelPosition((int) (short) -1, (-1));
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition24, true);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition24);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer10.getLegendItemToolTipGenerator();
        statisticalBarRenderer10.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer10.setSeriesOutlineStroke((int) (byte) 1, stroke18);
        statisticalBarRenderer0.setBaseStroke(stroke18);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation21);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator13);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer7.hasListener(eventListener13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer7.getNegativeItemLabelPosition((-1), 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 0, itemLabelPosition17);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        int int12 = statisticalBarRenderer7.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer7.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint13, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener19 = null;
        boolean boolean20 = statisticalBarRenderer16.hasListener(eventListener19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        int int24 = statisticalBarRenderer21.getPassCount();
        java.awt.Font font26 = statisticalBarRenderer21.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getBasePositiveItemLabelPosition();
        statisticalBarRenderer16.setNegativeItemLabelPositionFallback(itemLabelPosition27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer29.setBaseToolTipGenerator(categoryToolTipGenerator30);
        boolean boolean34 = statisticalBarRenderer29.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer35.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer44 = statisticalBarRenderer35.getGradientPaintTransformer();
        statisticalBarRenderer29.setGradientPaintTransformer(gradientPaintTransformer44);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator46 = statisticalBarRenderer29.getLegendItemLabelGenerator();
        statisticalBarRenderer16.setLegendItemURLGenerator(categorySeriesLabelGenerator46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator49 = null;
        statisticalBarRenderer48.setBaseURLGenerator(categoryURLGenerator49, false);
        double double52 = statisticalBarRenderer48.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator53 = statisticalBarRenderer48.getLegendItemLabelGenerator();
        statisticalBarRenderer16.setLegendItemLabelGenerator(categorySeriesLabelGenerator53);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator53);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(font26);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
        org.junit.Assert.assertNotNull(gradientPaintTransformer44);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator46);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator53);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Font font7 = statisticalBarRenderer0.getItemLabelFont((int) (short) -1, 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator62 = statisticalBarRenderer0.getSeriesToolTipGenerator(100);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(categoryToolTipGenerator62);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 1, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(stroke13);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setBaseStroke(stroke27, false);
        statisticalBarRenderer0.setBaseStroke(stroke27, true);
        java.awt.Shape shape34 = statisticalBarRenderer0.getItemShape(10, 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        java.awt.Font font42 = null;
        statisticalBarRenderer35.setSeriesItemLabelFont((int) '4', font42);
        java.awt.Stroke stroke44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer35.setBaseStroke(stroke44);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke44);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.lang.Object obj15 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) (short) 0);
        boolean boolean15 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem(10, (int) (short) -1);
        java.awt.Font font13 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(font13);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        boolean boolean24 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D11, rectangle2D12, categoryAxis13, valueAxis14, layer15, plotRenderingInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator8);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D9, categoryPlot10, categoryAxis11, categoryMarker12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) (short) 0, (int) (short) -1);
        java.awt.Font font18 = statisticalBarRenderer0.getSeriesItemLabelFont((int) '#');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(font18);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D7, categoryPlot8, valueAxis9, rectangle2D10, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer0.getPositiveItemLabelPosition(0, 1);
        java.awt.Paint paint28 = statisticalBarRenderer0.getItemFillPaint((int) (byte) 10, (int) '#');
        java.lang.Class<?> wildcardClass29 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        boolean boolean10 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 100, (int) (short) 100);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D15, categoryPlot16, valueAxis17, rectangle2D18, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener19 = null;
        boolean boolean20 = statisticalBarRenderer13.hasListener(eventListener19);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer13.getNegativeItemLabelPosition((-1), 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25, false);
        int int28 = statisticalBarRenderer24.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer24.getNegativeItemLabelPosition((int) (short) -1, (-1));
        statisticalBarRenderer13.setBaseNegativeItemLabelPosition(itemLabelPosition31, true);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition31, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator55 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator55);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesVisible((int) '#');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint33, true);
        double double38 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 0, 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator43, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0d + "'", double38 == 2.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        boolean boolean11 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) -1);
        double double12 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D10, categoryPlot11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation11, layer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        int int13 = statisticalBarRenderer10.getPassCount();
        double double14 = statisticalBarRenderer10.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint18 = statisticalBarRenderer10.getSeriesPaint((int) (short) -1);
        boolean boolean19 = statisticalBarRenderer10.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer20.setDrawBarOutline(false);
        statisticalBarRenderer20.removeAnnotations();
        statisticalBarRenderer20.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer20.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent32 = null;
        statisticalBarRenderer20.notifyListeners(rendererChangeEvent32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        int int37 = statisticalBarRenderer34.getPassCount();
        boolean boolean38 = statisticalBarRenderer34.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer34.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke44 = statisticalBarRenderer42.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer42.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator49 = null;
        statisticalBarRenderer48.setBaseURLGenerator(categoryURLGenerator49, false);
        int int52 = statisticalBarRenderer48.getColumnCount();
        java.awt.Paint paint53 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer48.setErrorIndicatorPaint(paint53);
        statisticalBarRenderer42.setBaseItemLabelPaint(paint53);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke60 = statisticalBarRenderer56.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer42.setBaseStroke(stroke60, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer63 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer63.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener66 = null;
        boolean boolean67 = statisticalBarRenderer63.hasListener(eventListener66);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer68 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke70 = statisticalBarRenderer68.getSeriesOutlineStroke((int) (byte) 10);
        int int71 = statisticalBarRenderer68.getPassCount();
        java.awt.Font font73 = statisticalBarRenderer68.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition74 = statisticalBarRenderer68.getBasePositiveItemLabelPosition();
        statisticalBarRenderer63.setNegativeItemLabelPositionFallback(itemLabelPosition74);
        statisticalBarRenderer42.setPositiveItemLabelPositionFallback(itemLabelPosition74);
        statisticalBarRenderer34.setBaseNegativeItemLabelPosition(itemLabelPosition74);
        statisticalBarRenderer20.setBasePositiveItemLabelPosition(itemLabelPosition74);
        statisticalBarRenderer10.setBaseNegativeItemLabelPosition(itemLabelPosition74, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 0, itemLabelPosition74, false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(stroke44);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertNotNull(stroke60);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(stroke70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNull(font73);
        org.junit.Assert.assertNotNull(itemLabelPosition74);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        double double15 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range17 = statisticalBarRenderer0.findRangeBounds(categoryDataset16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        double double20 = statisticalBarRenderer17.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke23 = statisticalBarRenderer17.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(10, categoryToolTipGenerator26, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        statisticalBarRenderer0.setItemMargin((double) 100L);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        boolean boolean9 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) -1);
        java.awt.Paint paint10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseItemLabelPaint(paint10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator14, false);
        java.awt.Stroke stroke17 = null;
        statisticalBarRenderer10.setErrorIndicatorStroke(stroke17);
        boolean boolean19 = statisticalBarRenderer10.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        int int28 = statisticalBarRenderer25.getPassCount();
        boolean boolean29 = statisticalBarRenderer25.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = statisticalBarRenderer25.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer25.setBaseItemLabelPaint(paint34, false);
        java.awt.Shape shape39 = statisticalBarRenderer25.lookupSeriesShape((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((-1), shape39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categoryPlot30);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(shape39);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.data.category.CategoryDataset categoryDataset8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range9 = statisticalBarRenderer0.findRangeBounds(categoryDataset8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font13 = statisticalBarRenderer8.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer14.setDrawBarOutline(false);
        java.awt.Font font21 = statisticalBarRenderer14.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer8.setBaseItemLabelFont(font21, false);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) ' ', font21, true);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertNotNull(font21);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        double double17 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2.0d + "'", double17 == 2.0d);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 10, categoryURLGenerator21, false);
        statisticalBarRenderer0.setSeriesVisible((int) '4', (java.lang.Boolean) true);
        java.awt.Paint paint29 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, (int) 'a');
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        int int37 = statisticalBarRenderer33.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        int int41 = statisticalBarRenderer38.getPassCount();
        double double42 = statisticalBarRenderer38.getUpperClip();
        double double43 = statisticalBarRenderer38.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer45.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint48 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer45.setBaseFillPaint(paint48);
        statisticalBarRenderer38.setSeriesPaint(1, paint48);
        statisticalBarRenderer33.setBaseFillPaint(paint48, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier53 = statisticalBarRenderer33.getDrawingSupplier();
        java.awt.Stroke stroke54 = statisticalBarRenderer33.getBaseOutlineStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((-1), stroke54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(itemLabelPosition28);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.2d + "'", double43 == 0.2d);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertNull(drawingSupplier53);
        org.junit.Assert.assertNotNull(stroke54);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 0, categoryURLGenerator23, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesCreateEntities(0, (java.lang.Boolean) false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator39 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNull(categoryToolTipGenerator39);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) (byte) 1, 10);
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D12, rectangle2D13, categoryAxis14, valueAxis15, layer16, plotRenderingInfo17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        java.awt.Paint paint11 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        boolean boolean19 = statisticalBarRenderer12.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer12.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator21);
        double double23 = statisticalBarRenderer12.getLowerClip();
        java.awt.Shape shape26 = statisticalBarRenderer12.getItemShape((int) (byte) 10, (int) '#');
        statisticalBarRenderer0.setBaseShape(shape26);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(shape26);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation13, layer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        boolean boolean7 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation6);
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState13 = statisticalBarRenderer0.initialise(graphics2D8, rectangle2D9, categoryPlot10, (int) (short) 10, plotRenderingInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        java.awt.Font font24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((-1), font24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(font24);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        statisticalBarRenderer0.setMaximumBarWidth(10.0d);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, true);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer0.getNegativeItemLabelPosition(10, 1);
        double double24 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setItemLabelAnchorOffset((-1.0d));
        double double8 = statisticalBarRenderer5.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer5.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke11 = statisticalBarRenderer5.lookupSeriesStroke((int) 'a');
        java.awt.Paint paint12 = statisticalBarRenderer5.getBaseFillPaint();
        statisticalBarRenderer0.setBasePaint(paint12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke15);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation17 = null;
        org.jfree.chart.util.Layer layer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation17, layer18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) (short) 0, (int) (short) -1);
        java.awt.Graphics2D graphics2D17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState22 = statisticalBarRenderer0.initialise(graphics2D17, rectangle2D18, categoryPlot19, (int) 'a', plotRenderingInfo21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 1, categoryToolTipGenerator7, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator18, true);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 1, categoryItemLabelGenerator11);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        double double20 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        double double30 = statisticalBarRenderer26.getUpperClip();
        double double31 = statisticalBarRenderer26.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer33.setBaseFillPaint(paint36);
        statisticalBarRenderer26.setSeriesPaint(1, paint36);
        statisticalBarRenderer21.setBaseFillPaint(paint36, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer21.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = null;
        statisticalBarRenderer21.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator45, true);
        boolean boolean50 = statisticalBarRenderer21.getItemCreateEntity((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke54 = statisticalBarRenderer52.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator56 = null;
        statisticalBarRenderer52.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator56, false);
        java.awt.Stroke stroke59 = null;
        statisticalBarRenderer52.setErrorIndicatorStroke(stroke59);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = statisticalBarRenderer52.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer52.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator67 = null;
        statisticalBarRenderer66.setBaseToolTipGenerator(categoryToolTipGenerator67);
        boolean boolean71 = statisticalBarRenderer66.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = null;
        statisticalBarRenderer66.setBaseItemLabelGenerator(categoryItemLabelGenerator72, false);
        statisticalBarRenderer66.setDrawBarOutline(true);
        java.awt.Paint paint78 = statisticalBarRenderer66.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer52.setBaseItemLabelPaint(paint78, false);
        statisticalBarRenderer21.setSeriesOutlinePaint((int) '4', paint78, false);
        statisticalBarRenderer0.setBaseFillPaint(paint78, false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.2d + "'", double31 == 0.2d);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(stroke54);
        org.junit.Assert.assertNotNull(itemLabelPosition63);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(paint78);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseStroke();
        int int12 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        statisticalBarRenderer13.removeAnnotations();
        boolean boolean19 = statisticalBarRenderer13.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer13.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer13.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = null;
        statisticalBarRenderer13.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator25, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = statisticalBarRenderer13.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator28);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator28);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator28, false);
        java.lang.Class<?> wildcardClass31 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint37);
        boolean boolean39 = statisticalBarRenderer34.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke40 = statisticalBarRenderer34.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke40);
        double double42 = statisticalBarRenderer0.getItemMargin();
        boolean boolean45 = statisticalBarRenderer0.getItemVisible((int) (byte) 1, (int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean10 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D11, categoryPlot12, rectangle2D13, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        java.awt.Font font13 = statisticalBarRenderer8.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseItemLabelPaint();
        boolean boolean19 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 1, 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(font13);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator12);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        double double5 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        java.awt.Font font13 = null;
        statisticalBarRenderer6.setSeriesItemLabelFont((int) '4', font13);
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer6.setBaseStroke(stroke15);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer6.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer22.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer22.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator28, true);
        statisticalBarRenderer22.removeAnnotations();
        java.awt.Paint paint32 = statisticalBarRenderer22.getErrorIndicatorPaint();
        statisticalBarRenderer6.setErrorIndicatorPaint(paint32);
        statisticalBarRenderer0.setBaseFillPaint(paint32, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint32);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (short) 10, (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D16, categoryPlot17, rectangle2D18, 0.2d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 100, (java.lang.Boolean) true, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) ' ');
        org.jfree.chart.event.RendererChangeListener rendererChangeListener28 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(paint27);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer16.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer16.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator22, true);
        statisticalBarRenderer16.removeAnnotations();
        java.awt.Paint paint26 = statisticalBarRenderer16.getErrorIndicatorPaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint26);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D28, categoryPlot29, rectangle2D30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator14);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseCreateEntities(true, false);
        boolean boolean23 = statisticalBarRenderer16.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer16.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator25);
        double double27 = statisticalBarRenderer16.getLowerClip();
        java.awt.Shape shape30 = statisticalBarRenderer16.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer31 = statisticalBarRenderer16.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer31);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNotNull(gradientPaintTransformer31);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        int int26 = statisticalBarRenderer21.getRowCount();
        java.awt.Shape shape27 = statisticalBarRenderer21.getBaseShape();
        statisticalBarRenderer10.setBaseShape(shape27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke48 = statisticalBarRenderer44.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer30.setBaseStroke(stroke48, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer51.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener54 = null;
        boolean boolean55 = statisticalBarRenderer51.hasListener(eventListener54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        int int59 = statisticalBarRenderer56.getPassCount();
        java.awt.Font font61 = statisticalBarRenderer56.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer56.getBasePositiveItemLabelPosition();
        statisticalBarRenderer51.setNegativeItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer30.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition62);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        java.awt.Stroke stroke67 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlineStroke(stroke67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(font61);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke21, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean25 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        int int33 = statisticalBarRenderer30.getPassCount();
        double double34 = statisticalBarRenderer30.getUpperClip();
        double double35 = statisticalBarRenderer30.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer37.setBaseFillPaint(paint40);
        statisticalBarRenderer30.setSeriesPaint(1, paint40);
        statisticalBarRenderer0.setSeriesFillPaint((int) ' ', paint40);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.2d + "'", double35 == 0.2d);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator13, false);
        java.awt.Stroke stroke16 = null;
        statisticalBarRenderer9.setErrorIndicatorStroke(stroke16);
        boolean boolean18 = statisticalBarRenderer9.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint22 = statisticalBarRenderer9.lookupSeriesPaint(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition((int) (short) 1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer8.getBaseFillPaint();
        java.awt.Paint paint16 = statisticalBarRenderer8.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24, false);
        int int27 = statisticalBarRenderer23.getColumnCount();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer17.setBaseItemLabelPaint(paint28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke35 = statisticalBarRenderer31.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer17.setBaseStroke(stroke35, false);
        statisticalBarRenderer8.setBaseStroke(stroke35, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (byte) -1, stroke35, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemLabelGenerator6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNotNull(stroke35);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getBaseURLGenerator();
        double double8 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = null;
        statisticalBarRenderer26.setLegendItemToolTipGenerator(categorySeriesLabelGenerator29);
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.plot.Marker marker34 = null;
        java.awt.geom.Rectangle2D rectangle2D35 = null;
        statisticalBarRenderer26.drawRangeMarker(graphics2D31, categoryPlot32, valueAxis33, marker34, rectangle2D35);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator37 = null;
        statisticalBarRenderer26.setBaseToolTipGenerator(categoryToolTipGenerator37);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer26.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer26.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint42 = statisticalBarRenderer26.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke47 = statisticalBarRenderer43.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer48.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font53 = statisticalBarRenderer48.getBaseItemLabelFont();
        statisticalBarRenderer43.setBaseItemLabelFont(font53);
        java.awt.Paint paint56 = statisticalBarRenderer43.lookupSeriesPaint(0);
        statisticalBarRenderer26.setBasePaint(paint56);
        statisticalBarRenderer0.setBaseOutlinePaint(paint56, true);
        java.lang.Boolean boolean61 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertNotNull(font53);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator30, true);
        double double33 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer34.setDrawBarOutline(false);
        java.lang.Boolean boolean40 = statisticalBarRenderer34.getSeriesVisibleInLegend((int) ' ');
        double double41 = statisticalBarRenderer34.getLowerClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer34.getSeriesPositiveItemLabelPosition((int) (byte) 1);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition43);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false, false);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        int int13 = statisticalBarRenderer10.getPassCount();
        double double14 = statisticalBarRenderer10.getUpperClip();
        double double15 = statisticalBarRenderer10.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint20);
        statisticalBarRenderer10.setSeriesPaint(1, paint20);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition((int) '4');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition24, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false);
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemLabelPaint((int) (short) -1, (int) (byte) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNull(shape13);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Shape shape11 = statisticalBarRenderer0.getSeriesShape((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator12, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(shape11);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBase((double) 'a');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke41 = statisticalBarRenderer39.getSeriesOutlineStroke((int) (byte) 10);
        int int42 = statisticalBarRenderer39.getPassCount();
        double double43 = statisticalBarRenderer39.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = statisticalBarRenderer39.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer39.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer39.getSeriesNegativeItemLabelPosition(100);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) -1, itemLabelPosition50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertNull(stroke41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition45);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        java.awt.Shape shape16 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        java.awt.Paint paint18 = statisticalBarRenderer0.getSeriesItemLabelPaint(10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape16);
        org.junit.Assert.assertNull(paint18);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Paint paint23 = statisticalBarRenderer0.getSeriesPaint(10);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener24 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(paint23);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator13, false);
        java.awt.Stroke stroke16 = null;
        statisticalBarRenderer9.setErrorIndicatorStroke(stroke16);
        boolean boolean18 = statisticalBarRenderer9.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint22 = statisticalBarRenderer9.lookupSeriesPaint(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition((int) (short) 1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition24);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        java.awt.Shape shape8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseShape(shape8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'shape' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15, false);
        int int18 = statisticalBarRenderer14.getColumnCount();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint19);
        statisticalBarRenderer8.setBaseItemLabelPaint(paint19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer22.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer8.setBaseStroke(stroke26, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener32 = null;
        boolean boolean33 = statisticalBarRenderer29.hasListener(eventListener32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        int int37 = statisticalBarRenderer34.getPassCount();
        java.awt.Font font39 = statisticalBarRenderer34.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer34.getBasePositiveItemLabelPosition();
        statisticalBarRenderer29.setNegativeItemLabelPositionFallback(itemLabelPosition40);
        statisticalBarRenderer8.setPositiveItemLabelPositionFallback(itemLabelPosition40);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition40);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(font39);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        java.awt.Shape shape14 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator15);
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemPaint((int) '#', (int) (byte) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape14);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        double double7 = statisticalBarRenderer0.getUpperClip();
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D8, categoryPlot9, valueAxis10, rectangle2D11, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer5.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator9, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Font font19 = null;
        statisticalBarRenderer12.setSeriesItemLabelFont((int) '4', font19);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke21);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getBasePositiveItemLabelPosition();
        statisticalBarRenderer5.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition23, true);
        boolean boolean29 = statisticalBarRenderer0.isSeriesVisibleInLegend(0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getErrorIndicatorStroke();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation14, layer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke33 = statisticalBarRenderer28.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = null;
        statisticalBarRenderer28.setBaseItemLabelGenerator(categoryItemLabelGenerator34);
        java.awt.Stroke stroke38 = statisticalBarRenderer28.getItemStroke((int) (byte) -1, 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke38);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator42 = statisticalBarRenderer0.getURLGenerator((int) (short) 0, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNull(categoryURLGenerator42);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        boolean boolean10 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) ' ');
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(100, categoryURLGenerator14);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint37);
        boolean boolean39 = statisticalBarRenderer34.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke40 = statisticalBarRenderer34.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke40);
        boolean boolean44 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) -1, (int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        java.lang.Class<?> wildcardClass33 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        double double6 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke18 = statisticalBarRenderer13.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer13.setBaseItemLabelGenerator(categoryItemLabelGenerator19);
        java.awt.Stroke stroke23 = statisticalBarRenderer13.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setAutoPopulateSeriesOutlinePaint(false);
        int int29 = statisticalBarRenderer24.getRowCount();
        java.awt.Shape shape30 = statisticalBarRenderer24.getBaseShape();
        statisticalBarRenderer13.setBaseShape(shape30);
        java.awt.Paint paint32 = statisticalBarRenderer13.getBasePaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint32);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(categoryItemLabelGenerator35);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getSeriesItemLabelGenerator(100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 10, categoryURLGenerator21, false);
        statisticalBarRenderer0.setSeriesVisible((int) '4', (java.lang.Boolean) true);
        java.awt.Paint paint29 = statisticalBarRenderer0.getItemPaint((int) (byte) -1, (int) 'a');
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 100, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(stroke32);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getBaseStroke();
        boolean boolean17 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 0, categoryItemLabelGenerator19);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer32.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer32.setBase((double) 1);
        java.awt.Shape shape42 = statisticalBarRenderer32.lookupSeriesShape((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape42, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(shape42);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemLabelPaint((int) (short) 100, (int) (short) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer7.getPositiveItemLabelPosition((int) '#', (int) (byte) -1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition14, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        java.lang.Object obj23 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(obj23);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener27 = null;
        boolean boolean28 = statisticalBarRenderer24.hasListener(eventListener27);
        java.awt.Paint paint31 = statisticalBarRenderer24.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer17.setBaseFillPaint(paint31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        int int37 = statisticalBarRenderer33.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer38.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = statisticalBarRenderer38.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer33.setBasePositiveItemLabelPosition(itemLabelPosition44, true);
        statisticalBarRenderer17.setBasePositiveItemLabelPosition(itemLabelPosition44);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition44, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertNotNull(itemLabelPosition44);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer24.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint32 = statisticalBarRenderer24.getSeriesPaint((int) (short) -1);
        boolean boolean33 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer34.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41, false);
        int int44 = statisticalBarRenderer40.getColumnCount();
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setErrorIndicatorPaint(paint45);
        statisticalBarRenderer34.setBaseItemLabelPaint(paint45);
        statisticalBarRenderer24.setErrorIndicatorPaint(paint45);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint45, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(paint45);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer7.hasListener(eventListener13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer7.getNegativeItemLabelPosition((-1), 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 0, itemLabelPosition17);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean22 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D6, categoryPlot7, valueAxis8, rectangle2D9, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(paint5);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer11.getLegendItemToolTipGenerator();
        statisticalBarRenderer11.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer19.setBaseFillPaint(paint22);
        statisticalBarRenderer11.setSeriesFillPaint((int) (byte) 1, paint22);
        statisticalBarRenderer0.setSeriesFillPaint((int) '4', paint22);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D26, categoryItemRendererState27, rectangle2D28, categoryPlot29, categoryAxis30, valueAxis31, categoryDataset32, (int) '#', (int) (short) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) true);
        java.awt.Paint paint32 = statisticalBarRenderer0.getItemFillPaint((-1), (int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(categoryURLGenerator33);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10L);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint37);
        boolean boolean39 = statisticalBarRenderer34.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke40 = statisticalBarRenderer34.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke40);
        double double42 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(categoryURLGenerator43);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        statisticalBarRenderer0.setBase((double) (byte) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer10.setBaseToolTipGenerator(categoryToolTipGenerator11);
        boolean boolean15 = statisticalBarRenderer10.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        java.awt.Font font23 = statisticalBarRenderer18.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer18.getBasePositiveItemLabelPosition();
        statisticalBarRenderer10.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        java.awt.Paint paint26 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint26, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(font23);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range26 = statisticalBarRenderer0.findRangeBounds(categoryDataset25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (short) 100);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getSeriesStroke((int) ' ');
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesPaint((int) '4');
        java.awt.Stroke stroke24 = null;
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke24, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesPaint((int) '4');
        java.awt.Stroke stroke32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke32, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(itemLabelPosition28);
        org.junit.Assert.assertNull(paint30);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Stroke stroke17 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertNull(stroke17);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        java.awt.Stroke stroke21 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 10);
        boolean boolean25 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(100, categoryURLGenerator27, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator30, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator33);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(shape6);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        java.awt.Paint paint15 = statisticalBarRenderer0.getBasePaint();
        java.awt.Font font16 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font16);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer17.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator21, false);
        java.awt.Stroke stroke24 = null;
        statisticalBarRenderer17.setErrorIndicatorStroke(stroke24);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer17.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) '4', categoryItemLabelGenerator31, false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer12.setBaseToolTipGenerator(categoryToolTipGenerator13);
        boolean boolean17 = statisticalBarRenderer12.getItemVisible((-1), (int) (short) 0);
        boolean boolean18 = statisticalBarRenderer12.isDrawBarOutline();
        boolean boolean19 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer12);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier31 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(drawingSupplier31);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        boolean boolean24 = statisticalBarRenderer9.removeAnnotation(categoryAnnotation23);
        java.awt.Paint paint25 = statisticalBarRenderer9.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint25, true);
        double double28 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean29 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        boolean boolean17 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        java.awt.Stroke stroke24 = statisticalBarRenderer0.getSeriesOutlineStroke(0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke24);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setBaseCreateEntities(true, false);
        boolean boolean10 = statisticalBarRenderer3.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer3.getBaseToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer3.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer3.setSeriesShape(1, shape16, false);
        statisticalBarRenderer0.setSeriesShape(1, shape16);
        boolean boolean20 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke22 = statisticalBarRenderer18.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font28 = statisticalBarRenderer23.getBaseItemLabelFont();
        statisticalBarRenderer18.setBaseItemLabelFont(font28);
        statisticalBarRenderer0.setBaseItemLabelFont(font28, false);
        java.awt.Graphics2D graphics2D32 = null;
        java.awt.geom.Rectangle2D rectangle2D33 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis34 = null;
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        org.jfree.chart.util.Layer layer36 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D32, rectangle2D33, categoryAxis34, valueAxis35, layer36, plotRenderingInfo37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(font28);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        java.awt.Paint paint26 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer8.getLegendItemURLGenerator();
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke15);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        double double23 = statisticalBarRenderer19.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition(1);
        boolean boolean28 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font29 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font29);
        statisticalBarRenderer0.setMinimumBarLength((double) (short) 0);
        boolean boolean33 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer35.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator38 = null;
        statisticalBarRenderer35.setLegendItemToolTipGenerator(categorySeriesLabelGenerator38);
        java.awt.Graphics2D graphics2D40 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot41 = null;
        org.jfree.chart.axis.ValueAxis valueAxis42 = null;
        org.jfree.chart.plot.Marker marker43 = null;
        java.awt.geom.Rectangle2D rectangle2D44 = null;
        statisticalBarRenderer35.drawRangeMarker(graphics2D40, categoryPlot41, valueAxis42, marker43, rectangle2D44);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator46 = null;
        statisticalBarRenderer35.setBaseToolTipGenerator(categoryToolTipGenerator46);
        java.awt.Stroke stroke49 = statisticalBarRenderer35.lookupSeriesOutlineStroke((-1));
        statisticalBarRenderer0.setSeriesStroke((int) (short) 10, stroke49, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition53 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) ' ');
        boolean boolean54 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(stroke49);
        org.junit.Assert.assertNotNull(itemLabelPosition53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator28);
        java.util.EventListener eventListener30 = null;
        boolean boolean31 = statisticalBarRenderer0.hasListener(eventListener30);
        statisticalBarRenderer0.setBase(0.2d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer25.setBaseToolTipGenerator(categoryToolTipGenerator26);
        boolean boolean30 = statisticalBarRenderer25.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = null;
        statisticalBarRenderer25.setBaseItemLabelGenerator(categoryItemLabelGenerator31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        int int36 = statisticalBarRenderer33.getPassCount();
        java.awt.Font font38 = statisticalBarRenderer33.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getBasePositiveItemLabelPosition();
        statisticalBarRenderer25.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        java.awt.Paint paint41 = statisticalBarRenderer25.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesFillPaint(1, paint41, true);
        java.awt.Shape shape46 = statisticalBarRenderer0.getItemShape((int) (byte) 10, (int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(font38);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(shape46);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        java.awt.Paint paint12 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getItemLabelGenerator((-1), (int) (byte) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 1, categoryToolTipGenerator24);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (short) 10, (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(itemLabelPosition14);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke37 = statisticalBarRenderer32.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = null;
        statisticalBarRenderer32.setBaseItemLabelGenerator(categoryItemLabelGenerator38);
        java.awt.Stroke stroke42 = statisticalBarRenderer32.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer43.setAutoPopulateSeriesOutlinePaint(false);
        int int48 = statisticalBarRenderer43.getRowCount();
        java.awt.Shape shape49 = statisticalBarRenderer43.getBaseShape();
        statisticalBarRenderer32.setBaseShape(shape49);
        boolean boolean51 = statisticalBarRenderer0.equals((java.lang.Object) shape49);
        java.awt.Graphics2D graphics2D52 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot53 = null;
        java.awt.geom.Rectangle2D rectangle2D54 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D52, categoryPlot53, rectangle2D54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(shape49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke28 = statisticalBarRenderer23.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke28);
        java.awt.Paint paint32 = statisticalBarRenderer0.getItemOutlinePaint(100, (-1));
        java.awt.Stroke stroke33 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator38, false);
        java.awt.Stroke stroke41 = null;
        statisticalBarRenderer34.setErrorIndicatorStroke(stroke41);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer34.setBaseItemLabelGenerator(categoryItemLabelGenerator43, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer34.getSeriesPositiveItemLabelPosition((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer48.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer48.setDrawBarOutline(false);
        java.lang.Boolean boolean54 = statisticalBarRenderer48.getSeriesVisibleInLegend((int) ' ');
        double double55 = statisticalBarRenderer48.getLowerClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer48.getSeriesPositiveItemLabelPosition((int) (byte) 1);
        statisticalBarRenderer34.setBaseNegativeItemLabelPosition(itemLabelPosition57);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition57);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer5.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator9, false);
        boolean boolean12 = statisticalBarRenderer0.equals((java.lang.Object) categoryItemLabelGenerator9);
        java.awt.Paint paint14 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        boolean boolean9 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) -1);
        org.jfree.data.category.CategoryDataset categoryDataset10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range11 = statisticalBarRenderer0.findRangeBounds(categoryDataset10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation26 = null;
        org.jfree.chart.util.Layer layer27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation26, layer27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator8);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer9.setDrawBarOutline(false);
        statisticalBarRenderer9.removeAnnotations();
        boolean boolean15 = statisticalBarRenderer9.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        statisticalBarRenderer17.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer17.setSeriesOutlineStroke((int) (byte) 1, stroke25);
        java.awt.Paint paint28 = statisticalBarRenderer17.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer9.setSeriesOutlinePaint((int) (byte) 0, paint28);
        java.awt.Paint paint31 = statisticalBarRenderer9.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint31);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = statisticalBarRenderer0.getItemLabelGenerator(1, (int) (short) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(categoryItemLabelGenerator35);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer57 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition59 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 0);
        java.awt.Paint paint62 = statisticalBarRenderer0.getItemFillPaint((int) ' ', 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer57);
        org.junit.Assert.assertNotNull(itemLabelPosition59);
        org.junit.Assert.assertNotNull(paint62);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) ' ', (int) '4');
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNull(legendItem8);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer7.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator11, false);
        java.awt.Stroke stroke14 = null;
        statisticalBarRenderer7.setErrorIndicatorStroke(stroke14);
        boolean boolean16 = statisticalBarRenderer7.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint20 = statisticalBarRenderer7.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 1, paint20, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font28 = statisticalBarRenderer23.getBaseItemLabelFont();
        int int29 = statisticalBarRenderer23.getRowCount();
        double double30 = statisticalBarRenderer23.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer23.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition33);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(font28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Paint paint23 = statisticalBarRenderer0.getSeriesPaint(10);
        java.awt.Paint paint25 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint(1, paint25, true);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.LegendItemCollection legendItemCollection25 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(legendItemCollection25);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 100);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke30);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        double double20 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        boolean boolean28 = statisticalBarRenderer21.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape30 = statisticalBarRenderer21.lookupSeriesShape((int) (short) -1);
        statisticalBarRenderer0.setBaseShape(shape30, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shape30);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer21.hasListener(eventListener24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        java.awt.Font font31 = statisticalBarRenderer26.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer26.getBasePositiveItemLabelPosition();
        statisticalBarRenderer21.setNegativeItemLabelPositionFallback(itemLabelPosition32);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean37 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        java.awt.Graphics2D graphics2D38 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis40 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker41 = null;
        java.awt.geom.Rectangle2D rectangle2D42 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D38, categoryPlot39, categoryAxis40, categoryMarker41, rectangle2D42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(font31);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator9);
        double double11 = statisticalBarRenderer0.getLowerClip();
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 100, categoryItemLabelGenerator17);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        int int17 = statisticalBarRenderer0.getRowCount();
        java.awt.Paint paint18 = null;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint18);
        java.awt.Graphics2D graphics2D20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        org.jfree.chart.util.Layer layer24 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D20, rectangle2D21, categoryAxis22, valueAxis23, layer24, plotRenderingInfo25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        int int30 = statisticalBarRenderer26.getColumnCount();
        int int31 = statisticalBarRenderer26.getColumnCount();
        java.awt.Paint paint32 = statisticalBarRenderer26.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer33.hasListener(eventListener39);
        java.awt.Shape shape43 = statisticalBarRenderer33.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer26.setBaseShape(shape43, true);
        statisticalBarRenderer0.setSeriesShape((int) (short) 10, shape43, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shape43);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((-1), categoryToolTipGenerator27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        double double11 = statisticalBarRenderer0.getItemMargin();
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D12, rectangle2D13, categoryAxis14, valueAxis15, layer16, plotRenderingInfo17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        java.awt.Graphics2D graphics2D21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = null;
        java.awt.geom.Rectangle2D rectangle2D23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D21, categoryPlot22, rectangle2D23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryURLGenerator20);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        double double15 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D16, categoryPlot17, categoryAxis18, categoryMarker19, rectangle2D20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font19 = statisticalBarRenderer14.getBaseItemLabelFont();
        int int20 = statisticalBarRenderer14.getRowCount();
        double double21 = statisticalBarRenderer14.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener25 = null;
        boolean boolean26 = statisticalBarRenderer22.hasListener(eventListener25);
        java.awt.Paint paint29 = statisticalBarRenderer22.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer14.setBaseOutlinePaint(paint29, true);
        statisticalBarRenderer12.setSeriesOutlinePaint(10, paint29);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint29);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24, false);
        int int27 = statisticalBarRenderer23.getColumnCount();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer17.setBaseItemLabelPaint(paint28);
        statisticalBarRenderer0.setBasePaint(paint28, false);
        int int33 = statisticalBarRenderer0.getPassCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        java.awt.Paint paint26 = statisticalBarRenderer0.getItemFillPaint((int) (byte) -1, (int) (short) 10);
        java.awt.Graphics2D graphics2D27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = null;
        org.jfree.chart.axis.ValueAxis valueAxis30 = null;
        org.jfree.chart.util.Layer layer31 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D27, rectangle2D28, categoryAxis29, valueAxis30, layer31, plotRenderingInfo32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getSeriesStroke((int) '4');
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range16 = statisticalBarRenderer0.findRangeBounds(categoryDataset15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(stroke14);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font20 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font20, true);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        java.awt.geom.Rectangle2D rectangle2D26 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D23, categoryPlot24, valueAxis25, rectangle2D26, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (-1.0f));
        java.awt.Paint paint15 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(paint15);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D12, categoryPlot13, valueAxis14, rectangle2D15, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer12.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23, false);
        int int26 = statisticalBarRenderer22.getColumnCount();
        java.awt.Shape shape28 = null;
        statisticalBarRenderer22.setSeriesShape((int) (byte) 100, shape28, true);
        java.awt.Stroke stroke32 = statisticalBarRenderer22.lookupSeriesStroke(1);
        statisticalBarRenderer12.setBaseStroke(stroke32, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) -1, stroke32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(stroke32);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator7);
        org.jfree.chart.LegendItemCollection legendItemCollection9 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(legendItemCollection9);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) 'a', (int) (byte) -1);
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        statisticalBarRenderer12.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer12.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent24 = null;
        statisticalBarRenderer12.notifyListeners(rendererChangeEvent24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        boolean boolean30 = statisticalBarRenderer26.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer26.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer34.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41, false);
        int int44 = statisticalBarRenderer40.getColumnCount();
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setErrorIndicatorPaint(paint45);
        statisticalBarRenderer34.setBaseItemLabelPaint(paint45);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke52 = statisticalBarRenderer48.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer34.setBaseStroke(stroke52, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer55.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener58 = null;
        boolean boolean59 = statisticalBarRenderer55.hasListener(eventListener58);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke62 = statisticalBarRenderer60.getSeriesOutlineStroke((int) (byte) 10);
        int int63 = statisticalBarRenderer60.getPassCount();
        java.awt.Font font65 = statisticalBarRenderer60.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition66 = statisticalBarRenderer60.getBasePositiveItemLabelPosition();
        statisticalBarRenderer55.setNegativeItemLabelPositionFallback(itemLabelPosition66);
        statisticalBarRenderer34.setPositiveItemLabelPositionFallback(itemLabelPosition66);
        statisticalBarRenderer26.setBaseNegativeItemLabelPosition(itemLabelPosition66);
        statisticalBarRenderer12.setBasePositiveItemLabelPosition(itemLabelPosition66);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer71 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke73 = statisticalBarRenderer71.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer71.setBaseCreateEntities(true, false);
        boolean boolean78 = statisticalBarRenderer71.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator79 = statisticalBarRenderer71.getBaseToolTipGenerator();
        java.awt.Paint paint82 = statisticalBarRenderer71.getItemFillPaint((int) (byte) 100, 1);
        statisticalBarRenderer12.setBaseFillPaint(paint82, true);
        statisticalBarRenderer0.setSeriesPaint(1, paint82);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertNotNull(stroke52);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(stroke62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNull(font65);
        org.junit.Assert.assertNotNull(itemLabelPosition66);
        org.junit.Assert.assertNull(stroke73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator79);
        org.junit.Assert.assertNotNull(paint82);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        java.awt.Font font13 = statisticalBarRenderer8.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(font13);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        double double27 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Font font29 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 100, font29, true);
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font20 = statisticalBarRenderer15.getBaseItemLabelFont();
        int int21 = statisticalBarRenderer15.getRowCount();
        double double22 = statisticalBarRenderer15.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator28 = null;
        statisticalBarRenderer24.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator28, false);
        java.awt.Stroke stroke31 = null;
        statisticalBarRenderer24.setErrorIndicatorStroke(stroke31);
        boolean boolean33 = statisticalBarRenderer24.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer24.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint37 = statisticalBarRenderer24.lookupSeriesPaint(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer24.getSeriesNegativeItemLabelPosition((int) (short) 1);
        statisticalBarRenderer15.setSeriesNegativeItemLabelPosition(0, itemLabelPosition39);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke45 = statisticalBarRenderer41.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent46 = null;
        statisticalBarRenderer41.notifyListeners(rendererChangeEvent46);
        java.awt.Paint paint50 = statisticalBarRenderer41.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer15.setBasePaint(paint50);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((int) (byte) -1, paint50, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNotNull(paint50);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        java.awt.Font font16 = null;
        statisticalBarRenderer9.setSeriesItemLabelFont((int) '4', font16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke22 = statisticalBarRenderer18.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean23 = statisticalBarRenderer9.equals((java.lang.Object) (short) 1);
        java.lang.Boolean boolean25 = statisticalBarRenderer9.getSeriesVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener29 = null;
        boolean boolean30 = statisticalBarRenderer26.hasListener(eventListener29);
        java.awt.Paint paint33 = statisticalBarRenderer26.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer9.setBasePaint(paint33);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint33, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(paint33);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesVisible((int) (short) -1);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.Marker marker14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D11, categoryPlot12, valueAxis13, marker14, rectangle2D15);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer8.getLegendItemURLGenerator();
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke15);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        double double23 = statisticalBarRenderer19.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition(1);
        boolean boolean28 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font29 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font29);
        statisticalBarRenderer0.setMinimumBarLength((double) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer34.setDrawBarOutline(false);
        java.lang.Boolean boolean40 = statisticalBarRenderer34.getSeriesVisibleInLegend((int) ' ');
        double double41 = statisticalBarRenderer34.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43, false);
        int int46 = statisticalBarRenderer42.getColumnCount();
        java.awt.Paint paint47 = statisticalBarRenderer42.getBaseFillPaint();
        statisticalBarRenderer34.setBaseItemLabelPaint(paint47, true);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint47, true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(paint47);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator9);
        double double11 = statisticalBarRenderer0.getLowerClip();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D12, categoryPlot13, rectangle2D14, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D10, categoryItemRendererState11, rectangle2D12, categoryPlot13, categoryAxis14, valueAxis15, categoryDataset16, (int) ' ', 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D12, categoryPlot13, valueAxis14, rectangle2D15, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        boolean boolean26 = statisticalBarRenderer19.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer19.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer19.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        int int33 = statisticalBarRenderer30.getPassCount();
        boolean boolean34 = statisticalBarRenderer30.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = statisticalBarRenderer30.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer36.setBaseFillPaint(paint39);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint39, false);
        statisticalBarRenderer19.setBaseFillPaint(paint39, false);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint39);
        boolean boolean46 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator49 = null;
        statisticalBarRenderer48.setBaseURLGenerator(categoryURLGenerator49, false);
        int int52 = statisticalBarRenderer48.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer53 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke55 = statisticalBarRenderer53.getSeriesOutlineStroke((int) (byte) 10);
        int int56 = statisticalBarRenderer53.getPassCount();
        double double57 = statisticalBarRenderer53.getUpperClip();
        double double58 = statisticalBarRenderer53.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer60.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint63 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer60.setBaseFillPaint(paint63);
        statisticalBarRenderer53.setSeriesPaint(1, paint63);
        statisticalBarRenderer48.setBaseFillPaint(paint63, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator68 = statisticalBarRenderer48.getBaseToolTipGenerator();
        java.awt.Paint paint69 = statisticalBarRenderer48.getBaseItemLabelPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint69, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryPlot35);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(stroke55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.2d + "'", double58 == 0.2d);
        org.junit.Assert.assertNotNull(paint63);
        org.junit.Assert.assertNull(categoryToolTipGenerator68);
        org.junit.Assert.assertNotNull(paint69);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape30 = statisticalBarRenderer0.getSeriesShape(0);
        java.awt.Stroke stroke33 = statisticalBarRenderer0.getItemStroke((int) (short) 100, 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNull(shape30);
        org.junit.Assert.assertNotNull(stroke33);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke63 = statisticalBarRenderer61.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer61.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke66 = statisticalBarRenderer61.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator67 = null;
        statisticalBarRenderer61.setBaseItemLabelGenerator(categoryItemLabelGenerator67);
        java.awt.Stroke stroke71 = statisticalBarRenderer61.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer72 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke74 = statisticalBarRenderer72.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer72.setAutoPopulateSeriesOutlinePaint(false);
        int int77 = statisticalBarRenderer72.getRowCount();
        java.awt.Shape shape78 = statisticalBarRenderer72.getBaseShape();
        statisticalBarRenderer61.setBaseShape(shape78);
        statisticalBarRenderer0.setBaseShape(shape78, true);
        boolean boolean84 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) ' ');
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(stroke63);
        org.junit.Assert.assertNotNull(stroke66);
        org.junit.Assert.assertNotNull(stroke71);
        org.junit.Assert.assertNull(stroke74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(shape78);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        java.awt.Font font4 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNull(itemLabelPosition5);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke8);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisibleInLegend();
        java.awt.Stroke stroke17 = statisticalBarRenderer11.lookupSeriesStroke((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) '#');
        int int12 = statisticalBarRenderer0.getPassCount();
        int int13 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        boolean boolean15 = statisticalBarRenderer8.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape17 = statisticalBarRenderer8.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean19 = statisticalBarRenderer8.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        java.awt.Paint paint25 = statisticalBarRenderer20.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem28 = statisticalBarRenderer20.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer20.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator31);
        java.awt.Font font35 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(legendItem28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator31);
        org.junit.Assert.assertNull(font35);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisible((int) (short) 0);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState17 = statisticalBarRenderer0.initialise(graphics2D12, rectangle2D13, categoryPlot14, (int) '4', plotRenderingInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemFillPaint(100, (int) (byte) -1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent15 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent15);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) 'a', (int) (byte) -1);
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16, true);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D19, categoryPlot20, rectangle2D21, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint11);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 1, paint11);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15, false);
        int int18 = statisticalBarRenderer14.getColumnCount();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint19);
        statisticalBarRenderer8.setBaseItemLabelPaint(paint19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer22.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer8.setBaseStroke(stroke26, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener32 = null;
        boolean boolean33 = statisticalBarRenderer29.hasListener(eventListener32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        int int37 = statisticalBarRenderer34.getPassCount();
        java.awt.Font font39 = statisticalBarRenderer34.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer34.getBasePositiveItemLabelPosition();
        statisticalBarRenderer29.setNegativeItemLabelPositionFallback(itemLabelPosition40);
        statisticalBarRenderer8.setPositiveItemLabelPositionFallback(itemLabelPosition40);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition40);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator45 = statisticalBarRenderer0.getSeriesToolTipGenerator(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNull(font39);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
        org.junit.Assert.assertNull(categoryToolTipGenerator45);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) ' ');
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        java.lang.Object obj44 = statisticalBarRenderer30.clone();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer45 = statisticalBarRenderer30.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer45);
        int int47 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertNotNull(gradientPaintTransformer45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        int int16 = statisticalBarRenderer11.getRowCount();
        java.awt.Shape shape17 = statisticalBarRenderer11.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        int int30 = statisticalBarRenderer26.getColumnCount();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer26.setErrorIndicatorPaint(paint31);
        statisticalBarRenderer20.setBaseItemLabelPaint(paint31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke38 = statisticalBarRenderer34.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer20.setBaseStroke(stroke38, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer41.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener44 = null;
        boolean boolean45 = statisticalBarRenderer41.hasListener(eventListener44);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        int int49 = statisticalBarRenderer46.getPassCount();
        java.awt.Font font51 = statisticalBarRenderer46.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer46.getBasePositiveItemLabelPosition();
        statisticalBarRenderer41.setNegativeItemLabelPositionFallback(itemLabelPosition52);
        statisticalBarRenderer20.setPositiveItemLabelPositionFallback(itemLabelPosition52);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer57.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint60 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer57.setBaseFillPaint(paint60);
        boolean boolean62 = statisticalBarRenderer57.getAutoPopulateSeriesStroke();
        java.awt.Paint paint64 = statisticalBarRenderer57.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint66 = statisticalBarRenderer57.lookupSeriesFillPaint((int) (byte) 100);
        java.awt.Stroke stroke69 = statisticalBarRenderer57.getItemStroke((int) (short) 100, (int) (short) 0);
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke69);
        statisticalBarRenderer0.setSeriesCreateEntities(10, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(font51);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertNotNull(paint66);
        org.junit.Assert.assertNotNull(stroke69);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.awt.Font font8 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) -1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(font8);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) true);
        java.awt.Paint paint32 = statisticalBarRenderer0.getItemFillPaint((-1), (int) (byte) 100);
        boolean boolean35 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 1, 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        java.awt.Paint paint7 = statisticalBarRenderer0.getItemOutlinePaint(0, (int) '#');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        boolean boolean29 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemLabelPaint(1, 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        double double7 = statisticalBarRenderer0.getLowerClip();
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState13 = statisticalBarRenderer0.initialise(graphics2D8, rectangle2D9, categoryPlot10, 0, plotRenderingInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity((-1), 1);
        statisticalBarRenderer0.setSeriesCreateEntities(10, (java.lang.Boolean) true, false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setBasePaint(paint7, true);
        java.awt.Font font12 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 0, (int) (byte) 10);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(font12);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double12 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean13 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        statisticalBarRenderer0.setBase((double) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        double double11 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator7);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer6.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        java.awt.Stroke stroke18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke18);
        boolean boolean20 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNull(itemLabelPosition26);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) (short) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation15 = null;
        boolean boolean16 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = null;
        statisticalBarRenderer18.setBaseToolTipGenerator(categoryToolTipGenerator19);
        boolean boolean23 = statisticalBarRenderer18.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer18.setBaseItemLabelGenerator(categoryItemLabelGenerator24, false);
        double double27 = statisticalBarRenderer18.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer28.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener31 = null;
        boolean boolean32 = statisticalBarRenderer28.hasListener(eventListener31);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator33);
        java.awt.Paint paint35 = statisticalBarRenderer28.getBaseItemLabelPaint();
        statisticalBarRenderer18.setBaseOutlinePaint(paint35, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((-1), paint35, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        java.awt.Graphics2D graphics2D61 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot62 = null;
        org.jfree.chart.axis.ValueAxis valueAxis63 = null;
        java.awt.geom.Rectangle2D rectangle2D64 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D61, categoryPlot62, valueAxis63, rectangle2D64, 0.2d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D11, categoryPlot12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(stroke10);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer25.setBaseToolTipGenerator(categoryToolTipGenerator26);
        boolean boolean30 = statisticalBarRenderer25.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = null;
        statisticalBarRenderer25.setBaseItemLabelGenerator(categoryItemLabelGenerator31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        int int36 = statisticalBarRenderer33.getPassCount();
        java.awt.Font font38 = statisticalBarRenderer33.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getBasePositiveItemLabelPosition();
        statisticalBarRenderer25.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        java.awt.Paint paint41 = statisticalBarRenderer25.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesFillPaint(1, paint41, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier44 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(font38);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(drawingSupplier44);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer11.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer11.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator17, true);
        statisticalBarRenderer11.removeAnnotations();
        java.lang.Object obj21 = statisticalBarRenderer11.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        int int25 = statisticalBarRenderer22.getPassCount();
        double double26 = statisticalBarRenderer22.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition28);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer32.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer32.setBaseFillPaint(paint35);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint35, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer9 = statisticalBarRenderer0.getGradientPaintTransformer();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNull(gradientPaintTransformer9);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        java.awt.Shape shape14 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator15);
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemPaint((int) '#', (int) (byte) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent20 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent20);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape14);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 10);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getSeriesOutlineStroke(100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(stroke10);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator13);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getSeriesStroke((int) '4');
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemPaint((-1), 10);
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D18, categoryPlot19, categoryAxis20, categoryMarker21, rectangle2D22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(1, categoryToolTipGenerator13, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth(2.0d);
        boolean boolean29 = statisticalBarRenderer0.isItemLabelVisible(0, (int) (short) -1);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator30);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier10 = statisticalBarRenderer0.getDrawingSupplier();
        boolean boolean11 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer12.setBaseToolTipGenerator(categoryToolTipGenerator13);
        boolean boolean17 = statisticalBarRenderer12.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer18.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer27 = statisticalBarRenderer18.getGradientPaintTransformer();
        statisticalBarRenderer12.setGradientPaintTransformer(gradientPaintTransformer27);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer12.getLegendItemLabelGenerator();
        java.awt.Stroke stroke30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke30);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke30);
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) -1);
        org.junit.Assert.assertNull(drawingSupplier10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNotNull(gradientPaintTransformer27);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(paint34);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Font font16 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesVisibleInLegend((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        boolean boolean25 = statisticalBarRenderer20.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke26 = statisticalBarRenderer20.getBaseStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke26);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(stroke26);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(categoryURLGenerator11);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) '#', (int) (short) 1);
        statisticalBarRenderer0.setBase((double) 10.0f);
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D11, rectangle2D12, categoryAxis13, valueAxis14, layer15, plotRenderingInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        java.awt.Shape shape28 = statisticalBarRenderer0.getSeriesShape(100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(shape28);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        java.lang.Class<?> wildcardClass8 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 100);
        org.jfree.chart.LegendItemCollection legendItemCollection10 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(legendItemCollection10);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D5, categoryItemRendererState6, rectangle2D7, categoryPlot8, categoryAxis9, valueAxis10, categoryDataset11, (int) (short) 10, (int) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        boolean boolean11 = statisticalBarRenderer0.getItemVisible((int) (short) 10, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator28);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, (int) '4');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(categoryURLGenerator32);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        java.awt.Paint paint17 = statisticalBarRenderer12.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem20 = statisticalBarRenderer12.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer12.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer12.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator23);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(legendItem20);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator23);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(itemLabelPosition21);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer0.hasListener(eventListener12);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryURLGenerator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        java.lang.Object obj14 = statisticalBarRenderer0.clone();
        statisticalBarRenderer0.setBase(0.0d);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        java.awt.Stroke stroke27 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = null;
        statisticalBarRenderer30.setLegendItemToolTipGenerator(categorySeriesLabelGenerator33);
        java.awt.Graphics2D graphics2D35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        org.jfree.chart.plot.Marker marker38 = null;
        java.awt.geom.Rectangle2D rectangle2D39 = null;
        statisticalBarRenderer30.drawRangeMarker(graphics2D35, categoryPlot36, valueAxis37, marker38, rectangle2D39);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator41 = null;
        statisticalBarRenderer30.setBaseToolTipGenerator(categoryToolTipGenerator41);
        java.awt.Stroke stroke44 = statisticalBarRenderer30.lookupSeriesOutlineStroke((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (short) -1, stroke44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        boolean boolean14 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (short) 0);
        boolean boolean17 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 1, 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) -1, categoryItemLabelGenerator19, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryURLGenerator11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        double double9 = statisticalBarRenderer6.getBase();
        java.awt.Paint paint10 = statisticalBarRenderer6.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 0, paint10, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation13, layer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        java.awt.Paint paint33 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) true);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = null;
        java.awt.geom.Rectangle2D rectangle2D39 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D37, categoryPlot38, rectangle2D39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint33);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer7.hasListener(eventListener13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer7.getNegativeItemLabelPosition((-1), 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 0, itemLabelPosition17);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesStroke((int) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        boolean boolean27 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemLabelPaint(1, 0);
        double double18 = statisticalBarRenderer0.getLowerClip();
        java.awt.Paint paint19 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        int int26 = statisticalBarRenderer21.getRowCount();
        java.awt.Shape shape27 = statisticalBarRenderer21.getBaseShape();
        statisticalBarRenderer10.setBaseShape(shape27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke48 = statisticalBarRenderer44.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer30.setBaseStroke(stroke48, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer51.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener54 = null;
        boolean boolean55 = statisticalBarRenderer51.hasListener(eventListener54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        int int59 = statisticalBarRenderer56.getPassCount();
        java.awt.Font font61 = statisticalBarRenderer56.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer56.getBasePositiveItemLabelPosition();
        statisticalBarRenderer51.setNegativeItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer30.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition62);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        java.awt.Shape shape68 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(font61);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
        org.junit.Assert.assertNotNull(shape68);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint37);
        boolean boolean39 = statisticalBarRenderer34.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke40 = statisticalBarRenderer34.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator42, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stroke40);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        boolean boolean10 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) ' ');
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        int int13 = statisticalBarRenderer0.getRowCount();
        java.lang.Object obj14 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(obj14);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.Marker marker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D9, categoryPlot10, valueAxis11, marker12, rectangle2D13);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer10.setBaseToolTipGenerator(categoryToolTipGenerator11);
        boolean boolean15 = statisticalBarRenderer10.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        java.awt.Font font23 = statisticalBarRenderer18.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer18.getBasePositiveItemLabelPosition();
        statisticalBarRenderer10.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        java.awt.Paint paint26 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint26, false);
        double double29 = statisticalBarRenderer0.getBase();
        boolean boolean31 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer32.setItemLabelAnchorOffset((-1.0d));
        double double35 = statisticalBarRenderer32.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer32.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke38 = statisticalBarRenderer32.lookupSeriesStroke((int) 'a');
        java.awt.Paint paint39 = statisticalBarRenderer32.getBaseFillPaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint39);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(font23);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) '#');
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 0);
        boolean boolean24 = statisticalBarRenderer0.isSeriesVisibleInLegend(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.util.EventListener eventListener17 = null;
        boolean boolean18 = statisticalBarRenderer0.hasListener(eventListener17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator20, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        double double27 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 10, categoryURLGenerator29, true);
        boolean boolean32 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator28, false);
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint31);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        double double17 = statisticalBarRenderer14.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        int int25 = statisticalBarRenderer20.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener29 = null;
        boolean boolean30 = statisticalBarRenderer26.hasListener(eventListener29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        int int34 = statisticalBarRenderer31.getPassCount();
        java.awt.Font font36 = statisticalBarRenderer31.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer31.getBasePositiveItemLabelPosition();
        statisticalBarRenderer26.setNegativeItemLabelPositionFallback(itemLabelPosition37);
        statisticalBarRenderer20.setBaseNegativeItemLabelPosition(itemLabelPosition37, false);
        statisticalBarRenderer14.setSeriesNegativeItemLabelPosition(0, itemLabelPosition37);
        boolean boolean42 = statisticalBarRenderer14.getAutoPopulateSeriesStroke();
        statisticalBarRenderer14.setBaseSeriesVisible(false);
        statisticalBarRenderer14.setSeriesVisible((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer14.getNegativeItemLabelPosition(1, (int) (short) 1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) 'a', itemLabelPosition50);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNull(font36);
        org.junit.Assert.assertNotNull(itemLabelPosition37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        int int30 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator32);
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D34, categoryPlot35, categoryAxis36, categoryMarker37, rectangle2D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator6);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer5.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator9, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Font font19 = null;
        statisticalBarRenderer12.setSeriesItemLabelFont((int) '4', font19);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke21);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getBasePositiveItemLabelPosition();
        statisticalBarRenderer5.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition23, true);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemFillPaint(100, (int) (byte) -1);
        java.lang.Class<?> wildcardClass15 = paint14.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        int int24 = statisticalBarRenderer0.getPassCount();
        boolean boolean26 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint33, true);
        double double38 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 0, 0);
        int int42 = statisticalBarRenderer0.getPassCount();
        java.awt.Paint paint43 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0d + "'", double38 == 2.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(paint43);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12, false);
        org.jfree.chart.LegendItemCollection legendItemCollection15 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(legendItemCollection15);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D7, categoryPlot8, categoryAxis9, categoryMarker10, rectangle2D11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        boolean boolean37 = statisticalBarRenderer17.isSeriesItemLabelsVisible((int) '4');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (byte) 10, categoryToolTipGenerator11, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesCreateEntities((int) '4', (java.lang.Boolean) true, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer8.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer24.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer24.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator30, true);
        statisticalBarRenderer24.removeAnnotations();
        java.awt.Paint paint34 = statisticalBarRenderer24.getErrorIndicatorPaint();
        statisticalBarRenderer8.setErrorIndicatorPaint(paint34);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 1, paint34);
        boolean boolean37 = statisticalBarRenderer0.isDrawBarOutline();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 1);
        boolean boolean15 = statisticalBarRenderer0.isSeriesVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        double double22 = statisticalBarRenderer18.getUpperClip();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setSeriesPaint(100, paint24);
        statisticalBarRenderer17.setBasePaint(paint24);
        java.awt.Paint paint27 = statisticalBarRenderer17.getErrorIndicatorPaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer17.getSeriesNegativeItemLabelPosition((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) -1, itemLabelPosition29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener21 = null;
        boolean boolean22 = statisticalBarRenderer18.hasListener(eventListener21);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        int int26 = statisticalBarRenderer23.getPassCount();
        java.awt.Font font28 = statisticalBarRenderer23.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer23.getBasePositiveItemLabelPosition();
        statisticalBarRenderer18.setNegativeItemLabelPositionFallback(itemLabelPosition29);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) ' ', itemLabelPosition29);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesItemLabelPaint(0);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(font28);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertNull(paint33);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        java.awt.Shape shape40 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        java.awt.Paint paint42 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer43.setBaseCreateEntities(true, false);
        boolean boolean50 = statisticalBarRenderer43.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape52 = statisticalBarRenderer43.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean54 = statisticalBarRenderer43.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        int int59 = statisticalBarRenderer55.getColumnCount();
        java.awt.Paint paint60 = statisticalBarRenderer55.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem63 = statisticalBarRenderer55.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer55.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator66 = statisticalBarRenderer55.getLegendItemLabelGenerator();
        statisticalBarRenderer43.setLegendItemURLGenerator(categorySeriesLabelGenerator66);
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator66);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(shape40);
        org.junit.Assert.assertNull(paint42);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shape52);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(legendItem63);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator66);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font7);
        boolean boolean11 = statisticalBarRenderer0.isItemLabelVisible(0, (int) '#');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        java.awt.Font font36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer17.setBaseItemLabelFont(font36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'font' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setMaximumBarWidth((double) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        double double19 = statisticalBarRenderer16.getBase();
        java.awt.Paint paint20 = statisticalBarRenderer16.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) 'a', paint20, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D17, categoryPlot18, categoryAxis19, categoryMarker20, rectangle2D21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) -1, categoryToolTipGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(itemLabelPosition5);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setBase((-1.0d));
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setDrawBarOutline(false);
        int int12 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        boolean boolean24 = statisticalBarRenderer9.removeAnnotation(categoryAnnotation23);
        java.awt.Paint paint25 = statisticalBarRenderer9.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint25, true);
        double double28 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        double double29 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + (-1.0d) + "'", double28 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        double double6 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double13 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        int int30 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator32);
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        java.awt.geom.Rectangle2D rectangle2D36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D34, categoryPlot35, rectangle2D36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator2 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator2);
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font11 = statisticalBarRenderer6.getBaseItemLabelFont();
        int int12 = statisticalBarRenderer6.getRowCount();
        double double13 = statisticalBarRenderer6.getBase();
        java.awt.Stroke stroke16 = statisticalBarRenderer6.getItemStroke((int) (byte) 0, (int) (byte) 10);
        statisticalBarRenderer0.setBaseStroke(stroke16, true);
        java.awt.Stroke stroke20 = statisticalBarRenderer0.getSeriesStroke((int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNotNull(font11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(stroke20);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) '4');
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        double double27 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 10, categoryURLGenerator29, true);
        statisticalBarRenderer0.setMinimumBarLength((double) 'a');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        double double9 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setBaseCreateEntities(true);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.plot.Marker marker15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D12, categoryPlot13, valueAxis14, marker15, rectangle2D16);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0d + "'", double9 == 2.0d);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Font font9 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer29.setBaseToolTipGenerator(categoryToolTipGenerator30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setAutoPopulateSeriesOutlinePaint(false);
        int int37 = statisticalBarRenderer32.getRowCount();
        java.awt.Shape shape38 = statisticalBarRenderer32.getBaseShape();
        statisticalBarRenderer29.setBaseShape(shape38);
        statisticalBarRenderer0.setBaseShape(shape38);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator42 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 100, categoryToolTipGenerator42, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator46 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) -1, categoryItemLabelGenerator46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(shape38);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.lang.Class<?> wildcardClass12 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier9 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertNull(drawingSupplier9);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.jfree.chart.LegendItemCollection legendItemCollection5 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(legendItemCollection5);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer27 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Paint paint28 = statisticalBarRenderer0.getBasePaint();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(gradientPaintTransformer27);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator34 = null;
        statisticalBarRenderer33.setBaseToolTipGenerator(categoryToolTipGenerator34);
        boolean boolean38 = statisticalBarRenderer33.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = statisticalBarRenderer33.getBaseURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41, false);
        int int44 = statisticalBarRenderer40.getColumnCount();
        java.awt.Paint paint45 = statisticalBarRenderer40.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem48 = statisticalBarRenderer40.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer40.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator52 = null;
        statisticalBarRenderer51.setBaseToolTipGenerator(categoryToolTipGenerator52);
        boolean boolean56 = statisticalBarRenderer51.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator57 = null;
        statisticalBarRenderer51.setBaseItemLabelGenerator(categoryItemLabelGenerator57, false);
        java.awt.Stroke stroke60 = statisticalBarRenderer51.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation61 = null;
        boolean boolean62 = statisticalBarRenderer51.removeAnnotation(categoryAnnotation61);
        java.awt.Paint paint65 = statisticalBarRenderer51.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer40.setBasePaint(paint65);
        java.awt.Stroke stroke67 = statisticalBarRenderer40.getBaseStroke();
        statisticalBarRenderer33.setErrorIndicatorStroke(stroke67);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke67);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator70 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNull(itemLabelPosition31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(categoryURLGenerator39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNull(legendItem48);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(stroke60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(paint65);
        org.junit.Assert.assertNotNull(stroke67);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator70);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer11.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer11.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator17, true);
        statisticalBarRenderer11.removeAnnotations();
        java.lang.Object obj21 = statisticalBarRenderer11.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        int int25 = statisticalBarRenderer22.getPassCount();
        double double26 = statisticalBarRenderer22.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition28);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition28);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 0, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator13, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer13.setBaseToolTipGenerator(categoryToolTipGenerator14);
        boolean boolean18 = statisticalBarRenderer13.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = statisticalBarRenderer19.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer28 = statisticalBarRenderer19.getGradientPaintTransformer();
        statisticalBarRenderer13.setGradientPaintTransformer(gradientPaintTransformer28);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = statisticalBarRenderer13.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        java.awt.Paint paint34 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 100, (int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator27);
        org.junit.Assert.assertNotNull(gradientPaintTransformer28);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator30);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer6.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        java.awt.Stroke stroke18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke18);
        java.awt.Paint paint20 = statisticalBarRenderer0.getBaseFillPaint();
        boolean boolean21 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) ' ');
        java.awt.Graphics2D graphics2D24 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = null;
        org.jfree.chart.axis.ValueAxis valueAxis26 = null;
        java.awt.geom.Rectangle2D rectangle2D27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D24, categoryPlot25, valueAxis26, rectangle2D27, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        java.awt.Stroke stroke27 = statisticalBarRenderer0.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        int int39 = statisticalBarRenderer35.getColumnCount();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer35.setErrorIndicatorPaint(paint40);
        statisticalBarRenderer29.setBaseItemLabelPaint(paint40);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke47 = statisticalBarRenderer43.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer29.setBaseStroke(stroke47, false);
        statisticalBarRenderer29.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer52.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator55 = statisticalBarRenderer52.getLegendItemToolTipGenerator();
        statisticalBarRenderer52.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer60.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint63 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer60.setBaseFillPaint(paint63);
        statisticalBarRenderer52.setSeriesFillPaint((int) (byte) 1, paint63);
        statisticalBarRenderer29.setBaseItemLabelPaint(paint63, false);
        java.awt.Shape shape69 = statisticalBarRenderer29.getSeriesShape((int) (byte) 1);
        java.awt.Shape shape71 = statisticalBarRenderer29.lookupSeriesShape((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator55);
        org.junit.Assert.assertNotNull(paint63);
        org.junit.Assert.assertNull(shape69);
        org.junit.Assert.assertNotNull(shape71);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity(100, (int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setErrorIndicatorPaint(paint21);
        statisticalBarRenderer10.setBaseItemLabelPaint(paint21);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation24 = null;
        boolean boolean25 = statisticalBarRenderer10.removeAnnotation(categoryAnnotation24);
        java.awt.Font font26 = statisticalBarRenderer10.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint35 = statisticalBarRenderer28.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer10.setSeriesFillPaint((int) '#', paint35);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 100, paint35);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean25 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation29 = null;
        org.jfree.chart.util.Layer layer30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation29, layer30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        java.awt.Shape shape4 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 1);
        org.junit.Assert.assertNotNull(shape4);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true, true);
        double double14 = statisticalBarRenderer0.getMinimumBarLength();
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier7 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(drawingSupplier7);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape30 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setMinimumBarLength(1.0d);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 10, (java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNull(shape30);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        double double18 = statisticalBarRenderer13.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer13.setSeriesPaint(1, paint23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer13.getSeriesPositiveItemLabelPosition((int) '4');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition27, true);
        boolean boolean30 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNull(paint8);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator(1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (byte) 0, (int) (byte) -1);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D16, categoryPlot17, valueAxis18, rectangle2D19, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint7 = statisticalBarRenderer0.getItemOutlinePaint(10, 0);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemFillPaint((int) '#', (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        boolean boolean9 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = statisticalBarRenderer11.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double20 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer21.hasListener(eventListener24);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator26);
        java.awt.Paint paint28 = statisticalBarRenderer21.getBaseItemLabelPaint();
        statisticalBarRenderer11.setBasePaint(paint28);
        statisticalBarRenderer0.setSeriesFillPaint(100, paint28, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 10, categoryURLGenerator33);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNull(categoryItemLabelGenerator19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        boolean boolean32 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) 'a');
        java.lang.Object obj39 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(obj39);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        boolean boolean24 = statisticalBarRenderer9.removeAnnotation(categoryAnnotation23);
        java.awt.Paint paint25 = statisticalBarRenderer9.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint25, true);
        java.awt.Paint paint29 = statisticalBarRenderer0.getSeriesPaint((-1));
        org.jfree.chart.event.RendererChangeListener rendererChangeListener30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(paint29);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        boolean boolean26 = statisticalBarRenderer19.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer19.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer19.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        int int33 = statisticalBarRenderer30.getPassCount();
        boolean boolean34 = statisticalBarRenderer30.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = statisticalBarRenderer30.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer36.setBaseFillPaint(paint39);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint39, false);
        statisticalBarRenderer19.setBaseFillPaint(paint39, false);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint39);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryPlot35);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator9);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Stroke stroke22 = statisticalBarRenderer0.getSeriesStroke((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener26 = null;
        boolean boolean27 = statisticalBarRenderer23.hasListener(eventListener26);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        int int31 = statisticalBarRenderer28.getPassCount();
        java.awt.Font font33 = statisticalBarRenderer28.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer28.getBasePositiveItemLabelPosition();
        statisticalBarRenderer23.setNegativeItemLabelPositionFallback(itemLabelPosition34);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator37 = null;
        statisticalBarRenderer36.setBaseToolTipGenerator(categoryToolTipGenerator37);
        boolean boolean41 = statisticalBarRenderer36.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke44 = statisticalBarRenderer42.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer42.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator50 = statisticalBarRenderer42.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer51 = statisticalBarRenderer42.getGradientPaintTransformer();
        statisticalBarRenderer36.setGradientPaintTransformer(gradientPaintTransformer51);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator53 = statisticalBarRenderer36.getLegendItemLabelGenerator();
        statisticalBarRenderer23.setLegendItemURLGenerator(categorySeriesLabelGenerator53);
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator53);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(font33);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(stroke44);
        org.junit.Assert.assertNull(categoryItemLabelGenerator50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer51);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator53);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        java.awt.Paint paint16 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint16, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Shape shape21 = null;
        statisticalBarRenderer0.setSeriesShape((int) (short) 10, shape21);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(itemLabelPosition19);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((-1), (int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 1, categoryItemLabelGenerator7, true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        java.awt.Shape shape12 = statisticalBarRenderer0.lookupSeriesShape((int) '4');
        boolean boolean13 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer0.getItemLabelGenerator((int) ' ', (int) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNotNull(shape12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        statisticalBarRenderer16.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator20, false);
        java.awt.Stroke stroke23 = null;
        statisticalBarRenderer16.setErrorIndicatorStroke(stroke23);
        boolean boolean25 = statisticalBarRenderer16.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) ' ', itemLabelPosition27);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        statisticalBarRenderer0.setBase((double) 0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        double double9 = statisticalBarRenderer6.getBase();
        java.awt.Paint paint10 = statisticalBarRenderer6.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 0, paint10, true);
        java.awt.Stroke stroke14 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 0, stroke14);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint10);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator7, true);
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis12 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D10, categoryPlot11, categoryAxis12, categoryMarker13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer32.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator35 = null;
        statisticalBarRenderer32.setLegendItemToolTipGenerator(categorySeriesLabelGenerator35);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.Marker marker40 = null;
        java.awt.geom.Rectangle2D rectangle2D41 = null;
        statisticalBarRenderer32.drawRangeMarker(graphics2D37, categoryPlot38, valueAxis39, marker40, rectangle2D41);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator43 = null;
        statisticalBarRenderer32.setBaseToolTipGenerator(categoryToolTipGenerator43);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = statisticalBarRenderer32.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 0, itemLabelPosition45);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition45);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Font font7 = statisticalBarRenderer0.getItemLabelFont((int) (short) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        double double18 = statisticalBarRenderer13.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer13.setSeriesPaint(1, paint23);
        statisticalBarRenderer8.setBaseFillPaint(paint23, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer8.getBaseToolTipGenerator();
        java.awt.Paint paint29 = statisticalBarRenderer8.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint29, false);
        int int32 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        double double20 = statisticalBarRenderer17.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke23 = statisticalBarRenderer17.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke23);
        java.awt.Paint paint25 = statisticalBarRenderer0.getBaseFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        java.awt.Paint paint33 = statisticalBarRenderer0.getBaseItemLabelPaint();
        double double34 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent4 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer6.setBaseToolTipGenerator(categoryToolTipGenerator7);
        boolean boolean11 = statisticalBarRenderer6.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = statisticalBarRenderer12.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer21 = statisticalBarRenderer12.getGradientPaintTransformer();
        statisticalBarRenderer6.setGradientPaintTransformer(gradientPaintTransformer21);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer6.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator25, false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator20);
        org.junit.Assert.assertNotNull(gradientPaintTransformer21);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator23);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font13 = statisticalBarRenderer8.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer14.setDrawBarOutline(false);
        java.awt.Font font21 = statisticalBarRenderer14.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer8.setBaseItemLabelFont(font21, false);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) ' ', font21, true);
        java.awt.Font font28 = statisticalBarRenderer0.getItemLabelFont(100, (int) (short) 10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNotNull(font28);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean14 = statisticalBarRenderer0.equals((java.lang.Object) (short) 1);
        java.lang.Boolean boolean16 = statisticalBarRenderer0.getSeriesVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener20 = null;
        boolean boolean21 = statisticalBarRenderer17.hasListener(eventListener20);
        java.awt.Paint paint24 = statisticalBarRenderer17.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBasePaint(paint24);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator9);
        double double11 = statisticalBarRenderer0.getLowerClip();
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseCreateEntities(true, false);
        boolean boolean23 = statisticalBarRenderer16.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer16.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer16.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        int int30 = statisticalBarRenderer27.getPassCount();
        boolean boolean31 = statisticalBarRenderer27.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = statisticalBarRenderer27.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer33.setBaseFillPaint(paint36);
        statisticalBarRenderer27.setBaseItemLabelPaint(paint36, false);
        statisticalBarRenderer16.setBaseFillPaint(paint36, false);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint36, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(categoryPlot32);
        org.junit.Assert.assertNotNull(paint36);
    }
}

