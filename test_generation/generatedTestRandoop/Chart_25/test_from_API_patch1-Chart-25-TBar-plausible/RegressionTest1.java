import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = null;
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 0, paint34, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer38.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator42, false);
        java.awt.Stroke stroke45 = null;
        statisticalBarRenderer38.setErrorIndicatorStroke(stroke45);
        boolean boolean47 = statisticalBarRenderer38.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer38.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint51 = statisticalBarRenderer38.lookupSeriesPaint(0);
        boolean boolean54 = statisticalBarRenderer38.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint55 = statisticalBarRenderer38.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer56.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator59 = statisticalBarRenderer56.getLegendItemToolTipGenerator();
        statisticalBarRenderer56.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer64 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer64.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint67 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer64.setBaseFillPaint(paint67);
        statisticalBarRenderer56.setSeriesFillPaint((int) (byte) 1, paint67);
        statisticalBarRenderer38.setBaseItemLabelPaint(paint67);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((-1), paint67, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator59);
        org.junit.Assert.assertNotNull(paint67);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = null;
        statisticalBarRenderer30.setBaseToolTipGenerator(categoryToolTipGenerator31);
        boolean boolean35 = statisticalBarRenderer30.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer30.setBaseItemLabelGenerator(categoryItemLabelGenerator36, false);
        double double39 = statisticalBarRenderer30.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer40.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener43 = null;
        boolean boolean44 = statisticalBarRenderer40.hasListener(eventListener43);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator45);
        java.awt.Paint paint47 = statisticalBarRenderer40.getBaseItemLabelPaint();
        statisticalBarRenderer30.setBaseOutlinePaint(paint47, false);
        statisticalBarRenderer30.setDrawBarOutline(false);
        java.awt.Paint paint53 = statisticalBarRenderer30.getSeriesPaint(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer54.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener57 = null;
        boolean boolean58 = statisticalBarRenderer54.hasListener(eventListener57);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer54.setBaseURLGenerator(categoryURLGenerator59);
        java.awt.Paint paint61 = statisticalBarRenderer54.getBaseItemLabelPaint();
        statisticalBarRenderer54.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer64 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke66 = statisticalBarRenderer64.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator68 = null;
        statisticalBarRenderer64.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator68, false);
        java.awt.Stroke stroke71 = null;
        statisticalBarRenderer64.setErrorIndicatorStroke(stroke71);
        boolean boolean73 = statisticalBarRenderer64.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition75 = statisticalBarRenderer64.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer54.setBaseNegativeItemLabelPosition(itemLabelPosition75, true);
        statisticalBarRenderer30.setPositiveItemLabelPositionFallback(itemLabelPosition75);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) -1, itemLabelPosition75, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.2d + "'", double39 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNull(paint53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertNull(stroke66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition75);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 10);
        boolean boolean25 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(100, categoryURLGenerator27, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 1, categoryItemLabelGenerator31, false);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer34 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(gradientPaintTransformer34);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator7);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke26 = statisticalBarRenderer21.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer21.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        java.awt.Stroke stroke31 = statisticalBarRenderer21.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setAutoPopulateSeriesOutlinePaint(false);
        int int37 = statisticalBarRenderer32.getRowCount();
        java.awt.Shape shape38 = statisticalBarRenderer32.getBaseShape();
        statisticalBarRenderer21.setBaseShape(shape38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer41.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator48 = null;
        statisticalBarRenderer47.setBaseURLGenerator(categoryURLGenerator48, false);
        int int51 = statisticalBarRenderer47.getColumnCount();
        java.awt.Paint paint52 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer47.setErrorIndicatorPaint(paint52);
        statisticalBarRenderer41.setBaseItemLabelPaint(paint52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke57 = statisticalBarRenderer55.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke59 = statisticalBarRenderer55.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer41.setBaseStroke(stroke59, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer62.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener65 = null;
        boolean boolean66 = statisticalBarRenderer62.hasListener(eventListener65);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer67 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke69 = statisticalBarRenderer67.getSeriesOutlineStroke((int) (byte) 10);
        int int70 = statisticalBarRenderer67.getPassCount();
        java.awt.Font font72 = statisticalBarRenderer67.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition73 = statisticalBarRenderer67.getBasePositiveItemLabelPosition();
        statisticalBarRenderer62.setNegativeItemLabelPositionFallback(itemLabelPosition73);
        statisticalBarRenderer41.setPositiveItemLabelPositionFallback(itemLabelPosition73);
        statisticalBarRenderer21.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition73);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition73);
        boolean boolean78 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator80 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 0, categoryURLGenerator80, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertNull(stroke57);
        org.junit.Assert.assertNotNull(stroke59);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(stroke69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNull(font72);
        org.junit.Assert.assertNotNull(itemLabelPosition73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState17 = statisticalBarRenderer0.initialise(graphics2D12, rectangle2D13, categoryPlot14, (int) (short) -1, plotRenderingInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryPlot9);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator22);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier10 = statisticalBarRenderer0.getDrawingSupplier();
        boolean boolean11 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Font font19 = null;
        statisticalBarRenderer12.setSeriesItemLabelFont((int) '4', font19);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke21);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = null;
        statisticalBarRenderer12.setSeriesToolTipGenerator(100, categoryToolTipGenerator27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer12.getPositiveItemLabelPosition((int) (byte) 100, (int) '#');
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition31);
        org.junit.Assert.assertNull(drawingSupplier10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        int int59 = statisticalBarRenderer55.getColumnCount();
        java.awt.Paint paint60 = statisticalBarRenderer55.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem63 = statisticalBarRenderer55.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer55.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator67 = null;
        statisticalBarRenderer66.setBaseToolTipGenerator(categoryToolTipGenerator67);
        boolean boolean71 = statisticalBarRenderer66.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = null;
        statisticalBarRenderer66.setBaseItemLabelGenerator(categoryItemLabelGenerator72, false);
        java.awt.Stroke stroke75 = statisticalBarRenderer66.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation76 = null;
        boolean boolean77 = statisticalBarRenderer66.removeAnnotation(categoryAnnotation76);
        java.awt.Paint paint80 = statisticalBarRenderer66.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer55.setBasePaint(paint80);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) '#', paint80, true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(legendItem63);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(stroke75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(paint80);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator8, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer11.setDrawBarOutline(false);
        statisticalBarRenderer11.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.chart.plot.Marker marker22 = null;
        java.awt.geom.Rectangle2D rectangle2D23 = null;
        statisticalBarRenderer11.drawRangeMarker(graphics2D19, categoryPlot20, valueAxis21, marker22, rectangle2D23);
        statisticalBarRenderer11.setSeriesCreateEntities((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Paint paint28 = statisticalBarRenderer11.getBaseItemLabelPaint();
        java.awt.Font font31 = statisticalBarRenderer11.getItemLabelFont(0, 0);
        statisticalBarRenderer0.setBaseItemLabelFont(font31);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(font31);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke63 = statisticalBarRenderer61.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer61.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener67 = null;
        boolean boolean68 = statisticalBarRenderer61.hasListener(eventListener67);
        java.awt.Paint paint71 = statisticalBarRenderer61.getItemFillPaint((int) (short) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(stroke63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(paint71);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesItemLabelPaint(1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(paint8);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D7, categoryPlot8, rectangle2D9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Font font19 = statisticalBarRenderer0.getItemLabelFont((int) (short) 0, 10);
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Shape shape11 = statisticalBarRenderer0.lookupSeriesShape((int) '#');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(shape11);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) (byte) 1, 10);
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesCreateEntities((int) '#');
        statisticalBarRenderer0.setSeriesCreateEntities(10, (java.lang.Boolean) true, true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemFillPaint((int) (short) 0, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer11.setBaseFillPaint(paint14);
        boolean boolean16 = statisticalBarRenderer11.getAutoPopulateSeriesStroke();
        java.awt.Paint paint18 = statisticalBarRenderer11.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint20 = statisticalBarRenderer11.lookupSeriesFillPaint((int) (byte) 100);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint20);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNull(itemLabelPosition9);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBase((double) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) 100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        int int14 = statisticalBarRenderer10.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        int int18 = statisticalBarRenderer15.getPassCount();
        double double19 = statisticalBarRenderer15.getUpperClip();
        double double20 = statisticalBarRenderer15.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer22.setBaseFillPaint(paint25);
        statisticalBarRenderer15.setSeriesPaint(1, paint25);
        statisticalBarRenderer10.setBaseFillPaint(paint25, true);
        statisticalBarRenderer10.setSeriesItemLabelsVisible(10, (java.lang.Boolean) false, false);
        java.awt.Paint paint34 = statisticalBarRenderer10.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint34);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.2d + "'", double20 == 0.2d);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        java.awt.Paint paint17 = null;
        statisticalBarRenderer10.setSeriesOutlinePaint((int) '4', paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = statisticalBarRenderer10.getBaseToolTipGenerator();
        statisticalBarRenderer10.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke23 = statisticalBarRenderer10.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke23, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNull(categoryToolTipGenerator19);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator18, true);
        java.awt.Stroke stroke22 = statisticalBarRenderer0.getSeriesOutlineStroke((-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(stroke22);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer29.setBaseToolTipGenerator(categoryToolTipGenerator30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setAutoPopulateSeriesOutlinePaint(false);
        int int37 = statisticalBarRenderer32.getRowCount();
        java.awt.Shape shape38 = statisticalBarRenderer32.getBaseShape();
        statisticalBarRenderer29.setBaseShape(shape38);
        statisticalBarRenderer0.setBaseShape(shape38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer42.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer42.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator48 = null;
        statisticalBarRenderer42.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator48, true);
        java.awt.Paint paint51 = statisticalBarRenderer42.getErrorIndicatorPaint();
        java.awt.Paint paint52 = statisticalBarRenderer42.getErrorIndicatorPaint();
        java.awt.Stroke stroke53 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer42.setBaseOutlineStroke(stroke53, true);
        statisticalBarRenderer0.setSeriesOutlineStroke(100, stroke53);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertNotNull(stroke53);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer6.setBaseToolTipGenerator(categoryToolTipGenerator7);
        boolean boolean11 = statisticalBarRenderer6.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer6.setBaseItemLabelGenerator(categoryItemLabelGenerator12, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer6.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation16 = null;
        boolean boolean17 = statisticalBarRenderer6.removeAnnotation(categoryAnnotation16);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = statisticalBarRenderer6.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font26 = statisticalBarRenderer21.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font26, true);
        statisticalBarRenderer0.setBaseItemLabelFont(font26);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNotNull(font26);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer2.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer2.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer2.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator8, true);
        statisticalBarRenderer2.removeAnnotations();
        java.awt.Paint paint12 = statisticalBarRenderer2.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint12, true);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.lookupSeriesStroke((int) (short) 10);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '4', categoryToolTipGenerator25, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.Marker marker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D9, categoryPlot10, valueAxis11, marker12, rectangle2D13);
        java.awt.Paint paint15 = statisticalBarRenderer0.getBaseItemLabelPaint();
        int int16 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        java.awt.Shape shape19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseShape(shape19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'shape' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNull(shape13);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        java.awt.Paint paint15 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        int int17 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (byte) 100, 1);
        double double12 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.LegendItemCollection legendItemCollection13 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(legendItemCollection13);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.LegendItemCollection legendItemCollection9 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(legendItemCollection9);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean8 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Shape shape10 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryPlot9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer57 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition59 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 0);
        statisticalBarRenderer0.setItemMargin((double) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer57);
        org.junit.Assert.assertNotNull(itemLabelPosition59);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        java.awt.Shape shape40 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        int int41 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(shape40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getBaseToolTipGenerator();
        int int25 = statisticalBarRenderer0.getRowCount();
        java.awt.Stroke stroke27 = statisticalBarRenderer0.getSeriesStroke((int) '#');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(stroke27);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(categoryPlot25);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer13.setSeriesPaint(100, paint19);
        statisticalBarRenderer12.setBasePaint(paint19);
        statisticalBarRenderer0.setBasePaint(paint19);
        boolean boolean23 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Font font25 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 10);
        java.awt.Paint paint27 = statisticalBarRenderer0.getSeriesItemLabelPaint(100);
        double double28 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(font25);
        org.junit.Assert.assertNull(paint27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        java.awt.Stroke stroke33 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) -1, 0);
        java.lang.Class<?> wildcardClass34 = stroke33.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        int int16 = statisticalBarRenderer11.getRowCount();
        java.awt.Shape shape17 = statisticalBarRenderer11.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape17);
        java.awt.Paint paint19 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) ' ');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 100, categoryItemLabelGenerator23);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator15, true);
        java.lang.Boolean boolean19 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Paint paint11 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint(1, paint11, false);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint16 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        double double11 = statisticalBarRenderer0.getItemMargin();
        java.awt.Paint paint13 = null;
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 0, paint13);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Shape shape11 = statisticalBarRenderer0.getSeriesShape((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        boolean boolean18 = statisticalBarRenderer12.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer12.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = statisticalBarRenderer12.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = null;
        statisticalBarRenderer12.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator24, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer12.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer35.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer35.setDrawBarOutline(false);
        statisticalBarRenderer35.removeAnnotations();
        statisticalBarRenderer35.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer35.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent47 = null;
        statisticalBarRenderer35.notifyListeners(rendererChangeEvent47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke51 = statisticalBarRenderer49.getSeriesOutlineStroke((int) (byte) 10);
        int int52 = statisticalBarRenderer49.getPassCount();
        boolean boolean53 = statisticalBarRenderer49.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer49.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke59 = statisticalBarRenderer57.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer57.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer63 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator64 = null;
        statisticalBarRenderer63.setBaseURLGenerator(categoryURLGenerator64, false);
        int int67 = statisticalBarRenderer63.getColumnCount();
        java.awt.Paint paint68 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer63.setErrorIndicatorPaint(paint68);
        statisticalBarRenderer57.setBaseItemLabelPaint(paint68);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer71 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke73 = statisticalBarRenderer71.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke75 = statisticalBarRenderer71.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer57.setBaseStroke(stroke75, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer78 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer78.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener81 = null;
        boolean boolean82 = statisticalBarRenderer78.hasListener(eventListener81);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer83 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke85 = statisticalBarRenderer83.getSeriesOutlineStroke((int) (byte) 10);
        int int86 = statisticalBarRenderer83.getPassCount();
        java.awt.Font font88 = statisticalBarRenderer83.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition89 = statisticalBarRenderer83.getBasePositiveItemLabelPosition();
        statisticalBarRenderer78.setNegativeItemLabelPositionFallback(itemLabelPosition89);
        statisticalBarRenderer57.setPositiveItemLabelPositionFallback(itemLabelPosition89);
        statisticalBarRenderer49.setBaseNegativeItemLabelPosition(itemLabelPosition89);
        statisticalBarRenderer35.setBasePositiveItemLabelPosition(itemLabelPosition89);
        statisticalBarRenderer29.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition89, false);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition89);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(shape11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categoryURLGenerator22);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertNull(stroke51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(stroke59);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(paint68);
        org.junit.Assert.assertNull(stroke73);
        org.junit.Assert.assertNotNull(stroke75);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(stroke85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(font88);
        org.junit.Assert.assertNotNull(itemLabelPosition89);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis29 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker30 = null;
        java.awt.geom.Rectangle2D rectangle2D31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D27, categoryPlot28, categoryAxis29, categoryMarker30, rectangle2D31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10, false);
        int int13 = statisticalBarRenderer9.getColumnCount();
        java.awt.Paint paint14 = statisticalBarRenderer9.getBaseFillPaint();
        java.awt.Paint paint17 = statisticalBarRenderer9.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer9.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke20 = statisticalBarRenderer9.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke20, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) -1, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(categoryToolTipGenerator25);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer5.setBaseURLGenerator(categoryURLGenerator6, false);
        int int9 = statisticalBarRenderer5.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer5.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint12 = statisticalBarRenderer5.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer5.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range17 = statisticalBarRenderer0.findRangeBounds(categoryDataset16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
        org.junit.Assert.assertNull(itemLabelPosition15);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke4 = statisticalBarRenderer2.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer2.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font7 = statisticalBarRenderer2.getBaseItemLabelFont();
        int int8 = statisticalBarRenderer2.getRowCount();
        double double9 = statisticalBarRenderer2.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        java.awt.Paint paint17 = statisticalBarRenderer10.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer2.setBaseOutlinePaint(paint17, true);
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint17);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 0);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        double double12 = statisticalBarRenderer8.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer8.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator13);
        statisticalBarRenderer0.setSeriesCreateEntities((int) '#', (java.lang.Boolean) false, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer17.setSeriesCreateEntities((-1), (java.lang.Boolean) false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke8);
        java.awt.Paint paint11 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Paint paint8 = statisticalBarRenderer0.lookupSeriesOutlinePaint(10);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        boolean boolean12 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation11);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer15.setDrawBarOutline(false);
        statisticalBarRenderer15.removeAnnotations();
        statisticalBarRenderer15.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer15.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font34 = statisticalBarRenderer29.getBaseItemLabelFont();
        int int35 = statisticalBarRenderer29.getRowCount();
        double double36 = statisticalBarRenderer29.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener40 = null;
        boolean boolean41 = statisticalBarRenderer37.hasListener(eventListener40);
        java.awt.Paint paint44 = statisticalBarRenderer37.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer29.setBaseOutlinePaint(paint44, true);
        statisticalBarRenderer27.setSeriesOutlinePaint(10, paint44);
        statisticalBarRenderer15.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer0.setBasePaint(paint44, true);
        java.awt.Paint paint52 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertNull(paint52);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth(2.0d);
        boolean boolean29 = statisticalBarRenderer0.isItemLabelVisible(0, (int) (short) -1);
        java.lang.Boolean boolean31 = statisticalBarRenderer0.getSeriesVisible((int) (byte) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator33, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke33 = statisticalBarRenderer28.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = null;
        statisticalBarRenderer28.setBaseItemLabelGenerator(categoryItemLabelGenerator34);
        java.awt.Stroke stroke38 = statisticalBarRenderer28.getItemStroke((int) (byte) -1, 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke38);
        java.awt.Graphics2D graphics2D40 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState41 = null;
        java.awt.geom.Rectangle2D rectangle2D42 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot43 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.data.category.CategoryDataset categoryDataset46 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D40, categoryItemRendererState41, rectangle2D42, categoryPlot43, categoryAxis44, valueAxis45, categoryDataset46, 0, (int) (byte) 1, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(stroke38);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean14 = statisticalBarRenderer0.equals((java.lang.Object) (short) 1);
        java.lang.Boolean boolean16 = statisticalBarRenderer0.getSeriesVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener20 = null;
        boolean boolean21 = statisticalBarRenderer17.hasListener(eventListener20);
        java.awt.Paint paint24 = statisticalBarRenderer17.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBasePaint(paint24);
        java.awt.Paint paint26 = null;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint26);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer12.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator16, false);
        java.awt.Stroke stroke19 = null;
        statisticalBarRenderer12.setErrorIndicatorStroke(stroke19);
        boolean boolean21 = statisticalBarRenderer12.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint25 = statisticalBarRenderer12.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 1, paint25, false);
        org.jfree.data.category.CategoryDataset categoryDataset28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range29 = statisticalBarRenderer0.findRangeBounds(categoryDataset28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) false, true);
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        boolean boolean23 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 1, (int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Stroke stroke17 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 0);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNull(stroke17);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.plot.Marker marker18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D15, categoryPlot16, valueAxis17, marker18, rectangle2D19);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 0, categoryURLGenerator22);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer8.getLegendItemURLGenerator();
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke15);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        double double23 = statisticalBarRenderer19.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition(1);
        boolean boolean28 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font29 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font29);
        statisticalBarRenderer0.setMinimumBarLength((double) (short) 0);
        boolean boolean33 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint36 = statisticalBarRenderer0.getItemLabelPaint((-1), (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(paint36);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font11 = statisticalBarRenderer6.getBaseItemLabelFont();
        int int12 = statisticalBarRenderer6.getRowCount();
        double double13 = statisticalBarRenderer6.getBase();
        java.awt.Stroke stroke16 = statisticalBarRenderer6.getItemStroke((int) (byte) 0, (int) (byte) 10);
        statisticalBarRenderer0.setBaseStroke(stroke16, true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        boolean boolean21 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition22, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNotNull(font11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        boolean boolean29 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Graphics2D graphics2D20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState25 = statisticalBarRenderer0.initialise(graphics2D20, rectangle2D21, categoryPlot22, (int) (short) 0, plotRenderingInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint12 = statisticalBarRenderer0.getSeriesItemLabelPaint(0);
        java.awt.Font font14 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 100);
        org.jfree.data.category.CategoryDataset categoryDataset15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range16 = statisticalBarRenderer0.findRangeBounds(categoryDataset15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(paint12);
        org.junit.Assert.assertNull(font14);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        java.awt.Shape shape40 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        java.awt.Paint paint42 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer44.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer44.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator50 = null;
        statisticalBarRenderer44.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator50, true);
        statisticalBarRenderer44.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator55 = null;
        statisticalBarRenderer54.setBaseToolTipGenerator(categoryToolTipGenerator55);
        boolean boolean59 = statisticalBarRenderer54.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator60 = null;
        statisticalBarRenderer54.setBaseItemLabelGenerator(categoryItemLabelGenerator60);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke64 = statisticalBarRenderer62.getSeriesOutlineStroke((int) (byte) 10);
        int int65 = statisticalBarRenderer62.getPassCount();
        java.awt.Font font67 = statisticalBarRenderer62.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition68 = statisticalBarRenderer62.getBasePositiveItemLabelPosition();
        statisticalBarRenderer54.setNegativeItemLabelPositionFallback(itemLabelPosition68);
        java.awt.Paint paint70 = statisticalBarRenderer54.getBaseItemLabelPaint();
        statisticalBarRenderer44.setBasePaint(paint70, false);
        statisticalBarRenderer0.setSeriesFillPaint(0, paint70);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(shape40);
        org.junit.Assert.assertNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(stroke64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNull(font67);
        org.junit.Assert.assertNotNull(itemLabelPosition68);
        org.junit.Assert.assertNotNull(paint70);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        java.awt.Shape shape57 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator59);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke64 = statisticalBarRenderer62.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer62.setBaseCreateEntities(true, false);
        java.awt.Font font69 = null;
        statisticalBarRenderer62.setSeriesItemLabelFont((int) '4', font69);
        java.awt.Stroke stroke71 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer62.setBaseStroke(stroke71);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition73 = statisticalBarRenderer62.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator75 = statisticalBarRenderer62.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer77 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke79 = statisticalBarRenderer77.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer77.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer83 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator84 = null;
        statisticalBarRenderer83.setBaseURLGenerator(categoryURLGenerator84, false);
        int int87 = statisticalBarRenderer83.getColumnCount();
        java.awt.Paint paint88 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer83.setErrorIndicatorPaint(paint88);
        statisticalBarRenderer77.setBaseItemLabelPaint(paint88);
        statisticalBarRenderer62.setSeriesFillPaint((int) (byte) 10, paint88, true);
        statisticalBarRenderer62.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke96 = statisticalBarRenderer62.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) ' ', stroke96, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertNotNull(shape57);
        org.junit.Assert.assertNull(stroke64);
        org.junit.Assert.assertNotNull(stroke71);
        org.junit.Assert.assertNotNull(itemLabelPosition73);
        org.junit.Assert.assertNull(categoryItemLabelGenerator75);
        org.junit.Assert.assertNull(stroke79);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(paint88);
        org.junit.Assert.assertNotNull(stroke96);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        double double39 = statisticalBarRenderer36.getBase();
        boolean boolean40 = statisticalBarRenderer36.getBaseItemLabelsVisible();
        java.awt.Stroke stroke41 = statisticalBarRenderer36.getErrorIndicatorStroke();
        java.lang.Boolean boolean43 = statisticalBarRenderer36.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint44 = statisticalBarRenderer36.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint44, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(stroke41);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(paint44);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Paint paint20 = statisticalBarRenderer0.getItemLabelPaint((int) (byte) 100, 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator12, false);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 0);
        double double17 = statisticalBarRenderer0.getUpperClip();
        statisticalBarRenderer0.setItemMargin(0.0d);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(1, categoryURLGenerator39);
        boolean boolean43 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator44 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator44);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Paint paint23 = statisticalBarRenderer0.getSeriesPaint(10);
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer0.hasListener(eventListener24);
        java.awt.Paint paint26 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlinePaint(paint26, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier24 = statisticalBarRenderer0.getDrawingSupplier();
        boolean boolean25 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(drawingSupplier24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        boolean boolean15 = statisticalBarRenderer11.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer11.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint20);
        statisticalBarRenderer11.setBaseItemLabelPaint(paint20, false);
        statisticalBarRenderer0.setBaseFillPaint(paint20, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener28 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categoryPlot16);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        double double12 = statisticalBarRenderer8.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer8.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator13);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) (short) 0);
        boolean boolean15 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator3 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        boolean boolean6 = statisticalBarRenderer0.getItemVisible((-1), 100);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) 'a');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        boolean boolean10 = statisticalBarRenderer0.getItemCreateEntity(100, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer12.setBaseToolTipGenerator(categoryToolTipGenerator13);
        boolean boolean17 = statisticalBarRenderer12.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer12.setBaseItemLabelGenerator(categoryItemLabelGenerator18, false);
        double double21 = statisticalBarRenderer12.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener25 = null;
        boolean boolean26 = statisticalBarRenderer22.hasListener(eventListener25);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator27);
        java.awt.Paint paint29 = statisticalBarRenderer22.getBaseItemLabelPaint();
        statisticalBarRenderer12.setBaseOutlinePaint(paint29, false);
        statisticalBarRenderer12.setDrawBarOutline(false);
        java.awt.Paint paint35 = statisticalBarRenderer12.getSeriesPaint(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer36.hasListener(eventListener39);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator41);
        java.awt.Paint paint43 = statisticalBarRenderer36.getBaseItemLabelPaint();
        statisticalBarRenderer36.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator50 = null;
        statisticalBarRenderer46.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator50, false);
        java.awt.Stroke stroke53 = null;
        statisticalBarRenderer46.setErrorIndicatorStroke(stroke53);
        boolean boolean55 = statisticalBarRenderer46.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer46.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer36.setBaseNegativeItemLabelPosition(itemLabelPosition57, true);
        statisticalBarRenderer12.setPositiveItemLabelPositionFallback(itemLabelPosition57);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((-1), itemLabelPosition57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.2d + "'", double21 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, false);
        boolean boolean13 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator14);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range14 = statisticalBarRenderer0.findRangeBounds(categoryDataset13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        java.awt.Paint paint16 = statisticalBarRenderer11.getBaseFillPaint();
        java.awt.Paint paint19 = statisticalBarRenderer11.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setSeriesFillPaint((int) '#', paint19);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        boolean boolean32 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer37.setBaseFillPaint(paint40);
        boolean boolean42 = statisticalBarRenderer37.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke43 = statisticalBarRenderer37.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45, false);
        int int48 = statisticalBarRenderer44.getColumnCount();
        int int49 = statisticalBarRenderer44.getColumnCount();
        java.awt.Paint paint50 = statisticalBarRenderer44.getErrorIndicatorPaint();
        statisticalBarRenderer37.setBaseOutlinePaint(paint50, true);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) 100, paint50);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(paint50);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator12);
        int int14 = statisticalBarRenderer0.getPassCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        boolean boolean15 = statisticalBarRenderer0.getItemVisible(1, (int) '#');
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.util.Layer layer20 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D16, rectangle2D17, categoryAxis18, valueAxis19, layer20, plotRenderingInfo21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator58 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator58, true);
        java.awt.Shape shape62 = statisticalBarRenderer0.getSeriesShape((int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(shape62);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double9 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint17);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D19, categoryPlot20, rectangle2D21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        double double6 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation7 = null;
        org.jfree.chart.util.Layer layer8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation7, layer8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10.0d + "'", double6 == 10.0d);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean14 = statisticalBarRenderer0.getItemCreateEntity(100, (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer15.setBaseToolTipGenerator(categoryToolTipGenerator16);
        boolean boolean20 = statisticalBarRenderer15.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer15.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        java.awt.Stroke stroke24 = statisticalBarRenderer15.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation25 = null;
        boolean boolean26 = statisticalBarRenderer15.removeAnnotation(categoryAnnotation25);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer15.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator29);
        java.awt.Paint paint32 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (byte) 1);
        int int33 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        java.lang.Object obj18 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(obj18);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        java.lang.Boolean boolean13 = statisticalBarRenderer0.getSeriesVisible((int) '4');
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesItemLabelsVisible((-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categoryToolTipGenerator6);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer6.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        double double18 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) '#', (int) (short) 1);
        statisticalBarRenderer0.setBase((double) 10.0f);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryURLGenerator11);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        int int20 = statisticalBarRenderer15.getColumnCount();
        java.util.EventListener eventListener21 = null;
        boolean boolean22 = statisticalBarRenderer15.hasListener(eventListener21);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        java.awt.Font font30 = null;
        statisticalBarRenderer23.setSeriesItemLabelFont((int) '4', font30);
        java.awt.Stroke stroke32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer23.setBaseStroke(stroke32);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer23.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = statisticalBarRenderer23.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer38.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45, false);
        int int48 = statisticalBarRenderer44.getColumnCount();
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer44.setErrorIndicatorPaint(paint49);
        statisticalBarRenderer38.setBaseItemLabelPaint(paint49);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 10, paint49, true);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer57.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint60 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer57.setBaseFillPaint(paint60);
        boolean boolean62 = statisticalBarRenderer57.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke63 = statisticalBarRenderer57.getBaseStroke();
        statisticalBarRenderer23.setErrorIndicatorStroke(stroke63);
        statisticalBarRenderer15.setBaseOutlineStroke(stroke63, true);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 10, stroke63);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNull(categoryItemLabelGenerator36);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(stroke63);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        java.awt.Paint paint59 = statisticalBarRenderer0.getBaseFillPaint();
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Font font16 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        int int22 = statisticalBarRenderer18.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer18.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint25 = statisticalBarRenderer18.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer0.setSeriesFillPaint((int) '#', paint25);
        double double27 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setBase((double) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        statisticalBarRenderer12.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        int int22 = statisticalBarRenderer12.getColumnCount();
        java.awt.Paint paint25 = statisticalBarRenderer12.getItemFillPaint(1, (-1));
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 100, paint25, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer7.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator11, false);
        java.awt.Stroke stroke14 = null;
        statisticalBarRenderer7.setErrorIndicatorStroke(stroke14);
        boolean boolean16 = statisticalBarRenderer7.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint20 = statisticalBarRenderer7.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 1, paint20, true);
        double double23 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Stroke stroke16 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) '4');
        java.awt.Shape shape19 = statisticalBarRenderer0.getItemShape((-1), (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(shape19);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setItemLabelAnchorOffset(0.2d);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        double double11 = statisticalBarRenderer0.getItemMargin();
        java.awt.Paint paint13 = null;
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 0, paint13);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 100, categoryToolTipGenerator16, true);
        java.awt.Paint paint20 = statisticalBarRenderer0.getSeriesFillPaint((int) '#');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
        org.junit.Assert.assertNull(paint20);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        java.awt.Graphics2D graphics2D8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D8, rectangle2D9, categoryAxis10, valueAxis11, layer12, plotRenderingInfo13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer13.setSeriesPaint(100, paint19);
        statisticalBarRenderer12.setBasePaint(paint19);
        statisticalBarRenderer0.setBasePaint(paint19);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint(1);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = statisticalBarRenderer0.getURLGenerator(10, 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation10, layer11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(categoryURLGenerator9);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator22, true);
        org.jfree.data.category.CategoryDataset categoryDataset25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range26 = statisticalBarRenderer0.findRangeBounds(categoryDataset25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        int int10 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemFillPaint(1, (-1));
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D14, categoryPlot15, rectangle2D16, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        java.awt.Paint paint28 = statisticalBarRenderer21.getSeriesFillPaint((int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer21.getNegativeItemLabelPosition((int) (byte) 10, 10);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition31);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        java.lang.Boolean boolean22 = statisticalBarRenderer0.getSeriesCreateEntities(10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition17);
        org.jfree.chart.LegendItem legendItem21 = statisticalBarRenderer0.getLegendItem(0, (int) ' ');
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 0);
        java.awt.Paint paint25 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 0);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(legendItem21);
        org.junit.Assert.assertNull(paint25);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) '#');
        int int12 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        double double7 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer8.getBaseFillPaint();
        statisticalBarRenderer0.setBaseItemLabelPaint(paint13, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font27 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer17.setBaseItemLabelFont(font27);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 10, font27, false);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer8.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        int int33 = statisticalBarRenderer29.getColumnCount();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setErrorIndicatorPaint(paint34);
        statisticalBarRenderer23.setBaseItemLabelPaint(paint34);
        statisticalBarRenderer8.setSeriesFillPaint((int) (byte) 10, paint34, true);
        statisticalBarRenderer8.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer42.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer42.setBaseFillPaint(paint45);
        boolean boolean47 = statisticalBarRenderer42.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke48 = statisticalBarRenderer42.getBaseStroke();
        statisticalBarRenderer8.setErrorIndicatorStroke(stroke48);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke48, true);
        java.lang.Boolean boolean53 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        int int59 = statisticalBarRenderer55.getColumnCount();
        java.awt.Paint paint60 = statisticalBarRenderer55.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem63 = statisticalBarRenderer55.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer55.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator67 = null;
        statisticalBarRenderer66.setBaseToolTipGenerator(categoryToolTipGenerator67);
        boolean boolean71 = statisticalBarRenderer66.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = null;
        statisticalBarRenderer66.setBaseItemLabelGenerator(categoryItemLabelGenerator72, false);
        java.awt.Stroke stroke75 = statisticalBarRenderer66.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation76 = null;
        boolean boolean77 = statisticalBarRenderer66.removeAnnotation(categoryAnnotation76);
        java.awt.Paint paint80 = statisticalBarRenderer66.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer55.setBasePaint(paint80);
        statisticalBarRenderer55.setBaseSeriesVisible(false, true);
        int int85 = statisticalBarRenderer55.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator87 = null;
        statisticalBarRenderer55.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator87);
        java.awt.Paint paint91 = statisticalBarRenderer55.getItemPaint((int) '4', 100);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 100, paint91, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(legendItem63);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(stroke75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(paint80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(paint91);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator7, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke22 = statisticalBarRenderer17.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator23);
        java.awt.Stroke stroke27 = statisticalBarRenderer17.getItemStroke((int) (byte) -1, 1);
        java.awt.Paint paint28 = statisticalBarRenderer17.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint28, false);
        java.util.EventListener eventListener31 = null;
        boolean boolean32 = statisticalBarRenderer0.hasListener(eventListener31);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        statisticalBarRenderer0.setMaximumBarWidth((double) (byte) -1);
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D13, categoryPlot14, categoryAxis15, categoryMarker16, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D5, categoryPlot6, rectangle2D7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator28);
        statisticalBarRenderer0.setSeriesVisible(100, (java.lang.Boolean) false, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator35);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) -1, (int) (short) 1);
        java.awt.Font font19 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 100);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(font19);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemFillPaint((int) 'a', (int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = statisticalBarRenderer11.getURLGenerator(1, (int) (short) 0);
        java.awt.Stroke stroke21 = statisticalBarRenderer11.getItemOutlineStroke((int) (byte) 1, 1);
        statisticalBarRenderer0.setBaseStroke(stroke21, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNull(categoryURLGenerator18);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean10 = statisticalBarRenderer0.getBaseCreateEntities();
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        boolean boolean60 = statisticalBarRenderer0.isSeriesItemLabelsVisible(0);
        java.awt.Paint paint63 = statisticalBarRenderer0.getItemFillPaint((int) (short) 1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke67 = statisticalBarRenderer65.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer65.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator72 = statisticalBarRenderer65.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer65.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer76 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator77 = null;
        statisticalBarRenderer76.setBaseToolTipGenerator(categoryToolTipGenerator77);
        boolean boolean81 = statisticalBarRenderer76.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator82 = statisticalBarRenderer76.getBaseURLGenerator();
        java.awt.Paint paint83 = statisticalBarRenderer76.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition86 = statisticalBarRenderer76.getPositiveItemLabelPosition(0, (int) (byte) -1);
        statisticalBarRenderer65.setBaseNegativeItemLabelPosition(itemLabelPosition86, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((-1), itemLabelPosition86, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(paint63);
        org.junit.Assert.assertNull(stroke67);
        org.junit.Assert.assertNull(categoryURLGenerator72);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(categoryURLGenerator82);
        org.junit.Assert.assertNotNull(paint83);
        org.junit.Assert.assertNotNull(itemLabelPosition86);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBase((double) 1);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D9, categoryPlot10, categoryAxis11, categoryMarker12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape30 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        boolean boolean33 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNull(shape30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.LegendItem legendItem16 = statisticalBarRenderer0.getLegendItem((int) ' ', (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem16);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer5 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(gradientPaintTransformer5);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font26 = statisticalBarRenderer21.getBaseItemLabelFont();
        boolean boolean27 = statisticalBarRenderer21.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer28.setBasePositiveItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer21.setBaseNegativeItemLabelPosition(itemLabelPosition39);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition39, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        double double8 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) 'a', categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        java.awt.Paint paint13 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint15 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 100);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(paint15);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        java.lang.Boolean boolean29 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener34 = null;
        boolean boolean35 = statisticalBarRenderer31.hasListener(eventListener34);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator36);
        java.awt.Paint paint38 = statisticalBarRenderer31.getBaseItemLabelPaint();
        statisticalBarRenderer31.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = null;
        statisticalBarRenderer41.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator45, false);
        java.awt.Stroke stroke48 = null;
        statisticalBarRenderer41.setErrorIndicatorStroke(stroke48);
        boolean boolean50 = statisticalBarRenderer41.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer41.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer31.setBaseNegativeItemLabelPosition(itemLabelPosition52, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) ' ', itemLabelPosition52, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        java.lang.Boolean boolean13 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer13.setSeriesPaint(100, paint19);
        statisticalBarRenderer12.setBasePaint(paint19);
        statisticalBarRenderer0.setBasePaint(paint19);
        java.lang.Boolean boolean24 = statisticalBarRenderer0.getSeriesVisible((int) (short) -1);
        java.awt.Font font26 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(font26);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setBaseStroke(stroke27, false);
        statisticalBarRenderer0.setBaseStroke(stroke27, true);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Paint paint35 = statisticalBarRenderer0.getItemPaint((int) (short) 10, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        int int40 = statisticalBarRenderer37.getPassCount();
        double double41 = statisticalBarRenderer37.getUpperClip();
        double double42 = statisticalBarRenderer37.getItemMargin();
        java.lang.Boolean boolean44 = statisticalBarRenderer37.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean45 = statisticalBarRenderer37.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer37.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 1, itemLabelPosition47);
        int int49 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Paint paint19 = null;
        statisticalBarRenderer12.setSeriesOutlinePaint((int) '4', paint19);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer12.getBaseToolTipGenerator();
        statisticalBarRenderer12.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer12.setSeriesStroke((int) (byte) 0, stroke29);
        statisticalBarRenderer12.setItemLabelAnchorOffset((double) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer12.getNegativeItemLabelPosition(10, 1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition35, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNull(itemLabelPosition40);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke11, true);
        java.awt.Shape shape15 = null;
        statisticalBarRenderer0.setSeriesShape(100, shape15, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener25 = null;
        boolean boolean26 = statisticalBarRenderer19.hasListener(eventListener25);
        java.awt.Shape shape29 = statisticalBarRenderer19.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape(0, shape29);
        boolean boolean31 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.lookupSeriesStroke(1);
        double double11 = statisticalBarRenderer0.getUpperClip();
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator13, false);
        java.awt.Stroke stroke16 = null;
        statisticalBarRenderer9.setErrorIndicatorStroke(stroke16);
        boolean boolean18 = statisticalBarRenderer9.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint22 = statisticalBarRenderer9.lookupSeriesPaint(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition((int) (short) 1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke30 = statisticalBarRenderer26.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent31 = null;
        statisticalBarRenderer26.notifyListeners(rendererChangeEvent31);
        java.awt.Paint paint35 = statisticalBarRenderer26.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer0.setBasePaint(paint35);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator37 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator37, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        java.awt.Paint paint17 = statisticalBarRenderer12.getBaseFillPaint();
        java.awt.Paint paint20 = statisticalBarRenderer12.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer27.setBaseURLGenerator(categoryURLGenerator28, false);
        int int31 = statisticalBarRenderer27.getColumnCount();
        java.awt.Paint paint32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer27.setErrorIndicatorPaint(paint32);
        statisticalBarRenderer21.setBaseItemLabelPaint(paint32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke39 = statisticalBarRenderer35.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer21.setBaseStroke(stroke39, false);
        statisticalBarRenderer12.setBaseStroke(stroke39, true);
        java.awt.Shape shape46 = statisticalBarRenderer12.getItemShape(10, 10);
        statisticalBarRenderer0.setBaseShape(shape46);
        java.lang.Object obj48 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNotNull(shape46);
        org.junit.Assert.assertNotNull(obj48);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener8 = null;
        boolean boolean9 = statisticalBarRenderer5.hasListener(eventListener8);
        statisticalBarRenderer5.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer13.setBaseToolTipGenerator(categoryToolTipGenerator14);
        boolean boolean18 = statisticalBarRenderer13.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer13.setBaseItemLabelGenerator(categoryItemLabelGenerator19, false);
        double double22 = statisticalBarRenderer13.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener26 = null;
        boolean boolean27 = statisticalBarRenderer23.hasListener(eventListener26);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator28);
        java.awt.Paint paint30 = statisticalBarRenderer23.getBaseItemLabelPaint();
        statisticalBarRenderer13.setBaseOutlinePaint(paint30, false);
        statisticalBarRenderer5.setBasePaint(paint30);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint30);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(paint30);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 0, categoryURLGenerator10, true);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer14 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(gradientPaintTransformer14);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator15, true);
        statisticalBarRenderer0.setBase((double) 100L);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        boolean boolean23 = statisticalBarRenderer0.getItemVisible((int) (short) 10, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        double double27 = statisticalBarRenderer24.getBase();
        boolean boolean28 = statisticalBarRenderer24.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font34 = statisticalBarRenderer29.getBaseItemLabelFont();
        int int35 = statisticalBarRenderer29.getRowCount();
        double double36 = statisticalBarRenderer29.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer29.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer24.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition39, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryURLGenerator20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        double double17 = statisticalBarRenderer0.getUpperClip();
        double double18 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke20 = statisticalBarRenderer0.getSeriesOutlineStroke((int) '4');
        java.awt.Graphics2D graphics2D21 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot22 = null;
        org.jfree.chart.axis.ValueAxis valueAxis23 = null;
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D21, categoryPlot22, valueAxis23, rectangle2D24, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNull(stroke20);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        boolean boolean18 = statisticalBarRenderer11.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer11.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator20);
        double double22 = statisticalBarRenderer11.getLowerClip();
        java.awt.Shape shape25 = statisticalBarRenderer11.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition26, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((-1), (int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer11 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer11);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getItemLabelGenerator((-1), (int) (byte) 100);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.plot.Marker marker19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D16, categoryPlot17, valueAxis18, marker19, rectangle2D20);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        org.jfree.chart.LegendItem legendItem10 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) '#');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNull(legendItem10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        int int9 = statisticalBarRenderer6.getPassCount();
        statisticalBarRenderer6.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean13 = statisticalBarRenderer6.getSeriesVisible((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer14 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer14);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        boolean boolean24 = statisticalBarRenderer17.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = statisticalBarRenderer17.getSeriesItemLabelGenerator((int) (byte) 100);
        java.awt.Shape shape29 = statisticalBarRenderer17.lookupSeriesShape((int) '4');
        statisticalBarRenderer0.setSeriesShape(100, shape29, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(gradientPaintTransformer14);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator27);
        org.junit.Assert.assertNotNull(shape29);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint11);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 1, paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer15.setDrawBarOutline(false);
        statisticalBarRenderer15.removeAnnotations();
        boolean boolean21 = statisticalBarRenderer15.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer23.setSeriesOutlineStroke((int) (byte) 1, stroke31);
        java.awt.Paint paint34 = statisticalBarRenderer23.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer15.setSeriesOutlinePaint((int) (byte) 0, paint34);
        statisticalBarRenderer15.setMinimumBarLength((double) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer38.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer38.setBaseFillPaint(paint41);
        boolean boolean43 = statisticalBarRenderer38.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke44 = statisticalBarRenderer38.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator46 = null;
        statisticalBarRenderer45.setBaseURLGenerator(categoryURLGenerator46, false);
        int int49 = statisticalBarRenderer45.getColumnCount();
        int int50 = statisticalBarRenderer45.getColumnCount();
        java.awt.Paint paint51 = statisticalBarRenderer45.getErrorIndicatorPaint();
        statisticalBarRenderer38.setBaseOutlinePaint(paint51, true);
        statisticalBarRenderer15.setBaseFillPaint(paint51, false);
        statisticalBarRenderer0.setSeriesPaint(0, paint51, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer58 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke60 = statisticalBarRenderer58.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer58.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke63 = statisticalBarRenderer58.getBaseOutlineStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke63);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNull(stroke60);
        org.junit.Assert.assertNotNull(stroke63);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNull(categoryItemLabelGenerator6);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        statisticalBarRenderer0.setItemMargin((double) 0);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        statisticalBarRenderer16.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator20, false);
        java.awt.Stroke stroke23 = null;
        statisticalBarRenderer16.setErrorIndicatorStroke(stroke23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer16.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape30 = statisticalBarRenderer16.getItemShape((int) (byte) 0, (int) (short) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer31.setBaseCreateEntities(true, false);
        java.awt.Font font38 = null;
        statisticalBarRenderer31.setSeriesItemLabelFont((int) '4', font38);
        java.awt.Stroke stroke40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer31.setBaseStroke(stroke40);
        statisticalBarRenderer16.setBaseStroke(stroke40, false);
        statisticalBarRenderer0.setBaseStroke(stroke40, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNotNull(stroke40);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 1);
        java.awt.Paint paint36 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        boolean boolean37 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator40 = null;
        statisticalBarRenderer39.setBaseToolTipGenerator(categoryToolTipGenerator40);
        boolean boolean44 = statisticalBarRenderer39.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = null;
        statisticalBarRenderer39.setBaseItemLabelGenerator(categoryItemLabelGenerator45, false);
        double double48 = statisticalBarRenderer39.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer49.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener52 = null;
        boolean boolean53 = statisticalBarRenderer49.hasListener(eventListener52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator54 = null;
        statisticalBarRenderer49.setBaseURLGenerator(categoryURLGenerator54);
        java.awt.Paint paint56 = statisticalBarRenderer49.getBaseItemLabelPaint();
        statisticalBarRenderer39.setBaseOutlinePaint(paint56, false);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint56);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(paint34);
        org.junit.Assert.assertNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.2d + "'", double48 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(paint56);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setMaximumBarWidth(0.0d);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator8, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesStroke((int) '#');
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(1, categoryURLGenerator39);
        boolean boolean41 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer0.lookupSeriesStroke(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNotNull(stroke12);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke16);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = statisticalBarRenderer30.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer30.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        double double41 = statisticalBarRenderer30.getItemLabelAnchorOffset();
        boolean boolean44 = statisticalBarRenderer30.getItemCreateEntity(100, (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator46 = null;
        statisticalBarRenderer45.setBaseToolTipGenerator(categoryToolTipGenerator46);
        boolean boolean50 = statisticalBarRenderer45.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator51 = null;
        statisticalBarRenderer45.setBaseItemLabelGenerator(categoryItemLabelGenerator51, false);
        java.awt.Stroke stroke54 = statisticalBarRenderer45.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation55 = null;
        boolean boolean56 = statisticalBarRenderer45.removeAnnotation(categoryAnnotation55);
        statisticalBarRenderer45.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator59 = statisticalBarRenderer45.getLegendItemLabelGenerator();
        statisticalBarRenderer30.setLegendItemToolTipGenerator(categorySeriesLabelGenerator59);
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator59);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertNull(categoryURLGenerator37);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2.0d + "'", double41 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator59);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 100);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D36, categoryPlot37, rectangle2D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        java.awt.Font font17 = null;
        statisticalBarRenderer10.setSeriesItemLabelFont((int) '4', font17);
        java.awt.Stroke stroke19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer10.setBaseStroke(stroke19);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer10.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer25.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator32, false);
        int int35 = statisticalBarRenderer31.getColumnCount();
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer31.setErrorIndicatorPaint(paint36);
        statisticalBarRenderer25.setBaseItemLabelPaint(paint36);
        statisticalBarRenderer10.setSeriesFillPaint((int) (byte) 10, paint36, true);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer44.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer44.setBaseFillPaint(paint47);
        boolean boolean49 = statisticalBarRenderer44.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke50 = statisticalBarRenderer44.getBaseStroke();
        statisticalBarRenderer10.setErrorIndicatorStroke(stroke50);
        statisticalBarRenderer0.setBaseStroke(stroke50, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer54.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer54.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator60 = null;
        statisticalBarRenderer54.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator60, true);
        java.awt.Paint paint63 = statisticalBarRenderer54.getErrorIndicatorPaint();
        java.awt.Paint paint64 = statisticalBarRenderer54.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint64, false);
        double double67 = statisticalBarRenderer0.getItemMargin();
        java.util.EventListener eventListener68 = null;
        boolean boolean69 = statisticalBarRenderer0.hasListener(eventListener68);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertNotNull(paint63);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.2d + "'", double67 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean8 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        boolean boolean18 = statisticalBarRenderer12.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer12.setBaseItemLabelsVisible(true, true);
        statisticalBarRenderer12.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        int int30 = statisticalBarRenderer26.getColumnCount();
        java.awt.Paint paint31 = statisticalBarRenderer26.getBaseFillPaint();
        statisticalBarRenderer12.setBasePaint(paint31, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer12.getSeriesNegativeItemLabelPosition((-1));
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition35);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        boolean boolean11 = statisticalBarRenderer0.getItemVisible((int) (short) 10, (int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14, false);
        int int17 = statisticalBarRenderer13.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer18.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer28.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer28.setBaseFillPaint(paint31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font38 = statisticalBarRenderer33.getBaseItemLabelFont();
        statisticalBarRenderer28.setBaseItemLabelFont(font38);
        statisticalBarRenderer13.setSeriesItemLabelFont((int) '#', font38, false);
        statisticalBarRenderer13.setBaseSeriesVisible(false);
        java.awt.Stroke stroke46 = statisticalBarRenderer13.getItemOutlineStroke((int) (short) -1, 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((-1), stroke46, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertNotNull(font38);
        org.junit.Assert.assertNotNull(stroke46);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer9.hasListener(eventListener12);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator14);
        java.awt.Paint paint16 = statisticalBarRenderer9.getBaseItemLabelPaint();
        java.lang.Boolean boolean18 = statisticalBarRenderer9.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Stroke stroke19 = statisticalBarRenderer9.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (short) 1, stroke19);
        java.awt.Stroke stroke21 = statisticalBarRenderer0.getBaseStroke();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(gradientPaintTransformer7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setItemLabelAnchorOffset(0.2d);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.lang.Object obj8 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = statisticalBarRenderer0.getSeriesToolTipGenerator(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = statisticalBarRenderer12.getLegendItemToolTipGenerator();
        statisticalBarRenderer12.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer12.setSeriesFillPaint((int) (byte) 1, paint23);
        statisticalBarRenderer0.setSeriesItemLabelPaint(100, paint23, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setBaseCreateEntities(true, false);
        java.awt.Font font36 = null;
        statisticalBarRenderer29.setSeriesItemLabelFont((int) '4', font36);
        java.awt.Stroke stroke38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer29.setBaseStroke(stroke38);
        java.awt.Stroke stroke40 = statisticalBarRenderer29.getBaseStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (short) -1, stroke40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNull(categoryToolTipGenerator10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator15);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke6 = statisticalBarRenderer4.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer4.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer4.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape12 = statisticalBarRenderer4.getItemShape((int) 'a', (int) (byte) -1);
        java.lang.Boolean boolean14 = statisticalBarRenderer4.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font20 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer4.setBaseItemLabelFont(font20, true);
        statisticalBarRenderer0.setBaseItemLabelFont(font20, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) true, true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertNull(itemLabelPosition9);
        org.junit.Assert.assertNotNull(shape12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getBaseStroke();
        boolean boolean17 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        boolean boolean20 = statisticalBarRenderer0.getItemVisible((int) (byte) 0, (int) '4');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator27);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        statisticalBarRenderer0.setSeriesCreateEntities((int) 'a', (java.lang.Boolean) true);
        statisticalBarRenderer0.setSeriesCreateEntities((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer14.setDrawBarOutline(false);
        statisticalBarRenderer14.removeAnnotations();
        statisticalBarRenderer14.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        int int28 = statisticalBarRenderer25.getPassCount();
        double double29 = statisticalBarRenderer25.getUpperClip();
        double double30 = statisticalBarRenderer25.getItemMargin();
        java.lang.Boolean boolean32 = statisticalBarRenderer25.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean33 = statisticalBarRenderer25.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer25.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint38 = statisticalBarRenderer25.getItemOutlinePaint(10, (int) (byte) 100);
        statisticalBarRenderer14.setSeriesOutlinePaint((int) (short) 10, paint38, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        int int44 = statisticalBarRenderer41.getPassCount();
        boolean boolean45 = statisticalBarRenderer41.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer41.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke51 = statisticalBarRenderer49.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer49.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        int int59 = statisticalBarRenderer55.getColumnCount();
        java.awt.Paint paint60 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer55.setErrorIndicatorPaint(paint60);
        statisticalBarRenderer49.setBaseItemLabelPaint(paint60);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer63 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke65 = statisticalBarRenderer63.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke67 = statisticalBarRenderer63.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer49.setBaseStroke(stroke67, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer70 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer70.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener73 = null;
        boolean boolean74 = statisticalBarRenderer70.hasListener(eventListener73);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer75 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke77 = statisticalBarRenderer75.getSeriesOutlineStroke((int) (byte) 10);
        int int78 = statisticalBarRenderer75.getPassCount();
        java.awt.Font font80 = statisticalBarRenderer75.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition81 = statisticalBarRenderer75.getBasePositiveItemLabelPosition();
        statisticalBarRenderer70.setNegativeItemLabelPositionFallback(itemLabelPosition81);
        statisticalBarRenderer49.setPositiveItemLabelPositionFallback(itemLabelPosition81);
        statisticalBarRenderer41.setBaseNegativeItemLabelPosition(itemLabelPosition81);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition81);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition81);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(stroke51);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(stroke65);
        org.junit.Assert.assertNotNull(stroke67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(stroke77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNull(font80);
        org.junit.Assert.assertNotNull(itemLabelPosition81);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        java.awt.Font font17 = null;
        statisticalBarRenderer10.setSeriesItemLabelFont((int) '4', font17);
        java.awt.Stroke stroke19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer10.setBaseStroke(stroke19);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer10.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer10.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer25.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator32, false);
        int int35 = statisticalBarRenderer31.getColumnCount();
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer31.setErrorIndicatorPaint(paint36);
        statisticalBarRenderer25.setBaseItemLabelPaint(paint36);
        statisticalBarRenderer10.setSeriesFillPaint((int) (byte) 10, paint36, true);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer44.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer44.setBaseFillPaint(paint47);
        boolean boolean49 = statisticalBarRenderer44.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke50 = statisticalBarRenderer44.getBaseStroke();
        statisticalBarRenderer10.setErrorIndicatorStroke(stroke50);
        statisticalBarRenderer0.setBaseStroke(stroke50, true);
        java.awt.Shape shape56 = statisticalBarRenderer0.getItemShape((int) (byte) 100, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertNotNull(shape56);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) 100, (int) (byte) 100);
        org.jfree.chart.LegendItem legendItem15 = statisticalBarRenderer0.getLegendItem((int) (short) 1, (int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryPlot9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(legendItem15);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation1 = null;
        boolean boolean2 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) (short) 0, (int) (short) -1);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.Marker marker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D9, categoryPlot10, valueAxis11, marker12, rectangle2D13);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Paint paint3 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Stroke stroke4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke4);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer16.setBaseFillPaint(paint19);
        statisticalBarRenderer8.setSeriesFillPaint((int) (byte) 1, paint19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer23.setDrawBarOutline(false);
        statisticalBarRenderer23.removeAnnotations();
        boolean boolean29 = statisticalBarRenderer23.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator34 = statisticalBarRenderer31.getLegendItemToolTipGenerator();
        statisticalBarRenderer31.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer31.setSeriesOutlineStroke((int) (byte) 1, stroke39);
        java.awt.Paint paint42 = statisticalBarRenderer31.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer23.setSeriesOutlinePaint((int) (byte) 0, paint42);
        statisticalBarRenderer23.setMinimumBarLength((double) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer46.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer46.setBaseFillPaint(paint49);
        boolean boolean51 = statisticalBarRenderer46.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke52 = statisticalBarRenderer46.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer53 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator54 = null;
        statisticalBarRenderer53.setBaseURLGenerator(categoryURLGenerator54, false);
        int int57 = statisticalBarRenderer53.getColumnCount();
        int int58 = statisticalBarRenderer53.getColumnCount();
        java.awt.Paint paint59 = statisticalBarRenderer53.getErrorIndicatorPaint();
        statisticalBarRenderer46.setBaseOutlinePaint(paint59, true);
        statisticalBarRenderer23.setBaseFillPaint(paint59, false);
        statisticalBarRenderer8.setSeriesPaint(0, paint59, true);
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 0, paint59);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator34);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(stroke52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Paint paint11 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint(1, paint11, false);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer15.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double24 = statisticalBarRenderer15.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer25.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener28 = null;
        boolean boolean29 = statisticalBarRenderer25.hasListener(eventListener28);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer25.setBaseURLGenerator(categoryURLGenerator30);
        java.awt.Paint paint32 = statisticalBarRenderer25.getBaseItemLabelPaint();
        statisticalBarRenderer15.setBasePaint(paint32);
        statisticalBarRenderer0.setBaseFillPaint(paint32, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(paint32);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Font font16 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        int int22 = statisticalBarRenderer18.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer18.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint25 = statisticalBarRenderer18.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer0.setSeriesFillPaint((int) '#', paint25);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D9, categoryPlot10, rectangle2D11, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = statisticalBarRenderer0.getBaseURLGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = categoryURLGenerator14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(categoryURLGenerator14);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer37.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener43 = null;
        boolean boolean44 = statisticalBarRenderer37.hasListener(eventListener43);
        java.awt.Shape shape47 = statisticalBarRenderer37.getItemShape((int) (short) 10, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer17.setSeriesShape((int) (byte) -1, shape47, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shape47);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        statisticalBarRenderer0.setBase((double) (short) 0);
        java.lang.Boolean boolean38 = statisticalBarRenderer0.getSeriesVisible((int) '#');
        double double39 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1.0d + "'", double39 == 1.0d);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        org.jfree.data.category.CategoryDataset categoryDataset38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D32, categoryItemRendererState33, rectangle2D34, categoryPlot35, categoryAxis36, valueAxis37, categoryDataset38, (int) 'a', (int) '#', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke7);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener16 = null;
        boolean boolean17 = statisticalBarRenderer13.hasListener(eventListener16);
        statisticalBarRenderer13.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer21.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer21.getLegendItemURLGenerator();
        java.awt.Stroke stroke28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer21.setBaseStroke(stroke28);
        statisticalBarRenderer13.setBaseOutlineStroke(stroke28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        int int35 = statisticalBarRenderer32.getPassCount();
        double double36 = statisticalBarRenderer32.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer32.getSeriesPositiveItemLabelPosition(1);
        boolean boolean41 = statisticalBarRenderer32.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font42 = statisticalBarRenderer32.getBaseItemLabelFont();
        statisticalBarRenderer13.setSeriesItemLabelFont(0, font42);
        statisticalBarRenderer13.setMinimumBarLength((double) (short) 0);
        java.awt.Paint paint47 = statisticalBarRenderer13.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint47, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(font42);
        org.junit.Assert.assertNotNull(paint47);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator28);
        statisticalBarRenderer0.setSeriesVisible(100, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        java.awt.Paint paint42 = null;
        statisticalBarRenderer35.setSeriesOutlinePaint((int) '4', paint42);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer35.getNegativeItemLabelPosition((int) (byte) -1, (int) (short) 1);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) ' ', itemLabelPosition46);
        java.awt.Paint paint49 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
        org.junit.Assert.assertNull(paint49);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer27.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = statisticalBarRenderer27.getLegendItemToolTipGenerator();
        statisticalBarRenderer27.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer35.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer35.setBaseFillPaint(paint38);
        statisticalBarRenderer27.setSeriesFillPaint((int) (byte) 1, paint38);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) 100, paint38, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator45 = statisticalBarRenderer0.getToolTipGenerator((int) (short) -1, (int) '4');
        int int46 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator30);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categoryToolTipGenerator45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10.0f);
        java.awt.Graphics2D graphics2D14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        org.jfree.chart.util.Layer layer18 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D14, rectangle2D15, categoryAxis16, valueAxis17, layer18, plotRenderingInfo19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities(0);
        java.lang.Object obj16 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(obj16);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer12.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer12.getLegendItemURLGenerator();
        boolean boolean20 = statisticalBarRenderer12.isSeriesItemLabelsVisible((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = statisticalBarRenderer21.getURLGenerator(1, (int) (short) 0);
        java.awt.Stroke stroke31 = statisticalBarRenderer21.getItemOutlineStroke((int) (byte) 1, 1);
        statisticalBarRenderer12.setErrorIndicatorStroke(stroke31);
        statisticalBarRenderer0.setBaseStroke(stroke31);
        double double34 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(itemLabelPosition17);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(categoryURLGenerator28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font14 = statisticalBarRenderer9.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 1, font14);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(font14);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer27.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = statisticalBarRenderer27.getLegendItemToolTipGenerator();
        statisticalBarRenderer27.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer35.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer35.setBaseFillPaint(paint38);
        statisticalBarRenderer27.setSeriesFillPaint((int) (byte) 1, paint38);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) 100, paint38, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator45 = statisticalBarRenderer0.getToolTipGenerator((int) (short) -1, (int) '4');
        java.awt.Graphics2D graphics2D46 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot47 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis48 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker49 = null;
        java.awt.geom.Rectangle2D rectangle2D50 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D46, categoryPlot47, categoryAxis48, categoryMarker49, rectangle2D50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator30);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categoryToolTipGenerator45);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNull(categoryURLGenerator9);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemOutlineStroke(10, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        int int15 = statisticalBarRenderer12.getPassCount();
        double double16 = statisticalBarRenderer12.getUpperClip();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setSeriesPaint(100, paint18);
        statisticalBarRenderer11.setBasePaint(paint18);
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = statisticalBarRenderer11.getPlot();
        statisticalBarRenderer11.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        java.awt.Paint paint28 = statisticalBarRenderer11.getItemOutlinePaint((int) (byte) -1, (int) (short) 1);
        statisticalBarRenderer0.setBaseFillPaint(paint28, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer32.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator36, false);
        java.awt.Stroke stroke39 = null;
        statisticalBarRenderer32.setErrorIndicatorStroke(stroke39);
        boolean boolean41 = statisticalBarRenderer32.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer32.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint45 = statisticalBarRenderer32.lookupSeriesPaint(0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) -1, paint45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(categoryPlot21);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNotNull(paint45);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        java.awt.Paint paint16 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint16, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setItemMargin(10.0d);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(itemLabelPosition19);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke28 = statisticalBarRenderer23.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke28);
        java.awt.Paint paint32 = statisticalBarRenderer0.getItemOutlinePaint(100, (-1));
        java.awt.Stroke stroke33 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Paint paint34 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator35);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Graphics2D graphics2D36 = null;
        java.awt.geom.Rectangle2D rectangle2D37 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.util.Layer layer40 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo41 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D36, rectangle2D37, categoryAxis38, valueAxis39, layer40, plotRenderingInfo41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font15 = statisticalBarRenderer10.getBaseItemLabelFont();
        int int16 = statisticalBarRenderer10.getRowCount();
        double double17 = statisticalBarRenderer10.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener21 = null;
        boolean boolean22 = statisticalBarRenderer18.hasListener(eventListener21);
        java.awt.Paint paint25 = statisticalBarRenderer18.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer10.setBaseOutlinePaint(paint25, true);
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint25);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint25);
        java.awt.Paint paint31 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        int int37 = statisticalBarRenderer33.getColumnCount();
        java.awt.Paint paint38 = statisticalBarRenderer33.getBaseFillPaint();
        java.awt.Paint paint41 = statisticalBarRenderer33.getItemLabelPaint((int) '#', (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((int) (short) -1, paint41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(font15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(paint31);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(paint41);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer59 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke61 = statisticalBarRenderer59.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer59.setBaseCreateEntities(true, false);
        boolean boolean66 = statisticalBarRenderer59.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator67 = statisticalBarRenderer59.getBaseToolTipGenerator();
        java.awt.Paint paint70 = statisticalBarRenderer59.getItemFillPaint((int) (byte) 100, 1);
        statisticalBarRenderer0.setBaseFillPaint(paint70, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier73 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(stroke61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator67);
        org.junit.Assert.assertNotNull(paint70);
        org.junit.Assert.assertNull(drawingSupplier73);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) '#', (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer16.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer16.getLegendItemURLGenerator();
        java.awt.Stroke stroke23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer16.setBaseStroke(stroke23);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 10, stroke23, false);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier27 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator22);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNull(drawingSupplier27);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemLabelPaint((int) (short) 10, 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        int int11 = statisticalBarRenderer5.getRowCount();
        double double12 = statisticalBarRenderer5.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer5.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition15);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getItemStroke(0, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertNotNull(stroke19);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        int int16 = statisticalBarRenderer11.getRowCount();
        java.awt.Shape shape17 = statisticalBarRenderer11.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape17);
        java.awt.Stroke stroke20 = statisticalBarRenderer0.getSeriesOutlineStroke((int) '4');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 1, categoryToolTipGenerator22);
        boolean boolean24 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        boolean boolean11 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 1, (int) 'a');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setItemLabelAnchorOffset((-1.0d));
        double double8 = statisticalBarRenderer5.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer5.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke11 = statisticalBarRenderer5.lookupSeriesStroke((int) 'a');
        java.awt.Paint paint12 = statisticalBarRenderer5.getBaseFillPaint();
        statisticalBarRenderer0.setBasePaint(paint12);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        org.jfree.chart.plot.Marker marker17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D14, categoryPlot15, valueAxis16, marker17, rectangle2D18);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getSeriesStroke((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        int int28 = statisticalBarRenderer25.getPassCount();
        double double29 = statisticalBarRenderer25.getUpperClip();
        double double30 = statisticalBarRenderer25.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer32.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer32.setBaseFillPaint(paint35);
        statisticalBarRenderer25.setSeriesPaint(1, paint35);
        statisticalBarRenderer20.setBaseFillPaint(paint35, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer20.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = null;
        statisticalBarRenderer20.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator44, true);
        boolean boolean49 = statisticalBarRenderer20.getItemCreateEntity((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke53 = statisticalBarRenderer51.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator55 = null;
        statisticalBarRenderer51.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator55, false);
        java.awt.Stroke stroke58 = null;
        statisticalBarRenderer51.setErrorIndicatorStroke(stroke58);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer51.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer51.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator66 = null;
        statisticalBarRenderer65.setBaseToolTipGenerator(categoryToolTipGenerator66);
        boolean boolean70 = statisticalBarRenderer65.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator71 = null;
        statisticalBarRenderer65.setBaseItemLabelGenerator(categoryItemLabelGenerator71, false);
        statisticalBarRenderer65.setDrawBarOutline(true);
        java.awt.Paint paint77 = statisticalBarRenderer65.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer51.setBaseItemLabelPaint(paint77, false);
        statisticalBarRenderer20.setSeriesOutlinePaint((int) '4', paint77, false);
        java.awt.Stroke stroke82 = statisticalBarRenderer20.getErrorIndicatorStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((-1), stroke82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(stroke53);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(paint77);
        org.junit.Assert.assertNotNull(stroke82);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        double double20 = statisticalBarRenderer17.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke23 = statisticalBarRenderer17.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke23);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        double double29 = statisticalBarRenderer26.getBase();
        boolean boolean30 = statisticalBarRenderer26.getBaseItemLabelsVisible();
        java.awt.Stroke stroke31 = statisticalBarRenderer26.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (short) 1, stroke31);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(stroke31);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer37.setBaseCreateEntities(true, false);
        java.awt.Font font44 = null;
        statisticalBarRenderer37.setSeriesItemLabelFont((int) '4', font44);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke50 = statisticalBarRenderer46.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean51 = statisticalBarRenderer37.equals((java.lang.Object) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer37.getBaseNegativeItemLabelPosition();
        double double53 = statisticalBarRenderer37.getItemMargin();
        java.awt.Paint paint55 = statisticalBarRenderer37.lookupSeriesOutlinePaint((int) '4');
        statisticalBarRenderer0.setSeriesPaint((int) (short) 10, paint55);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.2d + "'", double53 == 0.2d);
        org.junit.Assert.assertNotNull(paint55);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) '#');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 0, categoryItemLabelGenerator13, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(paint11);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) '#', (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer16.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer16.getLegendItemURLGenerator();
        java.awt.Stroke stroke23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer16.setBaseStroke(stroke23);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 10, stroke23, false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator22);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint17, false);
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Paint paint23 = statisticalBarRenderer0.getSeriesPaint(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener27 = null;
        boolean boolean28 = statisticalBarRenderer24.hasListener(eventListener27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator29);
        java.awt.Paint paint31 = statisticalBarRenderer24.getBaseItemLabelPaint();
        statisticalBarRenderer24.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator38, false);
        java.awt.Stroke stroke41 = null;
        statisticalBarRenderer34.setErrorIndicatorStroke(stroke41);
        boolean boolean43 = statisticalBarRenderer34.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = statisticalBarRenderer34.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer24.setBaseNegativeItemLabelPosition(itemLabelPosition45, true);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition45);
        java.lang.Class<?> wildcardClass49 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition45);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer9.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer9.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator15, true);
        java.awt.Paint paint18 = statisticalBarRenderer9.getErrorIndicatorPaint();
        java.awt.Paint paint19 = statisticalBarRenderer9.getErrorIndicatorPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean8 = statisticalBarRenderer0.isSeriesItemLabelsVisible(0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setSeriesVisible((int) ' ', (java.lang.Boolean) true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(0, categoryItemLabelGenerator14);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint8);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) '#', (int) (byte) 1);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        boolean boolean7 = statisticalBarRenderer0.getItemVisible((int) (short) 100, 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D6, categoryPlot7, rectangle2D8, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint25);
        statisticalBarRenderer14.setBaseItemLabelPaint(paint25);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer14.removeAnnotation(categoryAnnotation28);
        java.awt.Font font30 = statisticalBarRenderer14.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33, false);
        int int36 = statisticalBarRenderer32.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer32.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint39 = statisticalBarRenderer32.lookupSeriesOutlinePaint((int) (short) -1);
        statisticalBarRenderer14.setSeriesFillPaint((int) '#', paint39);
        statisticalBarRenderer0.setBaseOutlinePaint(paint39, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(font30);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(itemLabelPosition37);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke15);
        org.jfree.chart.LegendItemCollection legendItemCollection17 = statisticalBarRenderer0.getLegendItems();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        double double22 = statisticalBarRenderer18.getUpperClip();
        double double23 = statisticalBarRenderer18.getItemMargin();
        java.awt.Stroke stroke24 = statisticalBarRenderer18.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer26.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke31 = statisticalBarRenderer26.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator32 = null;
        statisticalBarRenderer26.setBaseItemLabelGenerator(categoryItemLabelGenerator32);
        java.awt.Stroke stroke36 = statisticalBarRenderer26.getItemStroke((int) (byte) -1, 1);
        java.awt.Paint paint37 = statisticalBarRenderer26.getBaseFillPaint();
        statisticalBarRenderer18.setSeriesFillPaint((int) '4', paint37, false);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint37);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(legendItemCollection17);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNotNull(paint37);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = statisticalBarRenderer24.getURLGenerator(1, (int) (short) 0);
        java.awt.Stroke stroke34 = statisticalBarRenderer24.getItemOutlineStroke((int) (byte) 1, 1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke34);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertNull(categoryURLGenerator31);
        org.junit.Assert.assertNotNull(stroke34);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator22, true);
        java.awt.Stroke stroke26 = statisticalBarRenderer0.getSeriesOutlineStroke((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        java.awt.Stroke stroke31 = statisticalBarRenderer0.getItemStroke((int) (short) 0, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertNotNull(stroke31);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        boolean boolean6 = statisticalBarRenderer0.isSeriesVisibleInLegend((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font12 = statisticalBarRenderer7.getBaseItemLabelFont();
        int int13 = statisticalBarRenderer7.getRowCount();
        double double14 = statisticalBarRenderer7.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer15.hasListener(eventListener18);
        java.awt.Paint paint22 = statisticalBarRenderer15.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer7.setBaseOutlinePaint(paint22, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font35 = statisticalBarRenderer30.getBaseItemLabelFont();
        statisticalBarRenderer25.setBaseItemLabelFont(font35);
        statisticalBarRenderer7.setBaseItemLabelFont(font35, false);
        statisticalBarRenderer0.setBaseItemLabelFont(font35, false);
        boolean boolean42 = statisticalBarRenderer0.isSeriesVisible((int) '#');
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (byte) 100, 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = statisticalBarRenderer0.getURLGenerator((int) (short) 1, (int) (short) 10);
        java.awt.Paint paint16 = statisticalBarRenderer0.getSeriesItemLabelPaint(10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(categoryURLGenerator14);
        org.junit.Assert.assertNull(paint16);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        java.awt.Font font13 = statisticalBarRenderer6.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        statisticalBarRenderer0.setItemLabelAnchorOffset(2.0d);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (short) 100, (int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        double double25 = statisticalBarRenderer21.getBase();
        boolean boolean27 = statisticalBarRenderer21.isSeriesVisibleInLegend((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font33 = statisticalBarRenderer28.getBaseItemLabelFont();
        int int34 = statisticalBarRenderer28.getRowCount();
        double double35 = statisticalBarRenderer28.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer36.hasListener(eventListener39);
        java.awt.Paint paint43 = statisticalBarRenderer36.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer28.setBaseOutlinePaint(paint43, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke50 = statisticalBarRenderer46.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke53 = statisticalBarRenderer51.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer51.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font56 = statisticalBarRenderer51.getBaseItemLabelFont();
        statisticalBarRenderer46.setBaseItemLabelFont(font56);
        statisticalBarRenderer28.setBaseItemLabelFont(font56, false);
        statisticalBarRenderer21.setBaseItemLabelFont(font56, false);
        statisticalBarRenderer0.setBaseItemLabelFont(font56);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(font33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertNull(stroke53);
        org.junit.Assert.assertNotNull(font56);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator14, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNull(stroke13);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator11, true);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener26 = null;
        boolean boolean27 = statisticalBarRenderer23.hasListener(eventListener26);
        java.awt.Paint paint30 = statisticalBarRenderer23.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer16.setBaseFillPaint(paint30);
        statisticalBarRenderer0.setBaseOutlinePaint(paint30);
        boolean boolean35 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 100, (int) '#');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (short) 1, 10);
        statisticalBarRenderer0.setMaximumBarWidth((double) 1.0f);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        double double9 = statisticalBarRenderer6.getBase();
        java.awt.Paint paint10 = statisticalBarRenderer6.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 0, paint10, true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.lang.Boolean boolean16 = statisticalBarRenderer0.getSeriesCreateEntities((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setAutoPopulateSeriesOutlinePaint(false);
        int int23 = statisticalBarRenderer18.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font29 = statisticalBarRenderer24.getBaseItemLabelFont();
        int int30 = statisticalBarRenderer24.getRowCount();
        double double31 = statisticalBarRenderer24.getBase();
        java.awt.Stroke stroke34 = statisticalBarRenderer24.getItemStroke((int) (byte) 0, (int) (byte) 10);
        statisticalBarRenderer18.setBaseStroke(stroke34, true);
        statisticalBarRenderer18.setAutoPopulateSeriesFillPaint(false);
        boolean boolean39 = statisticalBarRenderer18.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator41 = null;
        statisticalBarRenderer40.setBaseToolTipGenerator(categoryToolTipGenerator41);
        boolean boolean45 = statisticalBarRenderer40.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator46 = statisticalBarRenderer40.getBaseURLGenerator();
        java.awt.Stroke stroke48 = statisticalBarRenderer40.getSeriesStroke((int) (short) 0);
        boolean boolean50 = statisticalBarRenderer40.isSeriesItemLabelsVisible(1);
        double double51 = statisticalBarRenderer40.getItemMargin();
        java.awt.Stroke stroke54 = statisticalBarRenderer40.getItemStroke((int) (byte) 1, (-1));
        statisticalBarRenderer18.setBaseStroke(stroke54);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 1, stroke54, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition58 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(categoryURLGenerator46);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.2d + "'", double51 == 0.2d);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertNotNull(itemLabelPosition58);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean16 = statisticalBarRenderer11.getAutoPopulateSeriesShape();
        java.util.EventListener eventListener17 = null;
        boolean boolean18 = statisticalBarRenderer11.hasListener(eventListener17);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition20, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator5 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator5, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer9.hasListener(eventListener12);
        statisticalBarRenderer9.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer17.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer17.getLegendItemURLGenerator();
        java.awt.Stroke stroke24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer17.setBaseStroke(stroke24);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke24);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 1, stroke24, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(itemLabelPosition22);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator23);
        org.junit.Assert.assertNotNull(stroke24);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint37);
        boolean boolean39 = statisticalBarRenderer34.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke40 = statisticalBarRenderer34.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke40);
        double double42 = statisticalBarRenderer0.getItemMargin();
        java.awt.Stroke stroke44 = statisticalBarRenderer0.lookupSeriesStroke(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        boolean boolean17 = statisticalBarRenderer11.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        int int22 = statisticalBarRenderer18.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer23.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer18.setBasePositiveItemLabelPosition(itemLabelPosition29, true);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition29);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition29, true);
        double double35 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        boolean boolean33 = statisticalBarRenderer0.getItemVisible(0, (int) (byte) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator13, false);
        java.awt.Stroke stroke16 = null;
        statisticalBarRenderer9.setErrorIndicatorStroke(stroke16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer9.setBaseItemLabelGenerator(categoryItemLabelGenerator18, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) (short) 1);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition22, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke6 = statisticalBarRenderer4.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer4.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke9 = statisticalBarRenderer4.getBaseOutlineStroke();
        boolean boolean12 = statisticalBarRenderer4.getItemCreateEntity(100, (int) 'a');
        boolean boolean14 = statisticalBarRenderer4.isSeriesVisible((int) (byte) 0);
        java.awt.Shape shape17 = statisticalBarRenderer4.getItemShape(10, (int) (short) 1);
        statisticalBarRenderer0.setBaseShape(shape17);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shape17);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesItemLabelsVisible((-1));
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range8 = statisticalBarRenderer0.findRangeBounds(categoryDataset7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBase((double) 1);
        java.awt.Shape shape9 = statisticalBarRenderer0.getBaseShape();
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState15 = statisticalBarRenderer0.initialise(graphics2D10, rectangle2D11, categoryPlot12, (int) ' ', plotRenderingInfo14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity(100, (int) 'a');
        double double9 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0d + "'", double9 == 2.0d);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer8.setBaseFillPaint(paint11);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 1, paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        org.jfree.chart.util.Layer layer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation14, layer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) -1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.junit.Assert.assertNull(categoryURLGenerator12);
        org.junit.Assert.assertNull(categoryToolTipGenerator13);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        int int39 = statisticalBarRenderer35.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke42 = statisticalBarRenderer40.getSeriesOutlineStroke((int) (byte) 10);
        int int43 = statisticalBarRenderer40.getPassCount();
        double double44 = statisticalBarRenderer40.getUpperClip();
        double double45 = statisticalBarRenderer40.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer40.setSeriesPaint(1, paint50);
        statisticalBarRenderer35.setBaseFillPaint(paint50, true);
        statisticalBarRenderer35.setSeriesItemLabelsVisible(10, (java.lang.Boolean) false, false);
        java.awt.Paint paint59 = statisticalBarRenderer35.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint59);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(stroke42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D6, categoryPlot7, rectangle2D8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        boolean boolean26 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator27, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer5.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator9, false);
        boolean boolean12 = statisticalBarRenderer0.equals((java.lang.Object) categoryItemLabelGenerator9);
        java.awt.Paint paint14 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) -1);
        java.awt.Paint paint15 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(paint14);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        boolean boolean27 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        java.lang.Class<?> wildcardClass12 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false);
        boolean boolean31 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getBaseStroke();
        boolean boolean17 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        boolean boolean18 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getSeriesToolTipGenerator(1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke11, true);
        statisticalBarRenderer0.setItemMargin((double) (-1L));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer16.getNegativeItemLabelPositionFallback();
        boolean boolean24 = statisticalBarRenderer16.getItemVisible((int) (byte) 0, 1);
        java.awt.Paint paint26 = statisticalBarRenderer16.lookupSeriesFillPaint((int) 'a');
        statisticalBarRenderer0.setErrorIndicatorPaint(paint26);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(itemLabelPosition21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent30 = null;
        statisticalBarRenderer25.notifyListeners(rendererChangeEvent30);
        java.awt.Paint paint34 = statisticalBarRenderer25.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint34);
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D36, categoryPlot37, rectangle2D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemLabelPaint((int) (short) 1, (int) '4');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Shape shape11 = statisticalBarRenderer0.getSeriesShape((int) '4');
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesOutlinePaint(100);
        java.awt.Shape shape14 = statisticalBarRenderer0.getBaseShape();
        java.awt.Shape shape16 = statisticalBarRenderer0.lookupSeriesShape((int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(shape11);
        org.junit.Assert.assertNull(paint13);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNotNull(shape16);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean33 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.LegendItem legendItem36 = statisticalBarRenderer0.getLegendItem((int) (short) 100, (int) (short) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(legendItem36);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseFillPaint(paint9);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint9, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator14, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        boolean boolean34 = statisticalBarRenderer0.isSeriesVisible((int) ' ');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) (byte) 1, 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator13, false);
        java.awt.Stroke stroke16 = null;
        statisticalBarRenderer9.setErrorIndicatorStroke(stroke16);
        boolean boolean18 = statisticalBarRenderer9.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint22 = statisticalBarRenderer9.lookupSeriesPaint(0);
        statisticalBarRenderer0.setBasePaint(paint22, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        boolean boolean30 = statisticalBarRenderer26.getBaseSeriesVisibleInLegend();
        java.awt.Stroke stroke32 = statisticalBarRenderer26.lookupSeriesStroke((int) (byte) 1);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) ' ', stroke32);
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNull(categoryPlot34);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) (byte) 1, 10);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape8);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer10.setDrawBarOutline(false);
        java.awt.Font font17 = statisticalBarRenderer10.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font17, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(font17);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = null;
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 0, paint34, false);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.chart.plot.Marker marker40 = null;
        java.awt.geom.Rectangle2D rectangle2D41 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D37, categoryPlot38, valueAxis39, marker40, rectangle2D41);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        java.awt.Shape shape4 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        boolean boolean5 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        boolean boolean7 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation6);
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 100);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) ' ', (java.lang.Boolean) false, false);
        org.junit.Assert.assertNotNull(shape4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(paint9);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        java.awt.Font font4 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke14 = statisticalBarRenderer9.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer9.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        java.awt.Stroke stroke19 = statisticalBarRenderer9.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        int int25 = statisticalBarRenderer20.getRowCount();
        java.awt.Shape shape26 = statisticalBarRenderer20.getBaseShape();
        statisticalBarRenderer9.setBaseShape(shape26);
        java.awt.Paint paint28 = statisticalBarRenderer9.getBasePaint();
        statisticalBarRenderer0.setBaseItemLabelPaint(paint28);
        statisticalBarRenderer0.setItemMargin(3.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(font4);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator9);
        org.jfree.chart.LegendItem legendItem13 = statisticalBarRenderer0.getLegendItem((int) (short) 10, 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer0.getToolTipGenerator((int) (short) -1, 100);
        double double17 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(legendItem13);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 2.0d + "'", double17 == 2.0d);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        int int12 = statisticalBarRenderer9.getPassCount();
        double double13 = statisticalBarRenderer9.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition(1);
        boolean boolean18 = statisticalBarRenderer9.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font19 = statisticalBarRenderer9.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 0, font19);
        boolean boolean21 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        boolean boolean29 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = null;
        statisticalBarRenderer31.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator35, false);
        java.awt.Stroke stroke38 = null;
        statisticalBarRenderer31.setErrorIndicatorStroke(stroke38);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer31.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer31.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator46 = null;
        statisticalBarRenderer45.setBaseToolTipGenerator(categoryToolTipGenerator46);
        boolean boolean50 = statisticalBarRenderer45.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator51 = null;
        statisticalBarRenderer45.setBaseItemLabelGenerator(categoryItemLabelGenerator51, false);
        statisticalBarRenderer45.setDrawBarOutline(true);
        java.awt.Paint paint57 = statisticalBarRenderer45.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer31.setBaseItemLabelPaint(paint57, false);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint57, false);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        java.awt.Paint paint64 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(paint57);
        org.junit.Assert.assertNotNull(paint64);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNull(shape13);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseItemLabelPaint();
        boolean boolean18 = statisticalBarRenderer0.getBaseCreateEntities();
        double double19 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNull(shape13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        boolean boolean17 = statisticalBarRenderer11.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        int int22 = statisticalBarRenderer18.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer23.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer18.setBasePositiveItemLabelPosition(itemLabelPosition29, true);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition29);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition29, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier35 = statisticalBarRenderer0.getDrawingSupplier();
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D36, categoryPlot37, rectangle2D38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertNull(drawingSupplier35);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        statisticalBarRenderer0.setItemMargin((double) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(itemLabelPosition13);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer5.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator9, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Font font19 = null;
        statisticalBarRenderer12.setSeriesItemLabelFont((int) '4', font19);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke21);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getBasePositiveItemLabelPosition();
        statisticalBarRenderer5.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition23, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator28 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator28);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) 0);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D8, categoryPlot9, valueAxis10, rectangle2D11, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20, false);
        int int23 = statisticalBarRenderer19.getColumnCount();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setErrorIndicatorPaint(paint24);
        statisticalBarRenderer13.setBaseItemLabelPaint(paint24);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation27 = null;
        boolean boolean28 = statisticalBarRenderer13.removeAnnotation(categoryAnnotation27);
        java.awt.Stroke stroke29 = statisticalBarRenderer13.getBaseStroke();
        java.awt.Paint paint32 = statisticalBarRenderer13.getItemLabelPaint(0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        int int37 = statisticalBarRenderer34.getPassCount();
        boolean boolean38 = statisticalBarRenderer34.getBaseSeriesVisibleInLegend();
        java.awt.Stroke stroke40 = statisticalBarRenderer34.lookupSeriesStroke((int) (byte) 1);
        statisticalBarRenderer13.setSeriesStroke((int) (short) 0, stroke40);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 10, stroke40, true);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(stroke40);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, 100);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        int int9 = statisticalBarRenderer0.getPassCount();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, true);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) true);
        java.awt.Paint paint32 = statisticalBarRenderer0.getItemFillPaint((-1), (int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        boolean boolean40 = statisticalBarRenderer33.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Paint paint43 = statisticalBarRenderer33.getItemFillPaint((int) 'a', (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint43, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(paint43);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        java.awt.Shape shape16 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape16);
        org.junit.Assert.assertNull(categoryItemLabelGenerator18);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setItemMargin(0.2d);
        java.awt.Stroke stroke12 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke12);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) '#');
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisible();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        double double7 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent33 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent33);
        java.awt.Paint paint37 = statisticalBarRenderer0.getItemLabelPaint((int) '4', (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(paint37);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        java.awt.Shape shape8 = statisticalBarRenderer0.lookupSeriesShape(100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(shape8);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemLabelPaint((int) '4', (int) (short) 100);
        java.awt.Shape shape12 = statisticalBarRenderer0.getBaseShape();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(shape12);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemLabelPaint(0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer21.setDrawBarOutline(false);
        statisticalBarRenderer21.removeAnnotations();
        statisticalBarRenderer21.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        int int31 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint34 = statisticalBarRenderer21.getItemFillPaint(1, (-1));
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint34);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        int int10 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape12 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(shape12);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis28 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D26, categoryPlot27, categoryAxis28, categoryMarker29, rectangle2D30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        boolean boolean8 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesCreateEntities((int) ' ');
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, true);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getToolTipGenerator(10, (int) (byte) -1);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean8 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemOutlinePaint(10, (int) (byte) 100);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemLabelPaint(0, 0);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer25.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer25.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator34, false);
        boolean boolean37 = statisticalBarRenderer25.equals((java.lang.Object) categoryItemLabelGenerator34);
        statisticalBarRenderer25.removeAnnotations();
        java.awt.Paint paint39 = statisticalBarRenderer25.getBaseItemLabelPaint();
        double double40 = statisticalBarRenderer25.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer25.getSeriesNegativeItemLabelPosition(0);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition42);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setBaseCreateEntities(true, false);
        boolean boolean10 = statisticalBarRenderer3.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer3.getBaseToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer3.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer3.setSeriesShape(1, shape16, false);
        statisticalBarRenderer0.setSeriesShape(1, shape16);
        boolean boolean20 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        double double25 = statisticalBarRenderer22.getBase();
        boolean boolean26 = statisticalBarRenderer22.getBaseItemLabelsVisible();
        java.awt.Stroke stroke27 = statisticalBarRenderer22.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) '4', stroke27, true);
        java.awt.Graphics2D graphics2D30 = null;
        java.awt.geom.Rectangle2D rectangle2D31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.util.Layer layer34 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo35 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D30, rectangle2D31, categoryAxis32, valueAxis33, layer34, plotRenderingInfo35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getSeriesStroke((int) '4');
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        boolean boolean21 = statisticalBarRenderer17.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer17.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer25.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator32, false);
        int int35 = statisticalBarRenderer31.getColumnCount();
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer31.setErrorIndicatorPaint(paint36);
        statisticalBarRenderer25.setBaseItemLabelPaint(paint36);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke41 = statisticalBarRenderer39.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke43 = statisticalBarRenderer39.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer25.setBaseStroke(stroke43, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer46.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener49 = null;
        boolean boolean50 = statisticalBarRenderer46.hasListener(eventListener49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke53 = statisticalBarRenderer51.getSeriesOutlineStroke((int) (byte) 10);
        int int54 = statisticalBarRenderer51.getPassCount();
        java.awt.Font font56 = statisticalBarRenderer51.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer51.getBasePositiveItemLabelPosition();
        statisticalBarRenderer46.setNegativeItemLabelPositionFallback(itemLabelPosition57);
        statisticalBarRenderer25.setPositiveItemLabelPositionFallback(itemLabelPosition57);
        statisticalBarRenderer17.setBaseNegativeItemLabelPosition(itemLabelPosition57);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(1, itemLabelPosition57, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNull(stroke41);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(stroke53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNull(font56);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        statisticalBarRenderer0.setSeriesCreateEntities((int) 'a', (java.lang.Boolean) true);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesItemLabelsVisible(1);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator28, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke36 = statisticalBarRenderer32.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer37.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font42 = statisticalBarRenderer37.getBaseItemLabelFont();
        statisticalBarRenderer32.setBaseItemLabelFont(font42);
        java.awt.Stroke stroke44 = statisticalBarRenderer32.getBaseStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) -1, stroke44, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertNotNull(font42);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        double double9 = statisticalBarRenderer0.getItemMargin();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double12 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean13 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setBaseCreateEntities(true, false);
        boolean boolean21 = statisticalBarRenderer14.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape23 = statisticalBarRenderer14.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke29 = statisticalBarRenderer24.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer24.setBaseItemLabelGenerator(categoryItemLabelGenerator30);
        java.awt.Stroke stroke34 = statisticalBarRenderer24.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setAutoPopulateSeriesOutlinePaint(false);
        int int40 = statisticalBarRenderer35.getRowCount();
        java.awt.Shape shape41 = statisticalBarRenderer35.getBaseShape();
        statisticalBarRenderer24.setBaseShape(shape41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer44.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        statisticalBarRenderer50.setBaseURLGenerator(categoryURLGenerator51, false);
        int int54 = statisticalBarRenderer50.getColumnCount();
        java.awt.Paint paint55 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer50.setErrorIndicatorPaint(paint55);
        statisticalBarRenderer44.setBaseItemLabelPaint(paint55);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer58 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke60 = statisticalBarRenderer58.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke62 = statisticalBarRenderer58.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer44.setBaseStroke(stroke62, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer65.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener68 = null;
        boolean boolean69 = statisticalBarRenderer65.hasListener(eventListener68);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer70 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke72 = statisticalBarRenderer70.getSeriesOutlineStroke((int) (byte) 10);
        int int73 = statisticalBarRenderer70.getPassCount();
        java.awt.Font font75 = statisticalBarRenderer70.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition76 = statisticalBarRenderer70.getBasePositiveItemLabelPosition();
        statisticalBarRenderer65.setNegativeItemLabelPositionFallback(itemLabelPosition76);
        statisticalBarRenderer44.setPositiveItemLabelPositionFallback(itemLabelPosition76);
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition76);
        statisticalBarRenderer14.setPositiveItemLabelPositionFallback(itemLabelPosition76);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition76);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(shape41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNull(stroke60);
        org.junit.Assert.assertNotNull(stroke62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(stroke72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNull(font75);
        org.junit.Assert.assertNotNull(itemLabelPosition76);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        statisticalBarRenderer0.setMinimumBarLength((double) 0);
        java.lang.Object obj12 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) (byte) 1, 10);
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesCreateEntities((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer18.setBaseURLGenerator(categoryURLGenerator19, false);
        int int22 = statisticalBarRenderer18.getColumnCount();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setErrorIndicatorPaint(paint23);
        statisticalBarRenderer12.setBaseItemLabelPaint(paint23);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke30 = statisticalBarRenderer26.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer12.setBaseStroke(stroke30, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener36 = null;
        boolean boolean37 = statisticalBarRenderer33.hasListener(eventListener36);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        int int41 = statisticalBarRenderer38.getPassCount();
        java.awt.Font font43 = statisticalBarRenderer38.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = statisticalBarRenderer38.getBasePositiveItemLabelPosition();
        statisticalBarRenderer33.setNegativeItemLabelPositionFallback(itemLabelPosition44);
        statisticalBarRenderer12.setPositiveItemLabelPositionFallback(itemLabelPosition44);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer48.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator56 = statisticalBarRenderer48.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double57 = statisticalBarRenderer48.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer58 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer58.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener61 = null;
        boolean boolean62 = statisticalBarRenderer58.hasListener(eventListener61);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator63 = null;
        statisticalBarRenderer58.setBaseURLGenerator(categoryURLGenerator63);
        java.awt.Paint paint65 = statisticalBarRenderer58.getBaseItemLabelPaint();
        statisticalBarRenderer48.setBasePaint(paint65);
        statisticalBarRenderer12.setSeriesPaint(1, paint65);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer68 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer68.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener71 = null;
        boolean boolean72 = statisticalBarRenderer68.hasListener(eventListener71);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator73 = null;
        statisticalBarRenderer68.setBaseURLGenerator(categoryURLGenerator73);
        java.awt.Paint paint75 = statisticalBarRenderer68.getBaseItemLabelPaint();
        statisticalBarRenderer68.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer78 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke80 = statisticalBarRenderer78.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator82 = null;
        statisticalBarRenderer78.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator82, false);
        java.awt.Stroke stroke85 = null;
        statisticalBarRenderer78.setErrorIndicatorStroke(stroke85);
        boolean boolean87 = statisticalBarRenderer78.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition89 = statisticalBarRenderer78.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer68.setBaseNegativeItemLabelPosition(itemLabelPosition89, true);
        statisticalBarRenderer12.setBaseNegativeItemLabelPosition(itemLabelPosition89);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition89, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNull(font43);
        org.junit.Assert.assertNotNull(itemLabelPosition44);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertNull(categoryItemLabelGenerator56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(paint65);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(paint75);
        org.junit.Assert.assertNull(stroke80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition89);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 1, (java.lang.Boolean) true);
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) false, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        double double17 = statisticalBarRenderer0.getUpperClip();
        double double18 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setBaseCreateEntities(true, false);
        java.awt.Paint paint27 = null;
        statisticalBarRenderer20.setSeriesOutlinePaint((int) '4', paint27);
        org.jfree.chart.LegendItem legendItem31 = statisticalBarRenderer20.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Stroke stroke32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer20.setBaseOutlineStroke(stroke32, false);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke32);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNull(legendItem31);
        org.junit.Assert.assertNotNull(stroke32);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24, false);
        int int27 = statisticalBarRenderer23.getColumnCount();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer17.setBaseItemLabelPaint(paint28);
        statisticalBarRenderer0.setBasePaint(paint28, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getSeriesStroke((-1));
        java.awt.Font font35 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(font35);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        boolean boolean7 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D12, categoryPlot13, rectangle2D14, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = null;
        statisticalBarRenderer19.setBaseToolTipGenerator(categoryToolTipGenerator20);
        boolean boolean24 = statisticalBarRenderer19.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer25.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator33 = statisticalBarRenderer25.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer34 = statisticalBarRenderer25.getGradientPaintTransformer();
        statisticalBarRenderer19.setGradientPaintTransformer(gradientPaintTransformer34);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer19.getLegendItemLabelGenerator();
        statisticalBarRenderer6.setLegendItemURLGenerator(categorySeriesLabelGenerator36);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer38.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer38.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator44 = null;
        statisticalBarRenderer38.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator44, true);
        statisticalBarRenderer38.removeAnnotations();
        java.lang.Object obj48 = statisticalBarRenderer38.clone();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer38.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition49, false);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition49);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator33);
        org.junit.Assert.assertNotNull(gradientPaintTransformer34);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer12.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer12.getLegendItemURLGenerator();
        boolean boolean20 = statisticalBarRenderer12.isSeriesItemLabelsVisible((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = statisticalBarRenderer21.getURLGenerator(1, (int) (short) 0);
        java.awt.Stroke stroke31 = statisticalBarRenderer21.getItemOutlineStroke((int) (byte) 1, 1);
        statisticalBarRenderer12.setErrorIndicatorStroke(stroke31);
        statisticalBarRenderer0.setBaseStroke(stroke31);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(itemLabelPosition17);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(categoryURLGenerator28);
        org.junit.Assert.assertNotNull(stroke31);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer11 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D12, categoryPlot13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(gradientPaintTransformer11);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer9 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertNotNull(gradientPaintTransformer9);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer13.getPositiveItemLabelPosition((int) '#', (int) (byte) -1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition20);
        java.awt.Graphics2D graphics2D22 = null;
        java.awt.geom.Rectangle2D rectangle2D23 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis24 = null;
        org.jfree.chart.axis.ValueAxis valueAxis25 = null;
        org.jfree.chart.util.Layer layer26 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D22, rectangle2D23, categoryAxis24, valueAxis25, layer26, plotRenderingInfo27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        java.awt.Font font18 = null;
        statisticalBarRenderer11.setSeriesItemLabelFont((int) '4', font18);
        java.awt.Stroke stroke20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer11.setBaseStroke(stroke20);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer11.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer26.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = null;
        statisticalBarRenderer32.setBaseURLGenerator(categoryURLGenerator33, false);
        int int36 = statisticalBarRenderer32.getColumnCount();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setErrorIndicatorPaint(paint37);
        statisticalBarRenderer26.setBaseItemLabelPaint(paint37);
        statisticalBarRenderer11.setSeriesFillPaint((int) (byte) 10, paint37, true);
        statisticalBarRenderer0.setBaseOutlinePaint(paint37, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(paint37);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (byte) 1, categoryToolTipGenerator13, false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer12.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator16, false);
        java.awt.Stroke stroke19 = null;
        statisticalBarRenderer12.setErrorIndicatorStroke(stroke19);
        boolean boolean21 = statisticalBarRenderer12.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint25 = statisticalBarRenderer12.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 1, paint25, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator28 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator28, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer6.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer15);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) ' ', (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        int int30 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator32);
        java.awt.Paint paint36 = statisticalBarRenderer0.getItemPaint((int) '4', 100);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke42 = statisticalBarRenderer40.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer40.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer40.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 1, itemLabelPosition46, true);
        java.awt.Paint paint50 = null;
        statisticalBarRenderer0.setSeriesPaint(0, paint50);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNull(stroke42);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        org.jfree.chart.LegendItemCollection legendItemCollection13 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertNotNull(legendItemCollection13);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseFillPaint(paint9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font16);
        java.awt.Stroke stroke19 = statisticalBarRenderer6.lookupSeriesOutlineStroke((int) (byte) 1);
        java.awt.Font font20 = statisticalBarRenderer6.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 0, font20, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = statisticalBarRenderer0.getSeriesURLGenerator((int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryURLGenerator24);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(10, categoryURLGenerator24, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        statisticalBarRenderer0.setMinimumBarLength((double) 100);
        java.lang.Boolean boolean24 = statisticalBarRenderer0.getSeriesVisible((int) ' ');
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 100);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(paint6);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setSeriesVisible((int) ' ', (java.lang.Boolean) false);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisible(0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator37 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(categoryURLGenerator36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator37);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        boolean boolean14 = statisticalBarRenderer0.isItemLabelVisible((int) (short) -1, 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer13.setSeriesPaint(100, paint19);
        statisticalBarRenderer12.setBasePaint(paint19);
        statisticalBarRenderer0.setBasePaint(paint19);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        statisticalBarRenderer0.setMinimumBarLength(100.0d);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        java.awt.Shape shape57 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator59);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertNotNull(shape57);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator30, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator35 = null;
        statisticalBarRenderer34.setBaseToolTipGenerator(categoryToolTipGenerator35);
        boolean boolean39 = statisticalBarRenderer34.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = null;
        statisticalBarRenderer34.setBaseItemLabelGenerator(categoryItemLabelGenerator40, false);
        statisticalBarRenderer34.setDrawBarOutline(true);
        java.awt.Paint paint46 = statisticalBarRenderer34.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesFillPaint(0, paint46, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer49.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer49.setDrawBarOutline(false);
        statisticalBarRenderer49.removeAnnotations();
        boolean boolean55 = statisticalBarRenderer49.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer49.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = statisticalBarRenderer49.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator61 = null;
        statisticalBarRenderer49.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator61, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator64 = statisticalBarRenderer49.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator64);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(categoryURLGenerator59);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator64);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        double double9 = statisticalBarRenderer6.getBase();
        java.awt.Paint paint10 = statisticalBarRenderer6.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 0, paint10, true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        double double15 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) 'a', (java.lang.Boolean) false);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke63 = statisticalBarRenderer61.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer61.setBaseCreateEntities(true, false);
        boolean boolean68 = statisticalBarRenderer61.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator69 = statisticalBarRenderer61.getBaseToolTipGenerator();
        java.awt.Paint paint72 = statisticalBarRenderer61.getItemOutlinePaint((int) (short) 1, 1);
        statisticalBarRenderer0.setBaseOutlinePaint(paint72);
        java.awt.Paint paint75 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 10);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(stroke63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator69);
        org.junit.Assert.assertNotNull(paint72);
        org.junit.Assert.assertNotNull(paint75);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        statisticalBarRenderer16.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator20, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = statisticalBarRenderer16.getBaseToolTipGenerator();
        java.awt.Paint paint25 = statisticalBarRenderer16.lookupSeriesPaint((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (byte) -1, paint25, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(categoryToolTipGenerator23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        double double25 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = null;
        statisticalBarRenderer26.setLegendItemToolTipGenerator(categorySeriesLabelGenerator29);
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = null;
        org.jfree.chart.axis.ValueAxis valueAxis33 = null;
        org.jfree.chart.plot.Marker marker34 = null;
        java.awt.geom.Rectangle2D rectangle2D35 = null;
        statisticalBarRenderer26.drawRangeMarker(graphics2D31, categoryPlot32, valueAxis33, marker34, rectangle2D35);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator37 = null;
        statisticalBarRenderer26.setBaseToolTipGenerator(categoryToolTipGenerator37);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer26.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer26.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint42 = statisticalBarRenderer26.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke47 = statisticalBarRenderer43.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer48.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font53 = statisticalBarRenderer48.getBaseItemLabelFont();
        statisticalBarRenderer43.setBaseItemLabelFont(font53);
        java.awt.Paint paint56 = statisticalBarRenderer43.lookupSeriesPaint(0);
        statisticalBarRenderer26.setBasePaint(paint56);
        statisticalBarRenderer0.setBaseOutlinePaint(paint56, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator61 = null;
        statisticalBarRenderer60.setBaseToolTipGenerator(categoryToolTipGenerator61);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer63 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke65 = statisticalBarRenderer63.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer63.setAutoPopulateSeriesOutlinePaint(false);
        int int68 = statisticalBarRenderer63.getRowCount();
        java.awt.Shape shape69 = statisticalBarRenderer63.getBaseShape();
        statisticalBarRenderer60.setBaseShape(shape69);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator71 = null;
        statisticalBarRenderer60.setBaseToolTipGenerator(categoryToolTipGenerator71);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer73 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer73.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer73.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator79 = null;
        statisticalBarRenderer73.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator79, true);
        statisticalBarRenderer73.removeAnnotations();
        java.lang.Object obj83 = statisticalBarRenderer73.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer84 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke86 = statisticalBarRenderer84.getSeriesOutlineStroke((int) (byte) 10);
        int int87 = statisticalBarRenderer84.getPassCount();
        double double88 = statisticalBarRenderer84.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition90 = statisticalBarRenderer84.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer73.setBasePositiveItemLabelPosition(itemLabelPosition90);
        statisticalBarRenderer60.setNegativeItemLabelPositionFallback(itemLabelPosition90);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition90);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertNotNull(font53);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNull(stroke65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(shape69);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNull(stroke86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition90);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Font font10 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(font10);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        java.awt.Graphics2D graphics2D11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState16 = statisticalBarRenderer0.initialise(graphics2D11, rectangle2D12, categoryPlot13, (-1), plotRenderingInfo15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        java.awt.Paint paint11 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        java.awt.geom.Rectangle2D rectangle2D14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D12, categoryPlot13, rectangle2D14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range14 = statisticalBarRenderer0.findRangeBounds(categoryDataset13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer18.getLegendItemToolTipGenerator();
        statisticalBarRenderer18.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer26.setBaseFillPaint(paint29);
        statisticalBarRenderer18.setSeriesFillPaint((int) (byte) 1, paint29);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint29);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator33 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator33, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        int int16 = statisticalBarRenderer11.getRowCount();
        java.awt.Shape shape17 = statisticalBarRenderer11.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        int int30 = statisticalBarRenderer26.getColumnCount();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer26.setErrorIndicatorPaint(paint31);
        statisticalBarRenderer20.setBaseItemLabelPaint(paint31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke38 = statisticalBarRenderer34.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer20.setBaseStroke(stroke38, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer41.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener44 = null;
        boolean boolean45 = statisticalBarRenderer41.hasListener(eventListener44);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        int int49 = statisticalBarRenderer46.getPassCount();
        java.awt.Font font51 = statisticalBarRenderer46.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer46.getBasePositiveItemLabelPosition();
        statisticalBarRenderer41.setNegativeItemLabelPositionFallback(itemLabelPosition52);
        statisticalBarRenderer20.setPositiveItemLabelPositionFallback(itemLabelPosition52);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer57.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint60 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer57.setBaseFillPaint(paint60);
        boolean boolean62 = statisticalBarRenderer57.getAutoPopulateSeriesStroke();
        java.awt.Paint paint64 = statisticalBarRenderer57.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint66 = statisticalBarRenderer57.lookupSeriesFillPaint((int) (byte) 100);
        java.awt.Stroke stroke69 = statisticalBarRenderer57.getItemStroke((int) (short) 100, (int) (short) 0);
        statisticalBarRenderer0.setSeriesStroke((int) '4', stroke69);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) 'a', (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(font51);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertNotNull(paint66);
        org.junit.Assert.assertNotNull(stroke69);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBasePaint();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((-1), 0);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        boolean boolean13 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation12);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer12 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(gradientPaintTransformer12);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint33, true);
        double double38 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 0, 0);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0d + "'", double38 == 2.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        int int6 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer33.setDrawBarOutline(false);
        statisticalBarRenderer33.removeAnnotations();
        boolean boolean39 = statisticalBarRenderer33.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer33.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = statisticalBarRenderer33.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator45 = null;
        statisticalBarRenderer33.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator45, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator48 = statisticalBarRenderer33.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator48);
        boolean boolean51 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(categoryURLGenerator43);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        double double12 = statisticalBarRenderer8.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer8.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator13);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setBaseItemLabelFont(font25, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        boolean boolean15 = statisticalBarRenderer11.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer11.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint20);
        statisticalBarRenderer11.setBaseItemLabelPaint(paint20, false);
        statisticalBarRenderer0.setBaseFillPaint(paint20, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.lang.Class<?> wildcardClass28 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categoryPlot16);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator12, false);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        boolean boolean24 = statisticalBarRenderer17.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape26 = statisticalBarRenderer17.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean28 = statisticalBarRenderer17.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        int int33 = statisticalBarRenderer29.getColumnCount();
        java.awt.Paint paint34 = statisticalBarRenderer29.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem37 = statisticalBarRenderer29.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer29.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator40 = statisticalBarRenderer29.getLegendItemLabelGenerator();
        statisticalBarRenderer17.setLegendItemURLGenerator(categorySeriesLabelGenerator40);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator40);
        java.awt.Stroke stroke43 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(legendItem37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator40);
        org.junit.Assert.assertNotNull(stroke43);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, false);
        boolean boolean13 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Paint paint16 = statisticalBarRenderer0.getItemPaint((int) (short) 100, 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Font font13 = statisticalBarRenderer0.getItemLabelFont((int) (short) -1, (int) '4');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(font13);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity((-1), 1);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 1, (java.lang.Boolean) false);
        java.awt.Paint paint12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseFillPaint(paint12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        java.awt.Paint paint24 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        java.awt.geom.Rectangle2D rectangle2D27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D25, categoryPlot26, rectangle2D27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator30, true);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 0, (java.lang.Boolean) true, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer10.setBaseToolTipGenerator(categoryToolTipGenerator11);
        boolean boolean15 = statisticalBarRenderer10.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        java.awt.Font font23 = statisticalBarRenderer18.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer18.getBasePositiveItemLabelPosition();
        statisticalBarRenderer10.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        java.awt.Paint paint26 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint26, false);
        boolean boolean29 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(font23);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemFillPaint((int) '#', (int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 10, (int) '4');
        int int13 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        boolean boolean11 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) -1);
        java.awt.Stroke stroke14 = statisticalBarRenderer0.getItemOutlineStroke((int) '#', (int) (short) 1);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(stroke14);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer8.getLegendItemURLGenerator();
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke15);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        double double23 = statisticalBarRenderer19.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition(1);
        boolean boolean28 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font29 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font29);
        statisticalBarRenderer0.setMinimumBarLength((double) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(font29);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        java.awt.Font font13 = statisticalBarRenderer8.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.plot.Marker marker20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D17, categoryPlot18, valueAxis19, marker20, rectangle2D21);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(font13);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        java.awt.Shape shape16 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent17 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent17);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape16);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = statisticalBarRenderer6.getBaseFillPaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint11);
        java.awt.Paint paint14 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(paint14);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = null;
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator4);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) '#', (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font15 = statisticalBarRenderer10.getBaseItemLabelFont();
        int int16 = statisticalBarRenderer10.getRowCount();
        double double17 = statisticalBarRenderer10.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer10.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer10.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke28 = statisticalBarRenderer23.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = null;
        statisticalBarRenderer23.setBaseItemLabelGenerator(categoryItemLabelGenerator29);
        java.awt.Stroke stroke33 = statisticalBarRenderer23.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer34.setAutoPopulateSeriesOutlinePaint(false);
        int int39 = statisticalBarRenderer34.getRowCount();
        java.awt.Shape shape40 = statisticalBarRenderer34.getBaseShape();
        statisticalBarRenderer23.setBaseShape(shape40);
        java.awt.Paint paint42 = statisticalBarRenderer23.getBasePaint();
        statisticalBarRenderer10.setErrorIndicatorPaint(paint42);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 100, paint42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(font15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(shape40);
        org.junit.Assert.assertNotNull(paint42);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double12 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean13 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer15.hasListener(eventListener18);
        statisticalBarRenderer15.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer23.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer23.getLegendItemURLGenerator();
        java.awt.Stroke stroke30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer23.setBaseStroke(stroke30);
        statisticalBarRenderer15.setBaseOutlineStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        int int37 = statisticalBarRenderer34.getPassCount();
        double double38 = statisticalBarRenderer34.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer34.getSeriesPositiveItemLabelPosition(1);
        boolean boolean43 = statisticalBarRenderer34.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font44 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer15.setSeriesItemLabelFont(0, font44);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator47 = null;
        statisticalBarRenderer15.setSeriesToolTipGenerator((int) '4', categoryToolTipGenerator47, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke52 = statisticalBarRenderer50.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer50.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font55 = statisticalBarRenderer50.getBaseItemLabelFont();
        int int56 = statisticalBarRenderer50.getRowCount();
        double double57 = statisticalBarRenderer50.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition60 = statisticalBarRenderer50.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer15.setBaseNegativeItemLabelPosition(itemLabelPosition60, true);
        boolean boolean63 = statisticalBarRenderer0.equals((java.lang.Object) itemLabelPosition60);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(itemLabelPosition28);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(font44);
        org.junit.Assert.assertNull(stroke52);
        org.junit.Assert.assertNotNull(font55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        double double17 = statisticalBarRenderer0.getUpperClip();
        double double18 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(1, categoryURLGenerator20, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer9.setDrawBarOutline(false);
        statisticalBarRenderer9.removeAnnotations();
        boolean boolean15 = statisticalBarRenderer9.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        statisticalBarRenderer17.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer17.setSeriesOutlineStroke((int) (byte) 1, stroke25);
        java.awt.Paint paint28 = statisticalBarRenderer17.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer9.setSeriesOutlinePaint((int) (byte) 0, paint28);
        java.awt.Paint paint31 = statisticalBarRenderer9.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint31);
        java.lang.Object obj33 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke11);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        boolean boolean6 = statisticalBarRenderer0.isSeriesVisibleInLegend((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font12 = statisticalBarRenderer7.getBaseItemLabelFont();
        int int13 = statisticalBarRenderer7.getRowCount();
        double double14 = statisticalBarRenderer7.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer15.hasListener(eventListener18);
        java.awt.Paint paint22 = statisticalBarRenderer15.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer7.setBaseOutlinePaint(paint22, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font35 = statisticalBarRenderer30.getBaseItemLabelFont();
        statisticalBarRenderer25.setBaseItemLabelFont(font35);
        statisticalBarRenderer7.setBaseItemLabelFont(font35, false);
        statisticalBarRenderer0.setBaseItemLabelFont(font35, false);
        int int41 = statisticalBarRenderer0.getColumnCount();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertNotNull(font35);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer23.setBaseURLGenerator(categoryURLGenerator24, false);
        int int27 = statisticalBarRenderer23.getColumnCount();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer17.setBaseItemLabelPaint(paint28);
        statisticalBarRenderer0.setBasePaint(paint28, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getSeriesStroke((-1));
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        boolean boolean6 = statisticalBarRenderer0.isSeriesVisibleInLegend((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer8.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setBaseCreateEntities(true, false);
        java.awt.Paint paint25 = null;
        statisticalBarRenderer18.setSeriesOutlinePaint((int) '4', paint25);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer18.getBaseToolTipGenerator();
        statisticalBarRenderer18.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke31 = statisticalBarRenderer18.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer8.setBaseOutlineStroke(stroke31, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (byte) -1, stroke31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNotNull(stroke31);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = statisticalBarRenderer6.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer6.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer6.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        double double21 = statisticalBarRenderer18.getBase();
        java.awt.Paint paint22 = statisticalBarRenderer18.getErrorIndicatorPaint();
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemStroke((int) (short) -1, (int) (byte) 1);
        statisticalBarRenderer6.setSeriesStroke((int) (short) 100, stroke25, true);
        statisticalBarRenderer0.setBaseStroke(stroke25);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = null;
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 0, paint34, false);
        java.awt.Paint paint37 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint37);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator5 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator5, false);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        java.awt.Font font16 = null;
        statisticalBarRenderer9.setSeriesItemLabelFont((int) '4', font16);
        java.awt.Stroke stroke18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer9.setBaseStroke(stroke18);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer9.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem23 = statisticalBarRenderer9.getLegendItem((int) (short) 10, (int) (short) -1);
        java.awt.Paint paint24 = statisticalBarRenderer9.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) (short) 100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition26, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNull(legendItem23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity((-1), 1);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 1, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer13.setBaseToolTipGenerator(categoryToolTipGenerator14);
        java.awt.Shape shape17 = statisticalBarRenderer13.lookupSeriesShape((int) (short) 1);
        statisticalBarRenderer0.setSeriesShape((int) '#', shape17, false);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(drawingSupplier20);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        java.awt.Paint paint28 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean14 = statisticalBarRenderer0.equals((java.lang.Object) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        double double16 = statisticalBarRenderer0.getItemMargin();
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font27 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer17.setBaseItemLabelFont(font27);
        java.awt.Paint paint30 = statisticalBarRenderer17.lookupSeriesPaint(0);
        statisticalBarRenderer0.setBasePaint(paint30);
        boolean boolean34 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 1, (int) (byte) 10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        java.awt.Stroke stroke27 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Paint paint28 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator20);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator19);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        boolean boolean26 = statisticalBarRenderer19.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer19.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer19.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        int int33 = statisticalBarRenderer30.getPassCount();
        boolean boolean34 = statisticalBarRenderer30.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = statisticalBarRenderer30.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer36.setBaseFillPaint(paint39);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint39, false);
        statisticalBarRenderer19.setBaseFillPaint(paint39, false);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint39);
        boolean boolean46 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = statisticalBarRenderer0.getItemLabelGenerator((int) 'a', (int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryPlot35);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator49);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer10.setDrawBarOutline(false);
        java.awt.Font font17 = statisticalBarRenderer10.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font17, false);
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(font17);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke11, true);
        statisticalBarRenderer0.setItemMargin((double) (-1L));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        java.awt.Paint paint21 = statisticalBarRenderer16.getBaseFillPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint21, false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Shape shape10 = statisticalBarRenderer0.lookupSeriesShape(0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Font font14 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(font14);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition18);
        statisticalBarRenderer0.setDrawBarOutline(true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean14 = statisticalBarRenderer0.getItemCreateEntity(100, (int) '4');
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) '#', true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(0);
        java.awt.Stroke stroke21 = statisticalBarRenderer0.getSeriesStroke((int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNull(stroke21);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getItemStroke(0, (-1));
        java.util.EventListener eventListener35 = null;
        boolean boolean36 = statisticalBarRenderer0.hasListener(eventListener35);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke7);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer11.setBaseFillPaint(paint14);
        boolean boolean16 = statisticalBarRenderer11.getAutoPopulateSeriesStroke();
        java.awt.Paint paint18 = statisticalBarRenderer11.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint20 = statisticalBarRenderer11.lookupSeriesFillPaint((int) (byte) 100);
        java.awt.Stroke stroke23 = statisticalBarRenderer11.getItemStroke((int) (short) 100, (int) (short) 0);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke23);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer11.setSeriesPaint(100, paint17);
        statisticalBarRenderer10.setBasePaint(paint17);
        statisticalBarRenderer10.setBaseSeriesVisible(false);
        double double22 = statisticalBarRenderer10.getItemMargin();
        java.awt.Font font25 = statisticalBarRenderer10.getItemLabelFont((int) (byte) 10, (int) (short) -1);
        boolean boolean26 = statisticalBarRenderer10.getAutoPopulateSeriesStroke();
        java.awt.Paint paint28 = statisticalBarRenderer10.lookupSeriesPaint(0);
        statisticalBarRenderer0.setBaseFillPaint(paint28);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke13 = statisticalBarRenderer8.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer8.setBaseItemLabelGenerator(categoryItemLabelGenerator14);
        java.awt.Stroke stroke18 = statisticalBarRenderer8.getItemStroke((int) (byte) -1, 1);
        java.awt.Paint paint19 = statisticalBarRenderer8.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) '4', paint19, false);
        statisticalBarRenderer0.setSeriesCreateEntities((int) 'a', (java.lang.Boolean) true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true, true);
        java.awt.Paint paint15 = statisticalBarRenderer0.lookupSeriesFillPaint(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((-1), categoryToolTipGenerator10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Font font12 = statisticalBarRenderer0.getItemLabelFont((int) (short) 100, (int) '#');
        java.awt.Font font13 = null;
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(font12);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font12 = statisticalBarRenderer7.getBaseItemLabelFont();
        int int13 = statisticalBarRenderer7.getRowCount();
        double double14 = statisticalBarRenderer7.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer15.hasListener(eventListener18);
        java.awt.Paint paint22 = statisticalBarRenderer15.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer7.setBaseOutlinePaint(paint22, true);
        statisticalBarRenderer7.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer7.setSeriesURLGenerator((int) (byte) 0, categoryURLGenerator30, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer33.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator37, false);
        java.awt.Stroke stroke40 = null;
        statisticalBarRenderer33.setErrorIndicatorStroke(stroke40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer33.setBaseItemLabelGenerator(categoryItemLabelGenerator42, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke47 = statisticalBarRenderer45.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer45.setBaseCreateEntities(true, false);
        java.awt.Font font52 = null;
        statisticalBarRenderer45.setSeriesItemLabelFont((int) '4', font52);
        java.awt.Stroke stroke54 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer45.setBaseStroke(stroke54);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition56 = statisticalBarRenderer45.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem59 = statisticalBarRenderer45.getLegendItem((int) (short) 10, (int) (short) -1);
        double double60 = statisticalBarRenderer45.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator62 = null;
        statisticalBarRenderer61.setBaseURLGenerator(categoryURLGenerator62, false);
        double double65 = statisticalBarRenderer61.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator66 = statisticalBarRenderer61.getLegendItemLabelGenerator();
        statisticalBarRenderer45.setLegendItemLabelGenerator(categorySeriesLabelGenerator66);
        statisticalBarRenderer33.setLegendItemToolTipGenerator(categorySeriesLabelGenerator66);
        statisticalBarRenderer7.setLegendItemURLGenerator(categorySeriesLabelGenerator66);
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator66);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertNull(stroke47);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertNotNull(itemLabelPosition56);
        org.junit.Assert.assertNull(legendItem59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1.0d + "'", double60 == 1.0d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator66);
        org.junit.Assert.assertNull(categoryItemLabelGenerator72);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        boolean boolean15 = statisticalBarRenderer8.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape17 = statisticalBarRenderer8.lookupSeriesShape((int) (short) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer19.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = null;
        statisticalBarRenderer19.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator25, true);
        statisticalBarRenderer19.removeAnnotations();
        java.lang.Object obj29 = statisticalBarRenderer19.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        int int33 = statisticalBarRenderer30.getPassCount();
        double double34 = statisticalBarRenderer30.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer30.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer19.setBasePositiveItemLabelPosition(itemLabelPosition36);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition36, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNull(categoryPlot11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        java.awt.Stroke stroke14 = statisticalBarRenderer0.lookupSeriesOutlineStroke((-1));
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNotNull(stroke14);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        boolean boolean10 = statisticalBarRenderer0.isSeriesVisible((int) ' ');
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseCreateEntities(true, false);
        java.awt.Font font20 = null;
        statisticalBarRenderer13.setSeriesItemLabelFont((int) '4', font20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer22.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean27 = statisticalBarRenderer13.equals((java.lang.Object) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer13.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28);
        java.awt.Shape shape30 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNotNull(shape30);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Paint paint19 = null;
        statisticalBarRenderer12.setSeriesOutlinePaint((int) '4', paint19);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer12.getBaseToolTipGenerator();
        statisticalBarRenderer12.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer12.setSeriesStroke((int) (byte) 0, stroke29);
        statisticalBarRenderer12.setItemLabelAnchorOffset((double) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer12.getNegativeItemLabelPosition(10, 1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition35, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Paint paint40 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        int int58 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer59 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator60 = null;
        statisticalBarRenderer59.setBaseURLGenerator(categoryURLGenerator60, false);
        double double63 = statisticalBarRenderer59.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator64 = statisticalBarRenderer59.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator64);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer67 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer67.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener70 = null;
        boolean boolean71 = statisticalBarRenderer67.hasListener(eventListener70);
        statisticalBarRenderer67.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer75 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke77 = statisticalBarRenderer75.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer75.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition80 = statisticalBarRenderer75.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator81 = statisticalBarRenderer75.getLegendItemURLGenerator();
        java.awt.Stroke stroke82 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer75.setBaseStroke(stroke82);
        statisticalBarRenderer67.setBaseOutlineStroke(stroke82);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer86 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke88 = statisticalBarRenderer86.getSeriesOutlineStroke((int) (byte) 10);
        int int89 = statisticalBarRenderer86.getPassCount();
        double double90 = statisticalBarRenderer86.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition92 = statisticalBarRenderer86.getSeriesPositiveItemLabelPosition(1);
        boolean boolean95 = statisticalBarRenderer86.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font96 = statisticalBarRenderer86.getBaseItemLabelFont();
        statisticalBarRenderer67.setSeriesItemLabelFont(0, font96);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) -1, font96, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(stroke77);
        org.junit.Assert.assertNull(itemLabelPosition80);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator81);
        org.junit.Assert.assertNotNull(stroke82);
        org.junit.Assert.assertNull(stroke88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(font96);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        double double18 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNull(categoryURLGenerator20);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font29 = statisticalBarRenderer24.getBaseItemLabelFont();
        boolean boolean30 = statisticalBarRenderer24.isDrawBarOutline();
        boolean boolean32 = statisticalBarRenderer24.isSeriesItemLabelsVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setItemLabelAnchorOffset((-1.0d));
        double double36 = statisticalBarRenderer33.getBase();
        boolean boolean37 = statisticalBarRenderer33.getBaseItemLabelsVisible();
        java.awt.Stroke stroke38 = statisticalBarRenderer33.getErrorIndicatorStroke();
        java.lang.Boolean boolean40 = statisticalBarRenderer33.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint41 = statisticalBarRenderer33.getBaseOutlinePaint();
        java.lang.Boolean boolean43 = statisticalBarRenderer33.getSeriesVisible((int) (short) -1);
        java.awt.Graphics2D graphics2D44 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = null;
        org.jfree.chart.axis.ValueAxis valueAxis46 = null;
        org.jfree.chart.plot.Marker marker47 = null;
        java.awt.geom.Rectangle2D rectangle2D48 = null;
        statisticalBarRenderer33.drawRangeMarker(graphics2D44, categoryPlot45, valueAxis46, marker47, rectangle2D48);
        statisticalBarRenderer33.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition55 = statisticalBarRenderer33.getNegativeItemLabelPosition(0, (int) 'a');
        statisticalBarRenderer24.setBasePositiveItemLabelPosition(itemLabelPosition55);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition55, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(itemLabelPosition55);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator16, false);
        boolean boolean19 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition18);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        boolean boolean30 = statisticalBarRenderer23.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = statisticalBarRenderer23.getBaseToolTipGenerator();
        java.awt.Paint paint34 = statisticalBarRenderer23.getItemOutlinePaint((int) (short) 1, 1);
        statisticalBarRenderer0.setSeriesPaint((int) '#', paint34, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier37 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator31);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(drawingSupplier37);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true, true);
        double double14 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator19, false);
        java.awt.Stroke stroke22 = null;
        statisticalBarRenderer15.setErrorIndicatorStroke(stroke22);
        boolean boolean24 = statisticalBarRenderer15.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer15.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint28 = statisticalBarRenderer15.lookupSeriesPaint(0);
        boolean boolean31 = statisticalBarRenderer15.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint32 = statisticalBarRenderer15.getBaseFillPaint();
        statisticalBarRenderer0.setBasePaint(paint32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        boolean boolean42 = statisticalBarRenderer35.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator43 = statisticalBarRenderer35.getBaseToolTipGenerator();
        boolean boolean44 = statisticalBarRenderer35.getAutoPopulateSeriesShape();
        java.lang.Boolean boolean46 = statisticalBarRenderer35.getSeriesCreateEntities((int) (byte) 1);
        java.awt.Paint paint47 = statisticalBarRenderer35.getBasePaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke51 = statisticalBarRenderer49.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer49.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer49.getPositiveItemLabelPositionFallback();
        org.jfree.chart.plot.CategoryPlot categoryPlot55 = statisticalBarRenderer49.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer56.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer56.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator62 = null;
        statisticalBarRenderer56.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator62, true);
        java.awt.Paint paint67 = statisticalBarRenderer56.getItemFillPaint((int) (short) 1, 10);
        statisticalBarRenderer49.setBaseFillPaint(paint67, false);
        statisticalBarRenderer0.setBasePaint(paint67);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNull(stroke51);
        org.junit.Assert.assertNull(itemLabelPosition54);
        org.junit.Assert.assertNull(categoryPlot55);
        org.junit.Assert.assertNotNull(paint67);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15, false);
        int int18 = statisticalBarRenderer14.getColumnCount();
        int int19 = statisticalBarRenderer14.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        int int23 = statisticalBarRenderer20.getPassCount();
        statisticalBarRenderer20.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean27 = statisticalBarRenderer20.getSeriesVisible((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer28 = statisticalBarRenderer20.getGradientPaintTransformer();
        statisticalBarRenderer14.setGradientPaintTransformer(gradientPaintTransformer28);
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer28);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(gradientPaintTransformer28);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        java.lang.Boolean boolean19 = statisticalBarRenderer13.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape21 = statisticalBarRenderer13.getSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation36 = null;
        boolean boolean37 = statisticalBarRenderer22.removeAnnotation(categoryAnnotation36);
        java.awt.Paint paint38 = statisticalBarRenderer22.getBasePaint();
        statisticalBarRenderer13.setBasePaint(paint38, true);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint38);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(shape21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(paint38);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) '#', (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer16.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer16.getLegendItemURLGenerator();
        java.awt.Stroke stroke23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer16.setBaseStroke(stroke23);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 10, stroke23, false);
        double double27 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator22);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        boolean boolean12 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setMinimumBarLength((double) 10.0f);
        boolean boolean17 = statisticalBarRenderer0.isItemLabelVisible((int) ' ', 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBasePaint();
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 100);
        java.awt.Paint paint20 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) ' ', categoryURLGenerator22, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 10, categoryURLGenerator26, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(paint20);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) '4');
        boolean boolean17 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 0, categoryURLGenerator19, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = null;
        statisticalBarRenderer22.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator26, false);
        java.awt.Stroke stroke29 = null;
        statisticalBarRenderer22.setErrorIndicatorStroke(stroke29);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer22.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer22.setItemLabelAnchorOffset((double) (-1.0f));
        statisticalBarRenderer22.setBaseSeriesVisible(true, true);
        java.awt.Stroke stroke39 = statisticalBarRenderer22.getBaseStroke();
        statisticalBarRenderer0.setBaseOutlineStroke(stroke39);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(stroke39);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        java.awt.Paint paint11 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setBaseStroke(stroke27, false);
        statisticalBarRenderer0.setBaseStroke(stroke27, true);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Paint paint35 = statisticalBarRenderer0.getItemPaint((int) (short) 10, (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = statisticalBarRenderer0.getURLGenerator(0, 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(categoryURLGenerator38);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke63 = statisticalBarRenderer61.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer61.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke66 = statisticalBarRenderer61.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator67 = null;
        statisticalBarRenderer61.setBaseItemLabelGenerator(categoryItemLabelGenerator67);
        java.awt.Stroke stroke71 = statisticalBarRenderer61.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer72 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke74 = statisticalBarRenderer72.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer72.setAutoPopulateSeriesOutlinePaint(false);
        int int77 = statisticalBarRenderer72.getRowCount();
        java.awt.Shape shape78 = statisticalBarRenderer72.getBaseShape();
        statisticalBarRenderer61.setBaseShape(shape78);
        statisticalBarRenderer0.setBaseShape(shape78, true);
        java.awt.Paint paint82 = statisticalBarRenderer0.getBasePaint();
        java.awt.Paint paint84 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 10);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(stroke63);
        org.junit.Assert.assertNotNull(stroke66);
        org.junit.Assert.assertNotNull(stroke71);
        org.junit.Assert.assertNull(stroke74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(shape78);
        org.junit.Assert.assertNotNull(paint82);
        org.junit.Assert.assertNotNull(paint84);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer0.hasListener(eventListener12);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryURLGenerator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean14 = statisticalBarRenderer0.getItemCreateEntity(100, (int) '4');
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) '#', true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(0);
        boolean boolean20 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator(1);
        int int13 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        java.awt.Paint paint18 = null;
        statisticalBarRenderer11.setSeriesOutlinePaint((int) '4', paint18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer11.getBaseToolTipGenerator();
        java.awt.Paint paint22 = statisticalBarRenderer11.getSeriesPaint((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer23.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener33 = null;
        boolean boolean34 = statisticalBarRenderer30.hasListener(eventListener33);
        java.awt.Paint paint37 = statisticalBarRenderer30.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer23.setBaseFillPaint(paint37);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer44.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer44.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer39.setBasePositiveItemLabelPosition(itemLabelPosition50, true);
        statisticalBarRenderer23.setBasePositiveItemLabelPosition(itemLabelPosition50);
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition50);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 1, itemLabelPosition50);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean11 = statisticalBarRenderer0.isSeriesVisibleInLegend(1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        boolean boolean9 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setErrorIndicatorPaint(paint21);
        statisticalBarRenderer10.setBaseItemLabelPaint(paint21);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint21);
        java.awt.Paint paint25 = statisticalBarRenderer0.getBasePaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (short) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape(1, shape13, false);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.util.Layer layer20 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D16, rectangle2D17, categoryAxis18, valueAxis19, layer20, plotRenderingInfo21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(shape13);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        double double13 = statisticalBarRenderer10.getBase();
        java.awt.Paint paint14 = statisticalBarRenderer10.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint14);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Shape shape18 = statisticalBarRenderer0.lookupSeriesShape((int) 'a');
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shape18);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean15 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) -1, categoryToolTipGenerator17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        int int11 = statisticalBarRenderer5.getRowCount();
        double double12 = statisticalBarRenderer5.getBase();
        boolean boolean15 = statisticalBarRenderer5.getItemVisible((int) ' ', (int) ' ');
        statisticalBarRenderer5.setAutoPopulateSeriesFillPaint(true);
        int int18 = statisticalBarRenderer5.getRowCount();
        java.awt.Font font19 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font19);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(font19);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisible((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer36.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator42 = null;
        statisticalBarRenderer36.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator42, true);
        java.awt.Paint paint45 = statisticalBarRenderer36.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer46.setItemLabelAnchorOffset((-1.0d));
        double double49 = statisticalBarRenderer46.getBase();
        java.awt.Paint paint50 = statisticalBarRenderer46.getErrorIndicatorPaint();
        statisticalBarRenderer36.setBaseFillPaint(paint50);
        statisticalBarRenderer0.setBasePaint(paint50);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(paint50);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        java.awt.Shape shape40 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        java.awt.Paint paint42 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer43.setBaseCreateEntities(true, false);
        boolean boolean50 = statisticalBarRenderer43.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape52 = statisticalBarRenderer43.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean54 = statisticalBarRenderer43.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = null;
        statisticalBarRenderer55.setBaseURLGenerator(categoryURLGenerator56, false);
        int int59 = statisticalBarRenderer55.getColumnCount();
        java.awt.Paint paint60 = statisticalBarRenderer55.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem63 = statisticalBarRenderer55.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer55.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator66 = statisticalBarRenderer55.getLegendItemLabelGenerator();
        statisticalBarRenderer43.setLegendItemURLGenerator(categorySeriesLabelGenerator66);
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator66);
        org.jfree.chart.LegendItem legendItem71 = statisticalBarRenderer0.getLegendItem((int) '#', 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(shape40);
        org.junit.Assert.assertNull(paint42);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(shape52);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(legendItem63);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator66);
        org.junit.Assert.assertNull(legendItem71);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, false);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont(100, 100);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer59 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke61 = statisticalBarRenderer59.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer59.setBaseCreateEntities(true, false);
        boolean boolean66 = statisticalBarRenderer59.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator67 = statisticalBarRenderer59.getBaseToolTipGenerator();
        java.awt.Paint paint70 = statisticalBarRenderer59.getItemFillPaint((int) (byte) 100, 1);
        statisticalBarRenderer0.setBaseFillPaint(paint70, true);
        double double73 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Graphics2D graphics2D74 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState75 = null;
        java.awt.geom.Rectangle2D rectangle2D76 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot77 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis78 = null;
        org.jfree.chart.axis.ValueAxis valueAxis79 = null;
        org.jfree.data.category.CategoryDataset categoryDataset80 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D74, categoryItemRendererState75, rectangle2D76, categoryPlot77, categoryAxis78, valueAxis79, categoryDataset80, 10, (int) 'a', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(stroke61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator67);
        org.junit.Assert.assertNotNull(paint70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (short) 10, (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        java.awt.Shape shape15 = statisticalBarRenderer0.getSeriesShape((int) (byte) 100);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier16 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(shape15);
        org.junit.Assert.assertNull(drawingSupplier16);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.lang.Object obj8 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = statisticalBarRenderer0.getSeriesToolTipGenerator(10);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNull(categoryToolTipGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 10);
        boolean boolean25 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.lang.Class<?> wildcardClass26 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean10 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Paint paint12 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 1, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(paint12);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        double double12 = statisticalBarRenderer8.getUpperClip();
        double double13 = statisticalBarRenderer8.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        statisticalBarRenderer8.setSeriesPaint(1, paint18);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer8.getBaseNegativeItemLabelPosition();
        boolean boolean22 = statisticalBarRenderer8.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer8.setBaseItemLabelGenerator(categoryItemLabelGenerator23);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer25.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator32 = null;
        statisticalBarRenderer31.setBaseURLGenerator(categoryURLGenerator32, false);
        int int35 = statisticalBarRenderer31.getColumnCount();
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer31.setErrorIndicatorPaint(paint36);
        statisticalBarRenderer25.setBaseItemLabelPaint(paint36);
        statisticalBarRenderer8.setBasePaint(paint36, false);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint36);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(paint36);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false);
        java.awt.Paint paint9 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        java.awt.Paint paint18 = null;
        statisticalBarRenderer11.setSeriesOutlinePaint((int) '4', paint18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer11.getBaseToolTipGenerator();
        java.awt.Font font23 = statisticalBarRenderer11.getItemLabelFont((int) (short) 100, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((-1), font23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(font23);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        double double18 = statisticalBarRenderer15.getBase();
        java.awt.Font font19 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(10, font19, false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        java.awt.Stroke stroke25 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Stroke stroke12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke12, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNotNull(stroke12);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer36.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator42 = null;
        statisticalBarRenderer36.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator42, true);
        java.awt.Paint paint45 = statisticalBarRenderer36.getErrorIndicatorPaint();
        java.awt.Paint paint46 = statisticalBarRenderer36.getErrorIndicatorPaint();
        java.awt.Stroke stroke47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer36.setBaseOutlineStroke(stroke47, true);
        java.awt.Shape shape51 = null;
        statisticalBarRenderer36.setSeriesShape(100, shape51, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke57 = statisticalBarRenderer55.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer55.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener61 = null;
        boolean boolean62 = statisticalBarRenderer55.hasListener(eventListener61);
        java.awt.Shape shape65 = statisticalBarRenderer55.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer36.setSeriesShape(0, shape65);
        statisticalBarRenderer0.setBaseShape(shape65);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(stroke57);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shape65);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        int int39 = statisticalBarRenderer35.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke42 = statisticalBarRenderer40.getSeriesOutlineStroke((int) (byte) 10);
        int int43 = statisticalBarRenderer40.getPassCount();
        double double44 = statisticalBarRenderer40.getUpperClip();
        double double45 = statisticalBarRenderer40.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer40.setSeriesPaint(1, paint50);
        statisticalBarRenderer35.setBaseFillPaint(paint50, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer35.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent58 = null;
        statisticalBarRenderer35.notifyListeners(rendererChangeEvent58);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition61 = statisticalBarRenderer35.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator63 = statisticalBarRenderer35.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape65 = statisticalBarRenderer35.getSeriesShape(0);
        java.awt.Paint paint66 = statisticalBarRenderer35.getBasePaint();
        boolean boolean67 = statisticalBarRenderer0.equals((java.lang.Object) paint66);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(stroke42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.2d + "'", double45 == 0.2d);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
        org.junit.Assert.assertNotNull(itemLabelPosition61);
        org.junit.Assert.assertNull(categoryToolTipGenerator63);
        org.junit.Assert.assertNull(shape65);
        org.junit.Assert.assertNotNull(paint66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        java.awt.Paint paint16 = null;
        statisticalBarRenderer0.setSeriesPaint(1, paint16, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Paint paint19 = null;
        statisticalBarRenderer12.setSeriesOutlinePaint((int) '4', paint19);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer12.getBaseToolTipGenerator();
        statisticalBarRenderer12.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer12.setSeriesStroke((int) (byte) 0, stroke29);
        statisticalBarRenderer12.setItemLabelAnchorOffset((double) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer12.getNegativeItemLabelPosition(10, 1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition35, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator39 = null;
        statisticalBarRenderer38.setBaseToolTipGenerator(categoryToolTipGenerator39);
        boolean boolean43 = statisticalBarRenderer38.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = null;
        statisticalBarRenderer38.setBaseItemLabelGenerator(categoryItemLabelGenerator44, false);
        statisticalBarRenderer38.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer49.setBaseURLGenerator(categoryURLGenerator50, false);
        int int53 = statisticalBarRenderer49.getColumnCount();
        java.awt.Paint paint54 = statisticalBarRenderer49.getBaseFillPaint();
        statisticalBarRenderer38.setBaseFillPaint(paint54, false);
        java.awt.Paint paint57 = statisticalBarRenderer38.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint57);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(paint54);
        org.junit.Assert.assertNotNull(paint57);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        double double9 = statisticalBarRenderer6.getBase();
        java.awt.Paint paint10 = statisticalBarRenderer6.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 0, paint10, true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.lang.Boolean boolean16 = statisticalBarRenderer0.getSeriesCreateEntities((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator18 = null;
        statisticalBarRenderer17.setBaseToolTipGenerator(categoryToolTipGenerator18);
        boolean boolean22 = statisticalBarRenderer17.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator23, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        int int30 = statisticalBarRenderer26.getColumnCount();
        int int31 = statisticalBarRenderer26.getColumnCount();
        java.awt.Paint paint32 = statisticalBarRenderer26.getErrorIndicatorPaint();
        statisticalBarRenderer17.setBaseFillPaint(paint32, false);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer35 = statisticalBarRenderer17.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(gradientPaintTransformer35);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener22 = null;
        boolean boolean23 = statisticalBarRenderer19.hasListener(eventListener22);
        java.awt.Paint paint26 = statisticalBarRenderer19.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer12.setBaseFillPaint(paint26);
        java.awt.Paint paint28 = statisticalBarRenderer12.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 0, paint28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font20 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font20, true);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(shape23);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer5.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator9, false);
        boolean boolean12 = statisticalBarRenderer0.equals((java.lang.Object) categoryItemLabelGenerator9);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer14.setDrawBarOutline(false);
        statisticalBarRenderer14.removeAnnotations();
        boolean boolean20 = statisticalBarRenderer14.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        statisticalBarRenderer22.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer22.setSeriesOutlineStroke((int) (byte) 1, stroke30);
        java.awt.Paint paint33 = statisticalBarRenderer22.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer14.setSeriesOutlinePaint((int) (byte) 0, paint33);
        statisticalBarRenderer14.setMinimumBarLength((double) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer37.setBaseFillPaint(paint40);
        boolean boolean42 = statisticalBarRenderer37.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke43 = statisticalBarRenderer37.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45, false);
        int int48 = statisticalBarRenderer44.getColumnCount();
        int int49 = statisticalBarRenderer44.getColumnCount();
        java.awt.Paint paint50 = statisticalBarRenderer44.getErrorIndicatorPaint();
        statisticalBarRenderer37.setBaseOutlinePaint(paint50, true);
        statisticalBarRenderer14.setBaseFillPaint(paint50, false);
        java.awt.Shape shape56 = statisticalBarRenderer14.lookupSeriesShape(0);
        statisticalBarRenderer0.setBaseShape(shape56, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer60.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer60.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator66 = null;
        statisticalBarRenderer60.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator66, true);
        java.awt.Paint paint69 = statisticalBarRenderer60.getErrorIndicatorPaint();
        java.awt.Paint paint70 = statisticalBarRenderer60.getErrorIndicatorPaint();
        java.awt.Stroke stroke71 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer60.setBaseOutlineStroke(stroke71, true);
        statisticalBarRenderer60.setItemMargin((double) (-1L));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer76 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer76.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator79 = null;
        statisticalBarRenderer76.setLegendItemToolTipGenerator(categorySeriesLabelGenerator79);
        java.awt.Graphics2D graphics2D81 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot82 = null;
        org.jfree.chart.axis.ValueAxis valueAxis83 = null;
        org.jfree.chart.plot.Marker marker84 = null;
        java.awt.geom.Rectangle2D rectangle2D85 = null;
        statisticalBarRenderer76.drawRangeMarker(graphics2D81, categoryPlot82, valueAxis83, marker84, rectangle2D85);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator87 = null;
        statisticalBarRenderer76.setBaseToolTipGenerator(categoryToolTipGenerator87);
        java.awt.Stroke stroke90 = statisticalBarRenderer76.lookupSeriesOutlineStroke((-1));
        statisticalBarRenderer60.setErrorIndicatorStroke(stroke90);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) -1, stroke90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(shape56);
        org.junit.Assert.assertNotNull(paint69);
        org.junit.Assert.assertNotNull(paint70);
        org.junit.Assert.assertNotNull(stroke71);
        org.junit.Assert.assertNotNull(stroke90);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer6.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape14 = statisticalBarRenderer6.getItemShape((int) 'a', (int) (byte) -1);
        java.lang.Boolean boolean16 = statisticalBarRenderer6.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font22 = statisticalBarRenderer17.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22, true);
        java.awt.Paint paint27 = statisticalBarRenderer6.getItemLabelPaint((int) (byte) 100, (int) (short) 1);
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint27);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(paint27);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        boolean boolean10 = statisticalBarRenderer0.getItemCreateEntity(100, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        double double21 = statisticalBarRenderer17.getUpperClip();
        double double22 = statisticalBarRenderer17.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer24.setBaseFillPaint(paint27);
        statisticalBarRenderer17.setSeriesPaint(1, paint27);
        statisticalBarRenderer12.setBaseFillPaint(paint27, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer12.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition34, false);
        statisticalBarRenderer0.setBase((double) 100.0f);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator39);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer5.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        int int17 = statisticalBarRenderer11.getRowCount();
        double double18 = statisticalBarRenderer11.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer11.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer5.setNegativeItemLabelPositionFallback(itemLabelPosition21);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition21);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(itemLabelPosition5);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 1);
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.lang.Boolean boolean37 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) ' ');
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(itemLabelPosition5);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator12);
        statisticalBarRenderer0.setSeriesCreateEntities((int) '4', (java.lang.Boolean) false);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        boolean boolean10 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) ' ');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemOutlinePaint(1, 0);
        java.lang.Object obj15 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(obj15);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer9.setDrawBarOutline(false);
        statisticalBarRenderer9.removeAnnotations();
        boolean boolean15 = statisticalBarRenderer9.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        statisticalBarRenderer17.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer17.setSeriesOutlineStroke((int) (byte) 1, stroke25);
        java.awt.Paint paint28 = statisticalBarRenderer17.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer9.setSeriesOutlinePaint((int) (byte) 0, paint28);
        java.awt.Paint paint31 = statisticalBarRenderer9.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint31);
        java.awt.Paint paint35 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) (byte) 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        boolean boolean17 = statisticalBarRenderer12.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke18 = statisticalBarRenderer12.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke18);
        java.awt.Stroke stroke21 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(stroke21);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getItemStroke(1, (int) (short) 1);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(stroke19);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean16 = statisticalBarRenderer15.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer15.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator18, false);
        java.awt.Paint paint22 = statisticalBarRenderer15.lookupSeriesPaint((int) ' ');
        statisticalBarRenderer0.setBaseFillPaint(paint22);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator7, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        java.awt.Paint paint7 = statisticalBarRenderer0.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        int int8 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D5, categoryPlot6, rectangle2D7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) '#', itemLabelPosition18);
        java.awt.Paint paint21 = statisticalBarRenderer0.getSeriesOutlinePaint(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(paint21);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        int int12 = statisticalBarRenderer7.getRowCount();
        java.awt.Shape shape13 = statisticalBarRenderer7.getBaseShape();
        java.awt.Font font16 = statisticalBarRenderer7.getItemLabelFont((int) (short) 10, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font16, false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent19 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23, false);
        int int26 = statisticalBarRenderer22.getColumnCount();
        java.awt.Paint paint27 = statisticalBarRenderer22.getBaseFillPaint();
        java.awt.Paint paint30 = statisticalBarRenderer22.getItemLabelPaint((int) '#', (int) '4');
        double double31 = statisticalBarRenderer22.getMinimumBarLength();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = statisticalBarRenderer22.getLegendItemURLGenerator();
        int int33 = statisticalBarRenderer22.getRowCount();
        java.awt.Paint paint35 = statisticalBarRenderer22.lookupSeriesOutlinePaint((int) (byte) -1);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 100, paint35);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        double double21 = statisticalBarRenderer17.getUpperClip();
        double double22 = statisticalBarRenderer17.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer24.setBaseFillPaint(paint27);
        statisticalBarRenderer17.setSeriesPaint(1, paint27);
        statisticalBarRenderer12.setBaseFillPaint(paint27, true);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint27);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer41.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer41.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer36.setBasePositiveItemLabelPosition(itemLabelPosition47, true);
        statisticalBarRenderer36.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean55 = statisticalBarRenderer36.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke60 = statisticalBarRenderer56.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer36.setBaseOutlineStroke(stroke60, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer63 = statisticalBarRenderer36.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = statisticalBarRenderer36.getBasePositiveItemLabelPosition();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) -1, itemLabelPosition64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertNotNull(stroke60);
        org.junit.Assert.assertNotNull(gradientPaintTransformer63);
        org.junit.Assert.assertNotNull(itemLabelPosition64);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (short) 10, (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        java.awt.Shape shape15 = statisticalBarRenderer0.getSeriesShape((int) (byte) 100);
        double double16 = statisticalBarRenderer0.getItemMargin();
        boolean boolean19 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 10, (int) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(shape15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        java.awt.Font font13 = statisticalBarRenderer6.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        java.awt.Paint paint18 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 10, (-1));
        org.jfree.chart.event.RendererChangeListener rendererChangeListener19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertNotNull(paint18);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10, false);
        double double13 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        java.awt.Paint paint31 = statisticalBarRenderer0.getBaseFillPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer36.hasListener(eventListener39);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        int int44 = statisticalBarRenderer41.getPassCount();
        java.awt.Font font46 = statisticalBarRenderer41.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer41.getBasePositiveItemLabelPosition();
        statisticalBarRenderer36.setNegativeItemLabelPositionFallback(itemLabelPosition47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator50 = null;
        statisticalBarRenderer49.setBaseToolTipGenerator(categoryToolTipGenerator50);
        boolean boolean54 = statisticalBarRenderer49.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke57 = statisticalBarRenderer55.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer55.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator63 = statisticalBarRenderer55.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer64 = statisticalBarRenderer55.getGradientPaintTransformer();
        statisticalBarRenderer49.setGradientPaintTransformer(gradientPaintTransformer64);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator66 = statisticalBarRenderer49.getLegendItemLabelGenerator();
        statisticalBarRenderer36.setLegendItemURLGenerator(categorySeriesLabelGenerator66);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer68 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator69 = null;
        statisticalBarRenderer68.setBaseURLGenerator(categoryURLGenerator69, false);
        double double72 = statisticalBarRenderer68.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator73 = statisticalBarRenderer68.getLegendItemLabelGenerator();
        statisticalBarRenderer36.setLegendItemLabelGenerator(categorySeriesLabelGenerator73);
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator73);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNull(font46);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(stroke57);
        org.junit.Assert.assertNull(categoryItemLabelGenerator63);
        org.junit.Assert.assertNotNull(gradientPaintTransformer64);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator66);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator73);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean19 = statisticalBarRenderer0.getItemCreateEntity(100, 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.axis.ValueAxis valueAxis15 = null;
        org.jfree.chart.util.Layer layer16 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D12, rectangle2D13, categoryAxis14, valueAxis15, layer16, plotRenderingInfo17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint15 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) 'a', categoryURLGenerator17, true);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 1);
        boolean boolean15 = statisticalBarRenderer0.isSeriesVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer16.getURLGenerator(1, (int) (short) 0);
        java.awt.Stroke stroke26 = statisticalBarRenderer16.getItemOutlineStroke((int) (byte) 1, 1);
        statisticalBarRenderer0.setBaseStroke(stroke26, false);
        java.lang.Class<?> wildcardClass29 = stroke26.getClass();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        java.awt.Shape shape4 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        boolean boolean5 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        boolean boolean7 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation6);
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 100);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.junit.Assert.assertNotNull(shape4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(paint9);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseCreateEntities(true, false);
        java.awt.Paint paint23 = null;
        statisticalBarRenderer16.setSeriesOutlinePaint((int) '4', paint23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator25 = statisticalBarRenderer16.getBaseToolTipGenerator();
        java.awt.Shape shape27 = statisticalBarRenderer16.getSeriesShape((int) '4');
        java.awt.Paint paint29 = statisticalBarRenderer16.getSeriesOutlinePaint(100);
        java.awt.Shape shape31 = statisticalBarRenderer16.lookupSeriesShape((int) ' ');
        statisticalBarRenderer0.setSeriesShape(1, shape31);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNull(categoryToolTipGenerator25);
        org.junit.Assert.assertNull(shape27);
        org.junit.Assert.assertNull(paint29);
        org.junit.Assert.assertNotNull(shape31);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setBaseCreateEntities(true, true);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) 1);
        java.awt.Font font14 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer0.getGradientPaintTransformer();
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(font14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setBaseCreateEntities(true, false);
        java.awt.Paint paint21 = null;
        statisticalBarRenderer14.setSeriesOutlinePaint((int) '4', paint21);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = statisticalBarRenderer14.getBaseToolTipGenerator();
        java.awt.Paint paint25 = statisticalBarRenderer14.getSeriesPaint((int) (short) 0);
        java.awt.Paint paint26 = statisticalBarRenderer14.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 100, paint26, true);
        statisticalBarRenderer0.setItemMargin((double) 'a');
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNull(categoryToolTipGenerator23);
        org.junit.Assert.assertNull(paint25);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((-1), (int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer11 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer11);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getItemLabelGenerator((-1), (int) (byte) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator16, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator27, false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.LegendItem legendItem7 = statisticalBarRenderer0.getLegendItem(0, (int) '#');
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) '4');
        java.awt.Shape shape11 = statisticalBarRenderer0.getSeriesShape((-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(legendItem7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(shape11);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        boolean boolean9 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }
}

