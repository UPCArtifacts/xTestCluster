import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 1, categoryItemLabelGenerator7, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition(1);
        boolean boolean20 = statisticalBarRenderer11.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font21 = statisticalBarRenderer11.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        int int26 = statisticalBarRenderer23.getPassCount();
        boolean boolean27 = statisticalBarRenderer23.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer23.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer31.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38, false);
        int int41 = statisticalBarRenderer37.getColumnCount();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer37.setErrorIndicatorPaint(paint42);
        statisticalBarRenderer31.setBaseItemLabelPaint(paint42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke47 = statisticalBarRenderer45.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke49 = statisticalBarRenderer45.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer31.setBaseStroke(stroke49, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer52.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener55 = null;
        boolean boolean56 = statisticalBarRenderer52.hasListener(eventListener55);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke59 = statisticalBarRenderer57.getSeriesOutlineStroke((int) (byte) 10);
        int int60 = statisticalBarRenderer57.getPassCount();
        java.awt.Font font62 = statisticalBarRenderer57.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = statisticalBarRenderer57.getBasePositiveItemLabelPosition();
        statisticalBarRenderer52.setNegativeItemLabelPositionFallback(itemLabelPosition63);
        statisticalBarRenderer31.setPositiveItemLabelPositionFallback(itemLabelPosition63);
        statisticalBarRenderer23.setBaseNegativeItemLabelPosition(itemLabelPosition63);
        statisticalBarRenderer11.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition63);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((-1), itemLabelPosition63, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(stroke47);
        org.junit.Assert.assertNotNull(stroke49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(stroke59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(font62);
        org.junit.Assert.assertNotNull(itemLabelPosition63);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font12 = statisticalBarRenderer7.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        java.awt.Font font20 = statisticalBarRenderer13.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer7.setBaseItemLabelFont(font20, false);
        statisticalBarRenderer7.setItemLabelAnchorOffset(2.0d);
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint((int) (byte) 10, paint26, false);
        statisticalBarRenderer0.setBaseFillPaint(paint26, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(itemLabelPosition31);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Shape shape18 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
        org.junit.Assert.assertNotNull(shape18);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator16, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape30 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setMinimumBarLength(1.0d);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Graphics2D graphics2D37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        org.jfree.chart.axis.ValueAxis valueAxis40 = null;
        org.jfree.chart.util.Layer layer41 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo42 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D37, rectangle2D38, categoryAxis39, valueAxis40, layer41, plotRenderingInfo42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNull(shape30);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint33, true);
        boolean boolean38 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer29.setBaseToolTipGenerator(categoryToolTipGenerator30);
        boolean boolean34 = statisticalBarRenderer29.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer35.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer44 = statisticalBarRenderer35.getGradientPaintTransformer();
        statisticalBarRenderer29.setGradientPaintTransformer(gradientPaintTransformer44);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator46 = statisticalBarRenderer29.getLegendItemLabelGenerator();
        java.awt.Stroke stroke47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer29.setBaseStroke(stroke47);
        statisticalBarRenderer0.setSeriesStroke((int) ' ', stroke47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator52 = null;
        statisticalBarRenderer51.setBaseToolTipGenerator(categoryToolTipGenerator52);
        boolean boolean56 = statisticalBarRenderer51.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator57 = null;
        statisticalBarRenderer51.setBaseItemLabelGenerator(categoryItemLabelGenerator57, false);
        java.awt.Paint paint62 = statisticalBarRenderer51.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint62);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
        org.junit.Assert.assertNotNull(gradientPaintTransformer44);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator46);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(paint62);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.awt.Paint paint15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlinePaint(paint15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        boolean boolean15 = statisticalBarRenderer0.getItemVisible(1, (int) '#');
        org.jfree.data.category.CategoryDataset categoryDataset16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range17 = statisticalBarRenderer0.findRangeBounds(categoryDataset16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.data.category.CategoryDataset categoryDataset23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range24 = statisticalBarRenderer0.findRangeBounds(categoryDataset23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(paint22);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        java.awt.Paint paint16 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint16, false);
        java.awt.Paint paint19 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Stroke stroke20 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 10);
        boolean boolean20 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        java.awt.Stroke stroke24 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Paint paint26 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) '4');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        int int26 = statisticalBarRenderer21.getRowCount();
        java.awt.Shape shape27 = statisticalBarRenderer21.getBaseShape();
        statisticalBarRenderer10.setBaseShape(shape27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke48 = statisticalBarRenderer44.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer30.setBaseStroke(stroke48, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer51.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener54 = null;
        boolean boolean55 = statisticalBarRenderer51.hasListener(eventListener54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        int int59 = statisticalBarRenderer56.getPassCount();
        java.awt.Font font61 = statisticalBarRenderer56.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer56.getBasePositiveItemLabelPosition();
        statisticalBarRenderer51.setNegativeItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer30.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition62);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        int int67 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition68 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Graphics2D graphics2D69 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot70 = null;
        java.awt.geom.Rectangle2D rectangle2D71 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D69, categoryPlot70, rectangle2D71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(font61);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition68);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        double double18 = statisticalBarRenderer13.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer13.setSeriesPaint(1, paint23);
        statisticalBarRenderer8.setBaseFillPaint(paint23, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer8.getBaseToolTipGenerator();
        java.awt.Paint paint29 = statisticalBarRenderer8.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint29, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(categoryURLGenerator33);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        java.awt.geom.Rectangle2D rectangle2D27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D25, categoryPlot26, rectangle2D27, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(paint22);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        java.awt.Font font13 = statisticalBarRenderer8.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition14);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        boolean boolean17 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(font13);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity((-1), 1);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 1, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer12.getNegativeItemLabelPositionFallback();
        java.awt.Stroke stroke20 = statisticalBarRenderer12.getItemStroke((int) (short) -1, (int) (short) 0);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke20);
        int int22 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(itemLabelPosition29);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint16 = statisticalBarRenderer0.getSeriesPaint((int) 'a');
        java.awt.Paint paint18 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(paint16);
        org.junit.Assert.assertNotNull(paint18);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = statisticalBarRenderer0.getItemLabelGenerator(1, (int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        boolean boolean23 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        boolean boolean12 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint15 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) 'a', categoryURLGenerator17, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        int int25 = statisticalBarRenderer20.getColumnCount();
        java.awt.Paint paint26 = statisticalBarRenderer20.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint26);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 1);
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Stroke stroke37 = statisticalBarRenderer0.lookupSeriesStroke(0);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(stroke37);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Paint paint10 = statisticalBarRenderer0.getItemFillPaint((int) 'a', (int) (byte) -1);
        int int11 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false);
        boolean boolean12 = statisticalBarRenderer0.getItemVisible((int) (byte) -1, 100);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 10);
        java.awt.Shape shape19 = statisticalBarRenderer0.getItemShape((int) (short) 100, (int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(shape19);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean8 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer9.getURLGenerator(1, (int) (short) 0);
        java.awt.Stroke stroke19 = statisticalBarRenderer9.getItemOutlineStroke((int) (byte) 1, 1);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke19);
        boolean boolean23 = statisticalBarRenderer0.getItemCreateEntity((int) '#', (int) '4');
        java.awt.Shape shape25 = statisticalBarRenderer0.getSeriesShape((int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(shape25);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        double double7 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer8.getBaseFillPaint();
        statisticalBarRenderer0.setBaseItemLabelPaint(paint13, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke21 = statisticalBarRenderer16.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = null;
        statisticalBarRenderer16.setBaseItemLabelGenerator(categoryItemLabelGenerator22);
        java.awt.Stroke stroke26 = statisticalBarRenderer16.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer27.setAutoPopulateSeriesOutlinePaint(false);
        int int32 = statisticalBarRenderer27.getRowCount();
        java.awt.Shape shape33 = statisticalBarRenderer27.getBaseShape();
        statisticalBarRenderer16.setBaseShape(shape33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer36.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = null;
        statisticalBarRenderer42.setBaseURLGenerator(categoryURLGenerator43, false);
        int int46 = statisticalBarRenderer42.getColumnCount();
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer42.setErrorIndicatorPaint(paint47);
        statisticalBarRenderer36.setBaseItemLabelPaint(paint47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke52 = statisticalBarRenderer50.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke54 = statisticalBarRenderer50.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer36.setBaseStroke(stroke54, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer57.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener60 = null;
        boolean boolean61 = statisticalBarRenderer57.hasListener(eventListener60);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke64 = statisticalBarRenderer62.getSeriesOutlineStroke((int) (byte) 10);
        int int65 = statisticalBarRenderer62.getPassCount();
        java.awt.Font font67 = statisticalBarRenderer62.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition68 = statisticalBarRenderer62.getBasePositiveItemLabelPosition();
        statisticalBarRenderer57.setNegativeItemLabelPositionFallback(itemLabelPosition68);
        statisticalBarRenderer36.setPositiveItemLabelPositionFallback(itemLabelPosition68);
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition68);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition68);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation73 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(shape33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNull(stroke52);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(stroke64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNull(font67);
        org.junit.Assert.assertNotNull(itemLabelPosition68);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setBaseCreateEntities(true, false);
        boolean boolean31 = statisticalBarRenderer24.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Paint paint34 = statisticalBarRenderer24.getItemFillPaint((int) 'a', (int) (byte) -1);
        statisticalBarRenderer0.setSeriesFillPaint(0, paint34);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer16.setDrawBarOutline(false);
        java.lang.Boolean boolean22 = statisticalBarRenderer16.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer16.setBaseCreateEntities(false, false);
        boolean boolean26 = statisticalBarRenderer16.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer27.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke32 = statisticalBarRenderer27.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator33 = null;
        statisticalBarRenderer27.setBaseItemLabelGenerator(categoryItemLabelGenerator33);
        java.awt.Stroke stroke37 = statisticalBarRenderer27.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer38.setAutoPopulateSeriesOutlinePaint(false);
        int int43 = statisticalBarRenderer38.getRowCount();
        java.awt.Shape shape44 = statisticalBarRenderer38.getBaseShape();
        statisticalBarRenderer27.setBaseShape(shape44);
        java.awt.Paint paint46 = statisticalBarRenderer27.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer27.getSeriesNegativeItemLabelPosition((int) ' ');
        java.awt.Font font49 = statisticalBarRenderer27.getBaseItemLabelFont();
        statisticalBarRenderer16.setBaseItemLabelFont(font49, false);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) ' ', font49);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(shape44);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
        org.junit.Assert.assertNotNull(font49);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        double double11 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        int int14 = statisticalBarRenderer10.getColumnCount();
        java.awt.Shape shape16 = null;
        statisticalBarRenderer10.setSeriesShape((int) (byte) 100, shape16, true);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.lookupSeriesStroke(1);
        statisticalBarRenderer0.setBaseStroke(stroke20, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        java.awt.Paint paint30 = null;
        statisticalBarRenderer23.setSeriesOutlinePaint((int) '4', paint30);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = statisticalBarRenderer23.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator33 = null;
        statisticalBarRenderer23.setBaseItemLabelGenerator(categoryItemLabelGenerator33);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator35 = statisticalBarRenderer23.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator35);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryToolTipGenerator32);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator35);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        int int12 = statisticalBarRenderer8.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        double double18 = statisticalBarRenderer13.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer13.setSeriesPaint(1, paint23);
        statisticalBarRenderer8.setBaseFillPaint(paint23, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer8.getBaseToolTipGenerator();
        java.awt.Paint paint29 = statisticalBarRenderer8.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint29, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean15 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke17 = statisticalBarRenderer13.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setBasePaint(paint7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemLabelPaint((-1), 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator7);
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        boolean boolean18 = statisticalBarRenderer12.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        statisticalBarRenderer20.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer20.setSeriesOutlineStroke((int) (byte) 1, stroke28);
        java.awt.Paint paint31 = statisticalBarRenderer20.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer12.setSeriesOutlinePaint((int) (byte) 0, paint31);
        java.awt.Paint paint34 = statisticalBarRenderer12.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer12.setBaseCreateEntities(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer38.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = null;
        statisticalBarRenderer44.setBaseURLGenerator(categoryURLGenerator45, false);
        int int48 = statisticalBarRenderer44.getColumnCount();
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer44.setErrorIndicatorPaint(paint49);
        statisticalBarRenderer38.setBaseItemLabelPaint(paint49);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation52 = null;
        boolean boolean53 = statisticalBarRenderer38.removeAnnotation(categoryAnnotation52);
        java.awt.Font font54 = statisticalBarRenderer38.getBaseItemLabelFont();
        statisticalBarRenderer12.setBaseItemLabelFont(font54);
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font54);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator23);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(font54);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 10);
        java.awt.Paint paint19 = statisticalBarRenderer0.getItemOutlinePaint(0, (int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        boolean boolean38 = statisticalBarRenderer17.isItemLabelVisible((int) (short) 0, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        int int58 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator59, true);
        java.awt.Shape shape62 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(shape62);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer8.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        int int33 = statisticalBarRenderer29.getColumnCount();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setErrorIndicatorPaint(paint34);
        statisticalBarRenderer23.setBaseItemLabelPaint(paint34);
        statisticalBarRenderer8.setSeriesFillPaint((int) (byte) 10, paint34, true);
        statisticalBarRenderer8.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer42.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer42.setBaseFillPaint(paint45);
        boolean boolean47 = statisticalBarRenderer42.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke48 = statisticalBarRenderer42.getBaseStroke();
        statisticalBarRenderer8.setErrorIndicatorStroke(stroke48);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke48, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer52.setItemLabelAnchorOffset((-1.0d));
        double double55 = statisticalBarRenderer52.getBase();
        boolean boolean56 = statisticalBarRenderer52.getBaseItemLabelsVisible();
        java.awt.Stroke stroke57 = statisticalBarRenderer52.getErrorIndicatorStroke();
        java.lang.Boolean boolean59 = statisticalBarRenderer52.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint60 = statisticalBarRenderer52.getBaseOutlinePaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint60);
        java.awt.Graphics2D graphics2D62 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot63 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis64 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker65 = null;
        java.awt.geom.Rectangle2D rectangle2D66 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D62, categoryPlot63, categoryAxis64, categoryMarker65, rectangle2D66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(stroke57);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(paint60);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setMinimumBarLength((double) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer8.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer24.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer24.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator30, true);
        statisticalBarRenderer24.removeAnnotations();
        java.awt.Paint paint34 = statisticalBarRenderer24.getErrorIndicatorPaint();
        statisticalBarRenderer8.setErrorIndicatorPaint(paint34);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 1, paint34);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        boolean boolean6 = statisticalBarRenderer0.isSeriesVisibleInLegend((-1));
        double double7 = statisticalBarRenderer0.getBase();
        java.awt.Paint paint8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseItemLabelPaint(paint8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBasePaint();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((-1), 0);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        org.jfree.chart.plot.Marker marker15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D12, categoryPlot13, valueAxis14, marker15, rectangle2D16);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator18, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier21 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier21);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        boolean boolean14 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation13);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D15, categoryPlot16, valueAxis17, rectangle2D18, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        java.awt.Paint paint14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlinePaint(paint14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition17);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 1, 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator12);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getPositiveItemLabelPosition((-1), (int) (short) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setSeriesVisible((int) ' ', (java.lang.Boolean) true, false);
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D13, categoryPlot14, rectangle2D15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint8);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        boolean boolean15 = statisticalBarRenderer8.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape17 = statisticalBarRenderer8.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean19 = statisticalBarRenderer8.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        java.awt.Paint paint25 = statisticalBarRenderer20.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem28 = statisticalBarRenderer20.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer20.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator31);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(100, categoryItemLabelGenerator37, true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(legendItem28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator31);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean8 = statisticalBarRenderer0.getItemVisible((int) (byte) 0, 1);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true, false);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier13 = statisticalBarRenderer0.getDrawingSupplier();
        statisticalBarRenderer0.setBaseSeriesVisible(false, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(drawingSupplier13);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        boolean boolean10 = statisticalBarRenderer0.getIncludeBaseInRange();
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.Marker marker14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D11, categoryPlot12, valueAxis13, marker14, rectangle2D15);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator7);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        int int9 = statisticalBarRenderer6.getPassCount();
        statisticalBarRenderer6.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean13 = statisticalBarRenderer6.getSeriesVisible((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer14 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer14);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 100, true);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(gradientPaintTransformer14);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator22);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator17);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        boolean boolean23 = statisticalBarRenderer0.getItemVisible((int) (short) 10, (int) (short) 1);
        int int24 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryURLGenerator20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(1, categoryURLGenerator39);
        boolean boolean43 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) (short) 100);
        double double44 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint46 = statisticalBarRenderer0.getSeriesPaint(0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNull(paint46);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, (int) (short) 10);
        org.jfree.chart.LegendItemCollection legendItemCollection13 = statisticalBarRenderer0.getLegendItems();
        java.awt.Shape shape15 = statisticalBarRenderer0.getSeriesShape((int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
        org.junit.Assert.assertNotNull(legendItemCollection13);
        org.junit.Assert.assertNull(shape15);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesVisible((int) (short) -1);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font19 = statisticalBarRenderer14.getBaseItemLabelFont();
        int int20 = statisticalBarRenderer14.getRowCount();
        double double21 = statisticalBarRenderer14.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener25 = null;
        boolean boolean26 = statisticalBarRenderer22.hasListener(eventListener25);
        java.awt.Paint paint29 = statisticalBarRenderer22.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer14.setBaseOutlinePaint(paint29, true);
        statisticalBarRenderer12.setSeriesOutlinePaint(10, paint29);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint29);
        double double34 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 10);
        statisticalBarRenderer0.setMinimumBarLength((double) 0.0f);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        org.jfree.chart.plot.DrawingSupplier drawingSupplier8 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(drawingSupplier8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        int int14 = statisticalBarRenderer10.getColumnCount();
        java.awt.Shape shape16 = null;
        statisticalBarRenderer10.setSeriesShape((int) (byte) 100, shape16, true);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.lookupSeriesStroke(1);
        statisticalBarRenderer0.setBaseStroke(stroke20, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        java.awt.Paint paint30 = null;
        statisticalBarRenderer23.setSeriesOutlinePaint((int) '4', paint30);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = statisticalBarRenderer23.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator33 = null;
        statisticalBarRenderer23.setBaseItemLabelGenerator(categoryItemLabelGenerator33);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator35 = statisticalBarRenderer23.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator35);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryToolTipGenerator32);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator35);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth(2.0d);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) 0, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer10.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer10.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator16, true);
        statisticalBarRenderer10.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = null;
        statisticalBarRenderer20.setBaseToolTipGenerator(categoryToolTipGenerator21);
        boolean boolean25 = statisticalBarRenderer20.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = null;
        statisticalBarRenderer20.setBaseItemLabelGenerator(categoryItemLabelGenerator26);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        int int31 = statisticalBarRenderer28.getPassCount();
        java.awt.Font font33 = statisticalBarRenderer28.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer28.getBasePositiveItemLabelPosition();
        statisticalBarRenderer20.setNegativeItemLabelPositionFallback(itemLabelPosition34);
        java.awt.Paint paint36 = statisticalBarRenderer20.getBaseItemLabelPaint();
        statisticalBarRenderer10.setBasePaint(paint36, false);
        double double39 = statisticalBarRenderer10.getBase();
        boolean boolean41 = statisticalBarRenderer10.isSeriesItemLabelsVisible((int) (short) -1);
        statisticalBarRenderer10.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer44.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer44.setBaseFillPaint(paint47);
        boolean boolean49 = statisticalBarRenderer44.getAutoPopulateSeriesStroke();
        java.awt.Paint paint51 = statisticalBarRenderer44.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint52 = statisticalBarRenderer44.getBaseItemLabelPaint();
        statisticalBarRenderer10.setBaseOutlinePaint(paint52);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 100, paint52);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(font33);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(paint52);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        int int10 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        boolean boolean18 = statisticalBarRenderer11.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape20 = statisticalBarRenderer11.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean22 = statisticalBarRenderer11.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer11.getItemLabelGenerator((int) (short) 1, (int) (short) 0);
        statisticalBarRenderer11.setSeriesVisibleInLegend((int) (byte) 1, (java.lang.Boolean) false);
        double double29 = statisticalBarRenderer11.getMinimumBarLength();
        java.awt.Paint paint31 = statisticalBarRenderer11.lookupSeriesFillPaint((int) (short) 1);
        boolean boolean32 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer11);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        java.awt.Shape shape12 = statisticalBarRenderer0.lookupSeriesShape((int) '4');
        java.awt.Stroke stroke13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseStroke(stroke13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNotNull(shape12);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener10 = null;
        boolean boolean11 = statisticalBarRenderer7.hasListener(eventListener10);
        java.awt.Paint paint14 = statisticalBarRenderer7.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseFillPaint(paint14);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18, false);
        double double21 = statisticalBarRenderer17.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer17.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator22);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator22);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        java.awt.Paint paint25 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 0);
        boolean boolean27 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = null;
        statisticalBarRenderer9.setBaseToolTipGenerator(categoryToolTipGenerator10);
        boolean boolean12 = statisticalBarRenderer9.isDrawBarOutline();
        java.awt.Paint paint14 = statisticalBarRenderer9.getSeriesPaint((int) (byte) 0);
        boolean boolean17 = statisticalBarRenderer9.getItemCreateEntity((-1), 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        java.awt.Font font26 = null;
        statisticalBarRenderer19.setSeriesItemLabelFont((int) '4', font26);
        java.awt.Stroke stroke28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer19.setBaseStroke(stroke28);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer19.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator32 = statisticalBarRenderer19.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer34.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer40.setBaseURLGenerator(categoryURLGenerator41, false);
        int int44 = statisticalBarRenderer40.getColumnCount();
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setErrorIndicatorPaint(paint45);
        statisticalBarRenderer34.setBaseItemLabelPaint(paint45);
        statisticalBarRenderer19.setSeriesFillPaint((int) (byte) 10, paint45, true);
        statisticalBarRenderer9.setSeriesOutlinePaint(1, paint45);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint45, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNull(categoryItemLabelGenerator32);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(paint45);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setErrorIndicatorPaint(paint21);
        statisticalBarRenderer10.setBaseItemLabelPaint(paint21);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke28 = statisticalBarRenderer24.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer10.setBaseStroke(stroke28, false);
        statisticalBarRenderer10.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer33.getLegendItemToolTipGenerator();
        statisticalBarRenderer33.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer41.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer41.setBaseFillPaint(paint44);
        statisticalBarRenderer33.setSeriesFillPaint((int) (byte) 1, paint44);
        statisticalBarRenderer10.setBaseItemLabelPaint(paint44, false);
        java.awt.Shape shape50 = statisticalBarRenderer10.getSeriesShape((int) (byte) 1);
        java.awt.Shape shape52 = statisticalBarRenderer10.lookupSeriesShape((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertNull(shape50);
        org.junit.Assert.assertNotNull(shape52);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer0.getItemLabelGenerator(0, (int) (short) 1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Stroke stroke12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke12, false);
        boolean boolean17 = statisticalBarRenderer0.isItemLabelVisible(100, (int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        double double18 = statisticalBarRenderer13.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer13.setSeriesPaint(1, paint23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer13.getSeriesPositiveItemLabelPosition((int) '4');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition27, true);
        boolean boolean30 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer27.setBaseCreateEntities(true, false);
        boolean boolean34 = statisticalBarRenderer27.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator35 = statisticalBarRenderer27.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = statisticalBarRenderer27.getSeriesItemLabelGenerator((int) (byte) 100);
        java.awt.Paint paint38 = statisticalBarRenderer27.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint38, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator35);
        org.junit.Assert.assertNull(categoryItemLabelGenerator37);
        org.junit.Assert.assertNotNull(paint38);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        double double15 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Shape shape17 = statisticalBarRenderer0.getSeriesShape((int) '4');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(shape17);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.lang.Class<?> wildcardClass17 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        java.awt.Paint paint35 = statisticalBarRenderer0.lookupSeriesPaint(0);
        double double36 = statisticalBarRenderer0.getLowerClip();
        java.awt.Shape shape37 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(shape37);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        double double12 = statisticalBarRenderer0.getMinimumBarLength();
        boolean boolean13 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range15 = statisticalBarRenderer0.findRangeBounds(categoryDataset14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setSeriesVisible((int) ' ', (java.lang.Boolean) false);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisible(0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = statisticalBarRenderer0.getBaseURLGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        boolean boolean43 = statisticalBarRenderer39.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer39.getNegativeItemLabelPosition((int) (byte) 10, (int) '4');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition46, false);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(categoryURLGenerator36);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer13.setSeriesPaint(100, paint19);
        statisticalBarRenderer12.setBasePaint(paint19);
        statisticalBarRenderer0.setBasePaint(paint19);
        java.lang.Boolean boolean24 = statisticalBarRenderer0.getSeriesVisible((int) (short) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        int int26 = statisticalBarRenderer21.getRowCount();
        java.awt.Shape shape27 = statisticalBarRenderer21.getBaseShape();
        statisticalBarRenderer10.setBaseShape(shape27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke48 = statisticalBarRenderer44.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer30.setBaseStroke(stroke48, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer51.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener54 = null;
        boolean boolean55 = statisticalBarRenderer51.hasListener(eventListener54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        int int59 = statisticalBarRenderer56.getPassCount();
        java.awt.Font font61 = statisticalBarRenderer56.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer56.getBasePositiveItemLabelPosition();
        statisticalBarRenderer51.setNegativeItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer30.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition62);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        java.lang.Class<?> wildcardClass67 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(font61);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        java.awt.Shape shape13 = statisticalBarRenderer0.getItemShape((int) (byte) -1, 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(shape13);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke18 = statisticalBarRenderer13.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer13.setBaseItemLabelGenerator(categoryItemLabelGenerator19);
        java.awt.Stroke stroke23 = statisticalBarRenderer13.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setAutoPopulateSeriesOutlinePaint(false);
        int int29 = statisticalBarRenderer24.getRowCount();
        java.awt.Shape shape30 = statisticalBarRenderer24.getBaseShape();
        statisticalBarRenderer13.setBaseShape(shape30);
        java.awt.Paint paint32 = statisticalBarRenderer13.getBasePaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint32);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
        boolean boolean37 = statisticalBarRenderer0.isSeriesVisibleInLegend(0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(categoryItemLabelGenerator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        java.awt.Shape shape33 = statisticalBarRenderer0.getSeriesShape((int) '4');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertNull(shape33);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 1, categoryURLGenerator13);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(shape8);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Shape shape8 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(categoryURLGenerator12);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke(0);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) 100, (int) (byte) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer15.setDrawBarOutline(false);
        statisticalBarRenderer15.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        double double23 = statisticalBarRenderer15.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        int int28 = statisticalBarRenderer25.getPassCount();
        double double29 = statisticalBarRenderer25.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer25.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint33 = statisticalBarRenderer25.getSeriesPaint((int) (short) -1);
        boolean boolean34 = statisticalBarRenderer25.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        java.awt.Font font42 = null;
        statisticalBarRenderer35.setSeriesItemLabelFont((int) '4', font42);
        java.awt.Stroke stroke44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer35.setBaseStroke(stroke44);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer35.getBasePositiveItemLabelPosition();
        statisticalBarRenderer25.setPositiveItemLabelPositionFallback(itemLabelPosition46);
        statisticalBarRenderer15.setSeriesNegativeItemLabelPosition((int) (byte) 0, itemLabelPosition46);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(1, itemLabelPosition46);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer11.setBaseToolTipGenerator(categoryToolTipGenerator12);
        boolean boolean16 = statisticalBarRenderer11.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator17, false);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        boolean boolean22 = statisticalBarRenderer11.removeAnnotation(categoryAnnotation21);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer0.setBasePaint(paint25);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        boolean boolean32 = statisticalBarRenderer0.getItemCreateEntity((int) '#', (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        java.awt.Font font40 = null;
        statisticalBarRenderer33.setSeriesItemLabelFont((int) '4', font40);
        java.awt.Stroke stroke42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer33.setBaseStroke(stroke42);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator48 = null;
        statisticalBarRenderer33.setSeriesToolTipGenerator(100, categoryToolTipGenerator48);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer50.setItemLabelAnchorOffset((-1.0d));
        double double53 = statisticalBarRenderer50.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator54 = statisticalBarRenderer50.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke56 = statisticalBarRenderer50.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer33.setErrorIndicatorStroke(stroke56);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke56, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator54);
        org.junit.Assert.assertNotNull(stroke56);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        int int26 = statisticalBarRenderer21.getRowCount();
        java.awt.Shape shape27 = statisticalBarRenderer21.getBaseShape();
        java.awt.Font font30 = statisticalBarRenderer21.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer32.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator35 = statisticalBarRenderer32.getLegendItemToolTipGenerator();
        statisticalBarRenderer32.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer40.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer40.setBaseFillPaint(paint43);
        statisticalBarRenderer32.setSeriesFillPaint((int) (byte) 1, paint43);
        statisticalBarRenderer21.setSeriesFillPaint((int) '4', paint43);
        statisticalBarRenderer0.setSeriesFillPaint(100, paint43, false);
        java.awt.Stroke stroke51 = statisticalBarRenderer0.getItemStroke((int) (short) 0, (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(font30);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator35);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNotNull(stroke51);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.LegendItem legendItem7 = statisticalBarRenderer0.getLegendItem(0, (int) '#');
        java.awt.Font font10 = statisticalBarRenderer0.getItemLabelFont((int) 'a', (int) (byte) -1);
        java.awt.Paint paint12 = statisticalBarRenderer0.lookupSeriesFillPaint(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setBaseCreateEntities(true, false);
        java.awt.Font font21 = null;
        statisticalBarRenderer14.setSeriesItemLabelFont((int) '4', font21);
        java.awt.Stroke stroke23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer14.setBaseStroke(stroke23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer14.getBasePositiveItemLabelPosition();
        statisticalBarRenderer14.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = null;
        statisticalBarRenderer14.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator31);
        java.awt.Paint paint34 = statisticalBarRenderer14.lookupSeriesPaint(100);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint34);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(legendItem7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        boolean boolean26 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator27, false);
        int int30 = statisticalBarRenderer0.getPassCount();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        boolean boolean10 = statisticalBarRenderer0.isSeriesVisible((int) (short) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        java.awt.Font font13 = statisticalBarRenderer6.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        statisticalBarRenderer0.setItemLabelAnchorOffset(2.0d);
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 10, paint19, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer23.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator27, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = statisticalBarRenderer23.getBaseToolTipGenerator();
        java.awt.Paint paint31 = statisticalBarRenderer23.getBaseOutlinePaint();
        java.awt.Stroke stroke32 = statisticalBarRenderer23.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke32, false);
        java.awt.Paint paint35 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryToolTipGenerator30);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(categoryURLGenerator36);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener41 = null;
        boolean boolean42 = statisticalBarRenderer35.hasListener(eventListener41);
        java.awt.Shape shape45 = statisticalBarRenderer35.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape(100, shape45, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator48 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shape45);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator48);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean25 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) '#');
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(categoryPlot29);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setItemMargin((double) (-1.0f));
        java.awt.Paint paint24 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint24);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator26);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisible((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer37.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator43 = null;
        statisticalBarRenderer37.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator43, true);
        java.awt.Paint paint46 = statisticalBarRenderer37.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (short) 10, paint46);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(paint46);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer21.hasListener(eventListener24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        java.awt.Font font31 = statisticalBarRenderer26.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer26.getBasePositiveItemLabelPosition();
        statisticalBarRenderer21.setNegativeItemLabelPositionFallback(itemLabelPosition32);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean37 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        double double38 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(font31);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        java.awt.Paint paint7 = statisticalBarRenderer0.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D8, categoryPlot9, rectangle2D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
        boolean boolean22 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        statisticalBarRenderer0.setBase(0.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        boolean boolean10 = statisticalBarRenderer0.getItemCreateEntity(100, (int) (short) 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(categoryPlot11);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        java.awt.Font font8 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Graphics2D graphics2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D10, categoryPlot11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(font8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        boolean boolean17 = statisticalBarRenderer12.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke18 = statisticalBarRenderer12.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke18);
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) 100, (int) (short) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        java.awt.Paint paint12 = statisticalBarRenderer7.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem15 = statisticalBarRenderer7.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer7.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = null;
        statisticalBarRenderer18.setBaseToolTipGenerator(categoryToolTipGenerator19);
        boolean boolean23 = statisticalBarRenderer18.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer18.setBaseItemLabelGenerator(categoryItemLabelGenerator24, false);
        java.awt.Stroke stroke27 = statisticalBarRenderer18.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer18.removeAnnotation(categoryAnnotation28);
        java.awt.Paint paint32 = statisticalBarRenderer18.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer7.setBasePaint(paint32);
        java.awt.Stroke stroke34 = statisticalBarRenderer7.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke34);
        java.awt.Font font37 = statisticalBarRenderer0.getSeriesItemLabelFont((int) '4');
        boolean boolean38 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator41 = statisticalBarRenderer0.getToolTipGenerator(0, (int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(legendItem15);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNull(font37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator41);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        int int6 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator15);
        java.awt.Graphics2D graphics2D17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis19 = null;
        org.jfree.chart.axis.ValueAxis valueAxis20 = null;
        org.jfree.chart.util.Layer layer21 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D17, rectangle2D18, categoryAxis19, valueAxis20, layer21, plotRenderingInfo22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        java.awt.Font font5 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 100, (int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(font5);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesCreateEntities(0, (java.lang.Boolean) false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer7.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer7.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator13, true);
        java.awt.Paint paint18 = statisticalBarRenderer7.getItemFillPaint((int) (short) 1, 10);
        statisticalBarRenderer0.setBaseFillPaint(paint18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        int int26 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint28 = statisticalBarRenderer21.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer21.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer21.getSeriesPositiveItemLabelPosition((int) (short) 10);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition33);
        double double35 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categoryPlot6);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(paint28);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font12 = statisticalBarRenderer7.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        java.awt.Font font20 = statisticalBarRenderer13.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer7.setBaseItemLabelFont(font20, false);
        statisticalBarRenderer7.setItemLabelAnchorOffset(2.0d);
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint((int) (byte) 10, paint26, false);
        statisticalBarRenderer0.setBaseFillPaint(paint26, true);
        java.awt.Paint paint33 = statisticalBarRenderer0.getItemLabelPaint(0, (int) '#');
        double double34 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.2d + "'", double34 == 0.2d);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemOutlineStroke(10, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        int int15 = statisticalBarRenderer12.getPassCount();
        double double16 = statisticalBarRenderer12.getUpperClip();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setSeriesPaint(100, paint18);
        statisticalBarRenderer11.setBasePaint(paint18);
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = statisticalBarRenderer11.getPlot();
        statisticalBarRenderer11.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        java.awt.Paint paint28 = statisticalBarRenderer11.getItemOutlinePaint((int) (byte) -1, (int) (short) 1);
        statisticalBarRenderer0.setBaseFillPaint(paint28, false);
        int int31 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator32 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(categoryPlot21);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator32);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getItemStroke(0, (-1));
        statisticalBarRenderer0.setMaximumBarWidth((double) 0.0f);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertNotNull(stroke34);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setBase((double) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        java.lang.Object obj12 = statisticalBarRenderer0.clone();
        double double13 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        statisticalBarRenderer0.setMinimumBarLength((double) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer23.setBaseFillPaint(paint26);
        boolean boolean28 = statisticalBarRenderer23.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke29 = statisticalBarRenderer23.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = null;
        statisticalBarRenderer30.setBaseURLGenerator(categoryURLGenerator31, false);
        int int34 = statisticalBarRenderer30.getColumnCount();
        int int35 = statisticalBarRenderer30.getColumnCount();
        java.awt.Paint paint36 = statisticalBarRenderer30.getErrorIndicatorPaint();
        statisticalBarRenderer23.setBaseOutlinePaint(paint36, true);
        statisticalBarRenderer0.setBaseFillPaint(paint36, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        int int44 = statisticalBarRenderer41.getPassCount();
        double double45 = statisticalBarRenderer41.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer41.getSeriesPositiveItemLabelPosition(1);
        java.awt.Shape shape49 = statisticalBarRenderer41.lookupSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBaseShape(shape49, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertNotNull(shape49);
        org.junit.Assert.assertNull(itemLabelPosition52);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint16 = statisticalBarRenderer0.getSeriesPaint((int) 'a');
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.LegendItem legendItem21 = statisticalBarRenderer0.getLegendItem(10, (int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(paint16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(legendItem21);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        java.awt.Shape shape16 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer24.setBaseURLGenerator(categoryURLGenerator25, false);
        int int28 = statisticalBarRenderer24.getColumnCount();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setErrorIndicatorPaint(paint29);
        statisticalBarRenderer18.setBaseItemLabelPaint(paint29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke36 = statisticalBarRenderer32.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer18.setBaseStroke(stroke36, false);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) 'a', stroke36);
        double double40 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape16);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent30 = null;
        statisticalBarRenderer25.notifyListeners(rendererChangeEvent30);
        java.awt.Paint paint34 = statisticalBarRenderer25.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint34);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = null;
        statisticalBarRenderer37.setBaseURLGenerator(categoryURLGenerator38, false);
        int int41 = statisticalBarRenderer37.getColumnCount();
        int int42 = statisticalBarRenderer37.getColumnCount();
        java.awt.Paint paint44 = statisticalBarRenderer37.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer37.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition47);
        boolean boolean51 = statisticalBarRenderer0.isItemLabelVisible((int) (short) 0, (int) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(paint44);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range12 = statisticalBarRenderer0.findRangeBounds(categoryDataset11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        double double9 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = statisticalBarRenderer11.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = null;
        statisticalBarRenderer13.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator19, true);
        statisticalBarRenderer13.removeAnnotations();
        java.awt.Paint paint23 = statisticalBarRenderer13.getErrorIndicatorPaint();
        statisticalBarRenderer11.setBasePaint(paint23, true);
        statisticalBarRenderer0.setSeriesFillPaint(10, paint23, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator32 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator32, false);
        java.awt.Stroke stroke35 = null;
        statisticalBarRenderer28.setErrorIndicatorStroke(stroke35);
        boolean boolean37 = statisticalBarRenderer28.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer28.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition39);
        boolean boolean43 = statisticalBarRenderer0.getItemVisible((int) (byte) 1, (int) (byte) 1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator45);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = statisticalBarRenderer0.getPlot();
        boolean boolean32 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer0.getNegativeItemLabelPosition(100, (int) 'a');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(10);
        java.awt.Paint paint41 = null;
        statisticalBarRenderer0.setBasePaint(paint41, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator46 = statisticalBarRenderer0.getURLGenerator((int) (byte) 100, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(categoryPlot31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
        org.junit.Assert.assertNull(categoryURLGenerator46);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Paint paint11 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint(1, paint11, false);
        int int14 = statisticalBarRenderer0.getPassCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        java.lang.Boolean boolean13 = statisticalBarRenderer0.getSeriesVisible((int) '4');
        boolean boolean14 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Shape shape16 = statisticalBarRenderer0.getSeriesShape((int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(shape16);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke8);
        java.awt.Paint paint11 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setBase((-1.0d));
        java.awt.Paint paint28 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener10 = null;
        boolean boolean11 = statisticalBarRenderer7.hasListener(eventListener10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator12);
        java.awt.Paint paint14 = statisticalBarRenderer7.getBaseItemLabelPaint();
        java.lang.Boolean boolean16 = statisticalBarRenderer7.getSeriesItemLabelsVisible((int) (short) 100);
        java.awt.Paint paint17 = statisticalBarRenderer7.getErrorIndicatorPaint();
        statisticalBarRenderer0.setErrorIndicatorPaint(paint17);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer0.lookupSeriesStroke(10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator27);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier58 = statisticalBarRenderer0.getDrawingSupplier();
        boolean boolean59 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator62 = null;
        statisticalBarRenderer61.setBaseToolTipGenerator(categoryToolTipGenerator62);
        boolean boolean66 = statisticalBarRenderer61.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator67 = null;
        statisticalBarRenderer61.setBaseItemLabelGenerator(categoryItemLabelGenerator67, false);
        statisticalBarRenderer61.setDrawBarOutline(true);
        java.awt.Paint paint73 = statisticalBarRenderer61.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 10, paint73);
        org.jfree.chart.LegendItemCollection legendItemCollection75 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(drawingSupplier58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(paint73);
        org.junit.Assert.assertNotNull(legendItemCollection75);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        java.awt.Paint paint9 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 100, paint9, true);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        statisticalBarRenderer0.setItemLabelAnchorOffset(100.0d);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        boolean boolean33 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) '#', (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemFillPaint((int) (short) 10, 0);
        java.awt.Shape shape27 = statisticalBarRenderer0.getSeriesShape(0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(shape27);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        boolean boolean9 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categoryURLGenerator21);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator28);
        java.util.EventListener eventListener30 = null;
        boolean boolean31 = statisticalBarRenderer0.hasListener(eventListener30);
        boolean boolean33 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 1);
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        java.awt.geom.Rectangle2D rectangle2D37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D34, categoryPlot35, valueAxis36, rectangle2D37, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        java.awt.Paint paint12 = statisticalBarRenderer7.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem15 = statisticalBarRenderer7.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer7.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = null;
        statisticalBarRenderer18.setBaseToolTipGenerator(categoryToolTipGenerator19);
        boolean boolean23 = statisticalBarRenderer18.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer18.setBaseItemLabelGenerator(categoryItemLabelGenerator24, false);
        java.awt.Stroke stroke27 = statisticalBarRenderer18.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation28 = null;
        boolean boolean29 = statisticalBarRenderer18.removeAnnotation(categoryAnnotation28);
        java.awt.Paint paint32 = statisticalBarRenderer18.getItemFillPaint(100, (int) (byte) -1);
        statisticalBarRenderer7.setBasePaint(paint32);
        java.awt.Stroke stroke34 = statisticalBarRenderer7.getBaseStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke34);
        java.awt.Font font37 = statisticalBarRenderer0.getSeriesItemLabelFont((int) '4');
        statisticalBarRenderer0.setSeriesItemLabelsVisible(10, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(legendItem15);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNull(font37);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        double double17 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer19.setDrawBarOutline(false);
        statisticalBarRenderer19.removeAnnotations();
        boolean boolean25 = statisticalBarRenderer19.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer19.setBaseItemLabelsVisible(true, true);
        statisticalBarRenderer19.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        int int37 = statisticalBarRenderer33.getColumnCount();
        java.awt.Paint paint38 = statisticalBarRenderer33.getBaseFillPaint();
        statisticalBarRenderer19.setBasePaint(paint38, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer19.getSeriesNegativeItemLabelPosition((-1));
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 10, itemLabelPosition42);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke37 = statisticalBarRenderer32.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = null;
        statisticalBarRenderer32.setBaseItemLabelGenerator(categoryItemLabelGenerator38);
        java.awt.Stroke stroke42 = statisticalBarRenderer32.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer43.setAutoPopulateSeriesOutlinePaint(false);
        int int48 = statisticalBarRenderer43.getRowCount();
        java.awt.Shape shape49 = statisticalBarRenderer43.getBaseShape();
        statisticalBarRenderer32.setBaseShape(shape49);
        boolean boolean51 = statisticalBarRenderer0.equals((java.lang.Object) shape49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer52.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer52.setDrawBarOutline(false);
        statisticalBarRenderer52.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        double double60 = statisticalBarRenderer52.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke64 = statisticalBarRenderer62.getSeriesOutlineStroke((int) (byte) 10);
        int int65 = statisticalBarRenderer62.getPassCount();
        double double66 = statisticalBarRenderer62.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition68 = statisticalBarRenderer62.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint70 = statisticalBarRenderer62.getSeriesPaint((int) (short) -1);
        boolean boolean71 = statisticalBarRenderer62.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer72 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke74 = statisticalBarRenderer72.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer72.setBaseCreateEntities(true, false);
        java.awt.Font font79 = null;
        statisticalBarRenderer72.setSeriesItemLabelFont((int) '4', font79);
        java.awt.Stroke stroke81 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer72.setBaseStroke(stroke81);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition83 = statisticalBarRenderer72.getBasePositiveItemLabelPosition();
        statisticalBarRenderer62.setPositiveItemLabelPositionFallback(itemLabelPosition83);
        statisticalBarRenderer52.setSeriesNegativeItemLabelPosition((int) (byte) 0, itemLabelPosition83);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition83, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertNotNull(stroke37);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(shape49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNull(stroke64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition68);
        org.junit.Assert.assertNull(paint70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(stroke74);
        org.junit.Assert.assertNotNull(stroke81);
        org.junit.Assert.assertNotNull(itemLabelPosition83);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer9.setDrawBarOutline(false);
        statisticalBarRenderer9.removeAnnotations();
        boolean boolean15 = statisticalBarRenderer9.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        statisticalBarRenderer17.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer17.setSeriesOutlineStroke((int) (byte) 1, stroke25);
        java.awt.Paint paint28 = statisticalBarRenderer17.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer9.setSeriesOutlinePaint((int) (byte) 0, paint28);
        java.awt.Paint paint31 = statisticalBarRenderer9.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer33.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator37, false);
        java.awt.Stroke stroke40 = null;
        statisticalBarRenderer33.setErrorIndicatorStroke(stroke40);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = statisticalBarRenderer33.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer33.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator48 = null;
        statisticalBarRenderer47.setBaseToolTipGenerator(categoryToolTipGenerator48);
        boolean boolean52 = statisticalBarRenderer47.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator53 = null;
        statisticalBarRenderer47.setBaseItemLabelGenerator(categoryItemLabelGenerator53, false);
        statisticalBarRenderer47.setDrawBarOutline(true);
        java.awt.Paint paint59 = statisticalBarRenderer47.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint59, false);
        boolean boolean62 = statisticalBarRenderer0.equals((java.lang.Object) paint59);
        boolean boolean64 = statisticalBarRenderer0.isSeriesVisible(100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertNotNull(itemLabelPosition44);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        boolean boolean10 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) ' ');
        java.awt.Paint paint11 = statisticalBarRenderer0.getBaseFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) 'a', (java.lang.Boolean) false);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Font font13 = statisticalBarRenderer0.getSeriesItemLabelFont(10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(font13);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) 'a', (java.lang.Boolean) false);
        java.awt.Paint paint12 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) 1, paint12, true);
        boolean boolean15 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation18 = null;
        org.jfree.chart.util.Layer layer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation18, layer19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent30 = null;
        statisticalBarRenderer25.notifyListeners(rendererChangeEvent30);
        java.awt.Paint paint34 = statisticalBarRenderer25.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint34);
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot39 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis40 = null;
        org.jfree.chart.axis.ValueAxis valueAxis41 = null;
        org.jfree.data.category.CategoryDataset categoryDataset42 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D36, categoryItemRendererState37, rectangle2D38, categoryPlot39, categoryAxis40, valueAxis41, categoryDataset42, (int) 'a', 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        boolean boolean21 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setItemLabelAnchorOffset(100.0d);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke6 = statisticalBarRenderer4.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer4.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer4.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape12 = statisticalBarRenderer4.getItemShape((int) 'a', (int) (byte) -1);
        java.lang.Boolean boolean14 = statisticalBarRenderer4.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font20 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer4.setBaseItemLabelFont(font20, true);
        statisticalBarRenderer0.setBaseItemLabelFont(font20, true);
        java.awt.Paint paint25 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertNull(itemLabelPosition9);
        org.junit.Assert.assertNotNull(shape12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer27 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        int int39 = statisticalBarRenderer35.getColumnCount();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer35.setErrorIndicatorPaint(paint40);
        statisticalBarRenderer29.setBaseItemLabelPaint(paint40);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation43 = null;
        boolean boolean44 = statisticalBarRenderer29.removeAnnotation(categoryAnnotation43);
        java.awt.Stroke stroke45 = statisticalBarRenderer29.getBaseStroke();
        java.awt.Paint paint48 = statisticalBarRenderer29.getItemLabelPaint(0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke52 = statisticalBarRenderer50.getSeriesOutlineStroke((int) (byte) 10);
        int int53 = statisticalBarRenderer50.getPassCount();
        boolean boolean54 = statisticalBarRenderer50.getBaseSeriesVisibleInLegend();
        java.awt.Stroke stroke56 = statisticalBarRenderer50.lookupSeriesStroke((int) (byte) 1);
        statisticalBarRenderer29.setSeriesStroke((int) (short) 0, stroke56);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke56);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(gradientPaintTransformer27);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertNull(stroke52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(stroke56);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer27 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Paint paint28 = statisticalBarRenderer0.getBasePaint();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 0, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator32);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, true);
        java.awt.Paint paint39 = statisticalBarRenderer0.lookupSeriesPaint(0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(gradientPaintTransformer27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        boolean boolean10 = statisticalBarRenderer0.getIncludeBaseInRange();
        java.awt.Paint paint12 = statisticalBarRenderer0.getSeriesFillPaint(0);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(paint12);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator31, false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 100, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer38.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer38.setDrawBarOutline(false);
        statisticalBarRenderer38.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint45 = statisticalBarRenderer44.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke49 = statisticalBarRenderer47.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer47.setBaseCreateEntities(true, false);
        boolean boolean54 = statisticalBarRenderer47.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator55 = statisticalBarRenderer47.getBaseToolTipGenerator();
        java.awt.Paint paint58 = statisticalBarRenderer47.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape60 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer47.setSeriesShape(1, shape60, false);
        statisticalBarRenderer44.setSeriesShape(1, shape60);
        statisticalBarRenderer38.setBaseShape(shape60);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNull(stroke49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator55);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(shape60);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 1, (java.lang.Boolean) true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (byte) 0, categoryToolTipGenerator12, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(100);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier11 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(drawingSupplier11);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        int int35 = statisticalBarRenderer32.getPassCount();
        boolean boolean36 = statisticalBarRenderer32.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer32.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke42 = statisticalBarRenderer40.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer40.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator47 = null;
        statisticalBarRenderer46.setBaseURLGenerator(categoryURLGenerator47, false);
        int int50 = statisticalBarRenderer46.getColumnCount();
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer46.setErrorIndicatorPaint(paint51);
        statisticalBarRenderer40.setBaseItemLabelPaint(paint51);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke56 = statisticalBarRenderer54.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke58 = statisticalBarRenderer54.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer40.setBaseStroke(stroke58, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer61.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener64 = null;
        boolean boolean65 = statisticalBarRenderer61.hasListener(eventListener64);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke68 = statisticalBarRenderer66.getSeriesOutlineStroke((int) (byte) 10);
        int int69 = statisticalBarRenderer66.getPassCount();
        java.awt.Font font71 = statisticalBarRenderer66.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition72 = statisticalBarRenderer66.getBasePositiveItemLabelPosition();
        statisticalBarRenderer61.setNegativeItemLabelPositionFallback(itemLabelPosition72);
        statisticalBarRenderer40.setPositiveItemLabelPositionFallback(itemLabelPosition72);
        statisticalBarRenderer32.setBaseNegativeItemLabelPosition(itemLabelPosition72);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition72);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator31);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(stroke42);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNull(stroke56);
        org.junit.Assert.assertNotNull(stroke58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(stroke68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNull(font71);
        org.junit.Assert.assertNotNull(itemLabelPosition72);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        double double24 = statisticalBarRenderer20.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator25);
        java.awt.Paint paint28 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setItemLabelAnchorOffset((-1.0d));
        double double33 = statisticalBarRenderer30.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator34 = statisticalBarRenderer30.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = null;
        statisticalBarRenderer35.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator39, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke44 = statisticalBarRenderer42.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer42.setBaseCreateEntities(true, false);
        java.awt.Font font49 = null;
        statisticalBarRenderer42.setSeriesItemLabelFont((int) '4', font49);
        java.awt.Stroke stroke51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer42.setBaseStroke(stroke51);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition53 = statisticalBarRenderer42.getBasePositiveItemLabelPosition();
        statisticalBarRenderer35.setBaseNegativeItemLabelPosition(itemLabelPosition53, false);
        statisticalBarRenderer30.setBaseNegativeItemLabelPosition(itemLabelPosition53, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 100, itemLabelPosition53, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator34);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertNull(stroke44);
        org.junit.Assert.assertNotNull(stroke51);
        org.junit.Assert.assertNotNull(itemLabelPosition53);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 100, (int) (byte) -1);
        java.awt.Paint paint34 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer10.getLegendItemToolTipGenerator();
        statisticalBarRenderer10.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer10.setSeriesOutlineStroke((int) (byte) 1, stroke18);
        statisticalBarRenderer0.setBaseStroke(stroke18);
        java.awt.Stroke stroke22 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator13);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(stroke22);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) '#', (int) (byte) 1);
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = statisticalBarRenderer0.getSeriesToolTipGenerator(0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(categoryToolTipGenerator15);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = statisticalBarRenderer0.getURLGenerator(0, (int) '4');
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D19, categoryPlot20, rectangle2D21, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNull(categoryURLGenerator18);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke8);
        java.awt.Paint paint11 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        statisticalBarRenderer12.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer12.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = statisticalBarRenderer12.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator24);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator24);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        java.awt.Shape shape4 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        boolean boolean5 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        boolean boolean7 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation6);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.junit.Assert.assertNotNull(shape4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.lang.Object obj8 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = statisticalBarRenderer0.getSeriesToolTipGenerator(10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((-1), categoryItemLabelGenerator12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNull(categoryToolTipGenerator10);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = statisticalBarRenderer0.getSeriesToolTipGenerator(100);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator13);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer13.setSeriesPaint(100, paint19);
        statisticalBarRenderer12.setBasePaint(paint19);
        statisticalBarRenderer0.setBasePaint(paint19);
        java.lang.Boolean boolean24 = statisticalBarRenderer0.getSeriesVisible((int) (short) -1);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke24 = statisticalBarRenderer20.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font33 = statisticalBarRenderer28.getBaseItemLabelFont();
        int int34 = statisticalBarRenderer28.getRowCount();
        java.awt.Paint paint35 = statisticalBarRenderer28.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 100, paint35);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) '#', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator41 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Stroke stroke42 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(font33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator41);
        org.junit.Assert.assertNotNull(stroke42);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font27 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer17.setBaseItemLabelFont(font27);
        java.awt.Paint paint30 = statisticalBarRenderer17.lookupSeriesPaint(0);
        statisticalBarRenderer0.setBasePaint(paint30);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesOutlinePaint((int) '#');
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNull(paint33);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape8 = statisticalBarRenderer0.getItemShape((int) 'a', (int) (byte) -1);
        double double9 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (byte) -1, (-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer10.setBaseToolTipGenerator(categoryToolTipGenerator11);
        boolean boolean15 = statisticalBarRenderer10.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        java.awt.Font font23 = statisticalBarRenderer18.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer18.getBasePositiveItemLabelPosition();
        statisticalBarRenderer10.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        java.awt.Paint paint26 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint26, false);
        boolean boolean29 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean31 = statisticalBarRenderer0.isSeriesVisible((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(font23);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        statisticalBarRenderer0.setMaximumBarWidth(100.0d);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator54 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Shape shape55 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryToolTipGenerator54);
        org.junit.Assert.assertNotNull(shape55);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer9 = statisticalBarRenderer0.getGradientPaintTransformer();
        double double10 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNull(gradientPaintTransformer9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseFillPaint(paint9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font16);
        java.awt.Stroke stroke19 = statisticalBarRenderer6.lookupSeriesOutlineStroke((int) (byte) 1);
        java.awt.Font font20 = statisticalBarRenderer6.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 0, font20, false);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer25.setBaseToolTipGenerator(categoryToolTipGenerator26);
        boolean boolean30 = statisticalBarRenderer25.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer31.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = statisticalBarRenderer31.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer40 = statisticalBarRenderer31.getGradientPaintTransformer();
        statisticalBarRenderer25.setGradientPaintTransformer(gradientPaintTransformer40);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer42 = statisticalBarRenderer25.getGradientPaintTransformer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer43.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator49 = null;
        statisticalBarRenderer43.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator49, true);
        statisticalBarRenderer43.removeAnnotations();
        java.awt.Paint paint53 = statisticalBarRenderer43.getErrorIndicatorPaint();
        statisticalBarRenderer25.setBaseItemLabelPaint(paint53);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint53, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNull(categoryItemLabelGenerator39);
        org.junit.Assert.assertNotNull(gradientPaintTransformer40);
        org.junit.Assert.assertNotNull(gradientPaintTransformer42);
        org.junit.Assert.assertNotNull(paint53);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        boolean boolean30 = statisticalBarRenderer0.isSeriesVisible((int) 'a');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.Marker marker9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D6, categoryPlot7, valueAxis8, marker9, rectangle2D10);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        boolean boolean13 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        java.util.EventListener eventListener8 = null;
        boolean boolean9 = statisticalBarRenderer0.hasListener(eventListener8);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        boolean boolean39 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator36);
        org.jfree.chart.LegendItemCollection legendItemCollection38 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(legendItemCollection38);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Paint paint5 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) '4', (java.lang.Boolean) false, true);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(paint5);
        org.junit.Assert.assertNull(categoryPlot10);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator((-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(itemLabelPosition9);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint16 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font27 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer17.setBaseItemLabelFont(font27);
        java.awt.Paint paint30 = statisticalBarRenderer17.lookupSeriesPaint(0);
        statisticalBarRenderer0.setBasePaint(paint30);
        java.awt.Shape shape32 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer34.setDrawBarOutline(false);
        statisticalBarRenderer34.removeAnnotations();
        statisticalBarRenderer34.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer34.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent46 = null;
        statisticalBarRenderer34.notifyListeners(rendererChangeEvent46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        boolean boolean52 = statisticalBarRenderer48.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer48.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer56.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator63 = null;
        statisticalBarRenderer62.setBaseURLGenerator(categoryURLGenerator63, false);
        int int66 = statisticalBarRenderer62.getColumnCount();
        java.awt.Paint paint67 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer62.setErrorIndicatorPaint(paint67);
        statisticalBarRenderer56.setBaseItemLabelPaint(paint67);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer70 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke72 = statisticalBarRenderer70.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke74 = statisticalBarRenderer70.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer56.setBaseStroke(stroke74, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer77 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer77.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener80 = null;
        boolean boolean81 = statisticalBarRenderer77.hasListener(eventListener80);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer82 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke84 = statisticalBarRenderer82.getSeriesOutlineStroke((int) (byte) 10);
        int int85 = statisticalBarRenderer82.getPassCount();
        java.awt.Font font87 = statisticalBarRenderer82.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition88 = statisticalBarRenderer82.getBasePositiveItemLabelPosition();
        statisticalBarRenderer77.setNegativeItemLabelPositionFallback(itemLabelPosition88);
        statisticalBarRenderer56.setPositiveItemLabelPositionFallback(itemLabelPosition88);
        statisticalBarRenderer48.setBaseNegativeItemLabelPosition(itemLabelPosition88);
        statisticalBarRenderer34.setBasePositiveItemLabelPosition(itemLabelPosition88);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 0, itemLabelPosition88);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator94 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(shape32);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(paint67);
        org.junit.Assert.assertNull(stroke72);
        org.junit.Assert.assertNotNull(stroke74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(stroke84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNull(font87);
        org.junit.Assert.assertNotNull(itemLabelPosition88);
        org.junit.Assert.assertNull(categoryToolTipGenerator94);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        double double21 = statisticalBarRenderer17.getUpperClip();
        double double22 = statisticalBarRenderer17.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer24.setBaseFillPaint(paint27);
        statisticalBarRenderer17.setSeriesPaint(1, paint27);
        statisticalBarRenderer12.setBaseFillPaint(paint27, true);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint27);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        java.awt.Paint paint36 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNull(paint36);
        org.junit.Assert.assertNotNull(itemLabelPosition37);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.lang.Object obj6 = statisticalBarRenderer0.clone();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 1, (java.lang.Boolean) false, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Font font12 = statisticalBarRenderer0.getItemLabelFont((int) (short) 100, (int) '#');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 10, categoryItemLabelGenerator14, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(font12);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) '#', (int) (byte) 1);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getItemLabelGenerator((int) (byte) 10, (int) (short) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setBaseStroke(stroke27, false);
        statisticalBarRenderer0.setBaseStroke(stroke27, true);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Paint paint35 = statisticalBarRenderer0.getItemPaint((int) (short) 10, (int) (short) 0);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        boolean boolean38 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font14 = statisticalBarRenderer9.getBaseItemLabelFont();
        int int15 = statisticalBarRenderer9.getRowCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer9.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer18.getLegendItemToolTipGenerator();
        boolean boolean22 = statisticalBarRenderer18.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint25 = statisticalBarRenderer18.getItemOutlinePaint(10, 0);
        statisticalBarRenderer9.setSeriesItemLabelPaint((int) (short) 0, paint25);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) '4', paint25);
        java.awt.Paint paint28 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator30);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(font14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer57 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition59 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 0);
        statisticalBarRenderer0.setMinimumBarLength((double) (-1L));
        statisticalBarRenderer0.setBase((double) 0L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer57);
        org.junit.Assert.assertNotNull(itemLabelPosition59);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator5 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator5, false);
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesOutlinePaint((int) ' ');
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        boolean boolean15 = statisticalBarRenderer11.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer11.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint20);
        statisticalBarRenderer11.setBaseItemLabelPaint(paint20, false);
        statisticalBarRenderer0.setBaseFillPaint(paint20, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        double double31 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categoryPlot16);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) '#');
        boolean boolean12 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) '#', (int) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(categoryURLGenerator15);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        statisticalBarRenderer0.setSeriesVisible((int) '#', (java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        statisticalBarRenderer6.removeAnnotations();
        statisticalBarRenderer6.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer6.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent18 = null;
        statisticalBarRenderer6.notifyListeners(rendererChangeEvent18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        int int23 = statisticalBarRenderer20.getPassCount();
        boolean boolean24 = statisticalBarRenderer20.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer20.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35, false);
        int int38 = statisticalBarRenderer34.getColumnCount();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setErrorIndicatorPaint(paint39);
        statisticalBarRenderer28.setBaseItemLabelPaint(paint39);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke44 = statisticalBarRenderer42.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke46 = statisticalBarRenderer42.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer28.setBaseStroke(stroke46, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer49.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener52 = null;
        boolean boolean53 = statisticalBarRenderer49.hasListener(eventListener52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke56 = statisticalBarRenderer54.getSeriesOutlineStroke((int) (byte) 10);
        int int57 = statisticalBarRenderer54.getPassCount();
        java.awt.Font font59 = statisticalBarRenderer54.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition60 = statisticalBarRenderer54.getBasePositiveItemLabelPosition();
        statisticalBarRenderer49.setNegativeItemLabelPositionFallback(itemLabelPosition60);
        statisticalBarRenderer28.setPositiveItemLabelPositionFallback(itemLabelPosition60);
        statisticalBarRenderer20.setBaseNegativeItemLabelPosition(itemLabelPosition60);
        statisticalBarRenderer6.setBasePositiveItemLabelPosition(itemLabelPosition60);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition60, false);
        java.lang.Boolean boolean68 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) '#');
        java.awt.Stroke stroke69 = statisticalBarRenderer0.getBaseStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(stroke44);
        org.junit.Assert.assertNotNull(stroke46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(stroke56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNull(font59);
        org.junit.Assert.assertNotNull(itemLabelPosition60);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(stroke69);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation8 = null;
        org.jfree.chart.util.Layer layer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation8, layer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((-1), (int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer11 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer11);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer0.getItemLabelGenerator((-1), (int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) '#', categoryURLGenerator17, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = statisticalBarRenderer21.getBaseFillPaint();
        java.awt.Paint paint29 = statisticalBarRenderer21.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke48 = statisticalBarRenderer44.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer30.setBaseStroke(stroke48, false);
        statisticalBarRenderer21.setBaseStroke(stroke48, true);
        java.awt.Shape shape55 = statisticalBarRenderer21.getItemShape(10, 10);
        statisticalBarRenderer0.setSeriesShape((int) (byte) 0, shape55, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertNotNull(shape55);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        boolean boolean8 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer15.setDrawBarOutline(false);
        statisticalBarRenderer15.removeAnnotations();
        statisticalBarRenderer15.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer15.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font34 = statisticalBarRenderer29.getBaseItemLabelFont();
        int int35 = statisticalBarRenderer29.getRowCount();
        double double36 = statisticalBarRenderer29.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener40 = null;
        boolean boolean41 = statisticalBarRenderer37.hasListener(eventListener40);
        java.awt.Paint paint44 = statisticalBarRenderer37.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer29.setBaseOutlinePaint(paint44, true);
        statisticalBarRenderer27.setSeriesOutlinePaint(10, paint44);
        statisticalBarRenderer15.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer0.setBasePaint(paint44, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator53 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 100, (int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertNull(categoryItemLabelGenerator53);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        java.awt.Paint paint11 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint11);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible(1);
        double double11 = statisticalBarRenderer0.getItemMargin();
        java.awt.Paint paint13 = null;
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 0, paint13);
        statisticalBarRenderer0.setSeriesCreateEntities(0, (java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.2d + "'", double11 == 0.2d);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBase((double) 1L);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        java.util.EventListener eventListener12 = null;
        boolean boolean13 = statisticalBarRenderer0.hasListener(eventListener12);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryURLGenerator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke7);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator18, true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        double double23 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 100, (java.lang.Boolean) false);
        java.awt.Shape shape12 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNotNull(shape12);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setAutoPopulateSeriesOutlinePaint(false);
        int int8 = statisticalBarRenderer3.getRowCount();
        java.awt.Shape shape9 = statisticalBarRenderer3.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape9);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Paint paint19 = null;
        statisticalBarRenderer12.setSeriesOutlinePaint((int) '4', paint19);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = statisticalBarRenderer12.getBaseToolTipGenerator();
        statisticalBarRenderer12.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer12.setSeriesStroke((int) (byte) 0, stroke29);
        statisticalBarRenderer12.setItemLabelAnchorOffset((double) '#');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer12.getNegativeItemLabelPosition(10, 1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition35, true);
        java.awt.Paint paint40 = statisticalBarRenderer0.getItemLabelPaint((int) '4', (int) ' ');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator41 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator41);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(categoryToolTipGenerator21);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setMinimumBarLength((double) 100.0f);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseCreateEntities(true, false);
        java.awt.Font font23 = null;
        statisticalBarRenderer16.setSeriesItemLabelFont((int) '4', font23);
        java.awt.Stroke stroke25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer16.setBaseStroke(stroke25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer16.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer16.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer30.getLegendItemToolTipGenerator();
        statisticalBarRenderer30.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double37 = statisticalBarRenderer30.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke40 = statisticalBarRenderer38.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer38.setBaseCreateEntities(true, false);
        boolean boolean45 = statisticalBarRenderer38.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape47 = statisticalBarRenderer38.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean49 = statisticalBarRenderer38.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        statisticalBarRenderer50.setBaseURLGenerator(categoryURLGenerator51, false);
        int int54 = statisticalBarRenderer50.getColumnCount();
        java.awt.Paint paint55 = statisticalBarRenderer50.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem58 = statisticalBarRenderer50.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition60 = statisticalBarRenderer50.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator61 = statisticalBarRenderer50.getLegendItemLabelGenerator();
        statisticalBarRenderer38.setLegendItemURLGenerator(categorySeriesLabelGenerator61);
        statisticalBarRenderer30.setLegendItemToolTipGenerator(categorySeriesLabelGenerator61);
        statisticalBarRenderer16.setLegendItemURLGenerator(categorySeriesLabelGenerator61);
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator61);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator33);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shape47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNull(legendItem58);
        org.junit.Assert.assertNotNull(itemLabelPosition60);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator61);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer7.hasListener(eventListener13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer7.getNegativeItemLabelPosition((-1), 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 0, itemLabelPosition17);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator22, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = statisticalBarRenderer0.getURLGenerator((int) (short) 100, (int) ' ');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator29, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(categoryURLGenerator27);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemLabelPaint(1, 0);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(itemLabelPosition26);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint37 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 0, categoryURLGenerator39, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertNotNull(paint37);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.LegendItemCollection legendItemCollection11 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
        org.junit.Assert.assertNotNull(legendItemCollection11);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        boolean boolean10 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        boolean boolean13 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Shape shape15 = statisticalBarRenderer0.getSeriesShape((int) (byte) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation16, layer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(shape15);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        java.awt.Graphics2D graphics2D61 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot62 = null;
        java.awt.geom.Rectangle2D rectangle2D63 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D61, categoryPlot62, rectangle2D63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font16 = statisticalBarRenderer11.getBaseItemLabelFont();
        int int17 = statisticalBarRenderer11.getRowCount();
        double double18 = statisticalBarRenderer11.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer11.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        java.awt.Paint paint22 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (short) 10, paint22);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        int int12 = statisticalBarRenderer9.getPassCount();
        boolean boolean13 = statisticalBarRenderer9.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer9.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint18, false);
        java.awt.Shape shape23 = statisticalBarRenderer9.lookupSeriesShape((int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape(1, shape23);
        java.awt.Paint paint26 = statisticalBarRenderer0.getSeriesItemLabelPaint(1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNull(paint26);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        org.jfree.chart.LegendItem legendItem16 = statisticalBarRenderer0.getLegendItem((int) (short) 10, 10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNull(legendItem16);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        boolean boolean17 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (short) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer32.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer32.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator41 = null;
        statisticalBarRenderer37.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator41, false);
        boolean boolean44 = statisticalBarRenderer32.equals((java.lang.Object) categoryItemLabelGenerator41);
        statisticalBarRenderer32.removeAnnotations();
        java.awt.Paint paint46 = statisticalBarRenderer32.getBaseItemLabelPaint();
        double double47 = statisticalBarRenderer32.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer32.getSeriesNegativeItemLabelPosition(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator51 = null;
        statisticalBarRenderer50.setBaseToolTipGenerator(categoryToolTipGenerator51);
        boolean boolean55 = statisticalBarRenderer50.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator56 = statisticalBarRenderer50.getBaseURLGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer50.getBasePositiveItemLabelPosition();
        statisticalBarRenderer32.setBasePositiveItemLabelPosition(itemLabelPosition57);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition57);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator31);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(categoryURLGenerator56);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        statisticalBarRenderer0.setMinimumBarLength((double) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer23.setBaseFillPaint(paint26);
        boolean boolean28 = statisticalBarRenderer23.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke29 = statisticalBarRenderer23.getBaseStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = null;
        statisticalBarRenderer30.setBaseURLGenerator(categoryURLGenerator31, false);
        int int34 = statisticalBarRenderer30.getColumnCount();
        int int35 = statisticalBarRenderer30.getColumnCount();
        java.awt.Paint paint36 = statisticalBarRenderer30.getErrorIndicatorPaint();
        statisticalBarRenderer23.setBaseOutlinePaint(paint36, true);
        statisticalBarRenderer0.setBaseFillPaint(paint36, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke43 = statisticalBarRenderer41.getSeriesOutlineStroke((int) (byte) 10);
        int int44 = statisticalBarRenderer41.getPassCount();
        double double45 = statisticalBarRenderer41.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer41.getSeriesPositiveItemLabelPosition(1);
        java.awt.Shape shape49 = statisticalBarRenderer41.lookupSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBaseShape(shape49, false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNull(stroke43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertNotNull(shape49);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        int int16 = statisticalBarRenderer13.getPassCount();
        double double17 = statisticalBarRenderer13.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer13.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint21 = statisticalBarRenderer13.getSeriesPaint((int) (short) -1);
        boolean boolean22 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer23.setDrawBarOutline(false);
        statisticalBarRenderer23.removeAnnotations();
        statisticalBarRenderer23.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer23.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent35 = null;
        statisticalBarRenderer23.notifyListeners(rendererChangeEvent35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        int int40 = statisticalBarRenderer37.getPassCount();
        boolean boolean41 = statisticalBarRenderer37.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer37.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke47 = statisticalBarRenderer45.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer45.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer51.setBaseURLGenerator(categoryURLGenerator52, false);
        int int55 = statisticalBarRenderer51.getColumnCount();
        java.awt.Paint paint56 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer51.setErrorIndicatorPaint(paint56);
        statisticalBarRenderer45.setBaseItemLabelPaint(paint56);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer59 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke61 = statisticalBarRenderer59.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke63 = statisticalBarRenderer59.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer45.setBaseStroke(stroke63, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer66.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener69 = null;
        boolean boolean70 = statisticalBarRenderer66.hasListener(eventListener69);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer71 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke73 = statisticalBarRenderer71.getSeriesOutlineStroke((int) (byte) 10);
        int int74 = statisticalBarRenderer71.getPassCount();
        java.awt.Font font76 = statisticalBarRenderer71.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition77 = statisticalBarRenderer71.getBasePositiveItemLabelPosition();
        statisticalBarRenderer66.setNegativeItemLabelPositionFallback(itemLabelPosition77);
        statisticalBarRenderer45.setPositiveItemLabelPositionFallback(itemLabelPosition77);
        statisticalBarRenderer37.setBaseNegativeItemLabelPosition(itemLabelPosition77);
        statisticalBarRenderer23.setBasePositiveItemLabelPosition(itemLabelPosition77);
        statisticalBarRenderer13.setBaseNegativeItemLabelPosition(itemLabelPosition77, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition77);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(stroke47);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNull(stroke61);
        org.junit.Assert.assertNotNull(stroke63);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(stroke73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNull(font76);
        org.junit.Assert.assertNotNull(itemLabelPosition77);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 1);
        java.awt.Paint paint12 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        double double18 = statisticalBarRenderer15.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer15.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke21 = statisticalBarRenderer15.lookupSeriesStroke((int) 'a');
        java.awt.Paint paint22 = statisticalBarRenderer15.getBaseFillPaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer15.getSeriesNegativeItemLabelPosition((int) (byte) 1);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) -1);
        java.awt.Shape shape17 = statisticalBarRenderer0.getSeriesShape((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer18.setDrawBarOutline(false);
        java.lang.Boolean boolean24 = statisticalBarRenderer18.getSeriesVisibleInLegend((int) ' ');
        double double25 = statisticalBarRenderer18.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer26.setBaseURLGenerator(categoryURLGenerator27, false);
        int int30 = statisticalBarRenderer26.getColumnCount();
        java.awt.Paint paint31 = statisticalBarRenderer26.getBaseFillPaint();
        statisticalBarRenderer18.setBaseItemLabelPaint(paint31, true);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint31);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(shape17);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getItemStroke((int) (short) -1, (int) (short) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getToolTipGenerator((int) ' ', (int) (byte) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        boolean boolean7 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        statisticalBarRenderer13.removeAnnotations();
        boolean boolean19 = statisticalBarRenderer13.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer13.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer13.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer13.setBaseItemLabelGenerator(categoryItemLabelGenerator24, false);
        java.lang.Boolean boolean28 = statisticalBarRenderer13.getSeriesCreateEntities((int) (byte) -1);
        statisticalBarRenderer13.setBaseSeriesVisible(true);
        java.lang.Boolean boolean32 = statisticalBarRenderer13.getSeriesVisibleInLegend((int) '4');
        java.awt.Shape shape34 = statisticalBarRenderer13.lookupSeriesShape((int) (short) -1);
        statisticalBarRenderer0.setBaseShape(shape34, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(shape34);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, true);
        org.jfree.chart.LegendItemCollection legendItemCollection10 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(legendItemCollection10);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        statisticalBarRenderer0.setMaximumBarWidth(100.0d);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator56 = statisticalBarRenderer0.getToolTipGenerator(0, 100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator57 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator57, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryToolTipGenerator56);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent5 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent5);
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        boolean boolean17 = statisticalBarRenderer10.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer10.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator19);
        double double21 = statisticalBarRenderer10.getLowerClip();
        java.awt.Shape shape24 = statisticalBarRenderer10.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer25 = statisticalBarRenderer10.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer25);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNotNull(gradientPaintTransformer25);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 0, (java.lang.Boolean) false, false);
        java.awt.Paint paint19 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '#', paint19, false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator58 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator58, true);
        java.awt.Paint paint61 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint63 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertNull(paint63);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean8 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) -1);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        int int13 = statisticalBarRenderer8.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener17 = null;
        boolean boolean18 = statisticalBarRenderer14.hasListener(eventListener17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        java.awt.Font font24 = statisticalBarRenderer19.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getBasePositiveItemLabelPosition();
        statisticalBarRenderer14.setNegativeItemLabelPositionFallback(itemLabelPosition25);
        statisticalBarRenderer8.setBaseNegativeItemLabelPosition(itemLabelPosition25, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer29.setDrawBarOutline(false);
        statisticalBarRenderer29.removeAnnotations();
        boolean boolean35 = statisticalBarRenderer29.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator40 = statisticalBarRenderer37.getLegendItemToolTipGenerator();
        statisticalBarRenderer37.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer37.setSeriesOutlineStroke((int) (byte) 1, stroke45);
        java.awt.Paint paint48 = statisticalBarRenderer37.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer29.setSeriesOutlinePaint((int) (byte) 0, paint48);
        statisticalBarRenderer8.setBaseFillPaint(paint48);
        statisticalBarRenderer0.setBaseOutlinePaint(paint48, false);
        boolean boolean54 = statisticalBarRenderer0.isSeriesVisible((int) (short) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(font24);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator40);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        boolean boolean29 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = null;
        statisticalBarRenderer31.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator35, false);
        java.awt.Stroke stroke38 = null;
        statisticalBarRenderer31.setErrorIndicatorStroke(stroke38);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer31.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer31.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator46 = null;
        statisticalBarRenderer45.setBaseToolTipGenerator(categoryToolTipGenerator46);
        boolean boolean50 = statisticalBarRenderer45.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator51 = null;
        statisticalBarRenderer45.setBaseItemLabelGenerator(categoryItemLabelGenerator51, false);
        statisticalBarRenderer45.setDrawBarOutline(true);
        java.awt.Paint paint57 = statisticalBarRenderer45.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer31.setBaseItemLabelPaint(paint57, false);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint57, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) -1, (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(paint57);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator27 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator27, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator30);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14, false);
        int int17 = statisticalBarRenderer13.getColumnCount();
        int int18 = statisticalBarRenderer13.getColumnCount();
        java.util.EventListener eventListener19 = null;
        boolean boolean20 = statisticalBarRenderer13.hasListener(eventListener19);
        boolean boolean21 = statisticalBarRenderer13.getAutoPopulateSeriesOutlineStroke();
        java.awt.Shape shape23 = statisticalBarRenderer13.lookupSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer24.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer24.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator30, true);
        statisticalBarRenderer24.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator35 = null;
        statisticalBarRenderer34.setBaseToolTipGenerator(categoryToolTipGenerator35);
        boolean boolean39 = statisticalBarRenderer34.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = null;
        statisticalBarRenderer34.setBaseItemLabelGenerator(categoryItemLabelGenerator40);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke44 = statisticalBarRenderer42.getSeriesOutlineStroke((int) (byte) 10);
        int int45 = statisticalBarRenderer42.getPassCount();
        java.awt.Font font47 = statisticalBarRenderer42.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer42.getBasePositiveItemLabelPosition();
        statisticalBarRenderer34.setNegativeItemLabelPositionFallback(itemLabelPosition48);
        java.awt.Paint paint50 = statisticalBarRenderer34.getBaseItemLabelPaint();
        statisticalBarRenderer24.setBasePaint(paint50, false);
        statisticalBarRenderer13.setBasePaint(paint50);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint50);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(stroke44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNull(font47);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
        org.junit.Assert.assertNotNull(paint50);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesVisible((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer29.setBaseToolTipGenerator(categoryToolTipGenerator30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setAutoPopulateSeriesOutlinePaint(false);
        int int37 = statisticalBarRenderer32.getRowCount();
        java.awt.Shape shape38 = statisticalBarRenderer32.getBaseShape();
        statisticalBarRenderer29.setBaseShape(shape38);
        statisticalBarRenderer0.setBaseShape(shape38);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator42 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 100, categoryToolTipGenerator42, false);
        boolean boolean45 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint48 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 10, (int) ' ');
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(paint48);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        org.jfree.chart.LegendItem legendItem10 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) '#');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator16);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNull(legendItem10);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setMinimumBarLength((double) 1L);
        double double27 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setBase(2.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getToolTipGenerator(0, (int) (short) 10);
        java.awt.Font font18 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator19);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
        org.junit.Assert.assertNotNull(font18);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        java.awt.Font font10 = statisticalBarRenderer5.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer13.setBaseToolTipGenerator(categoryToolTipGenerator14);
        boolean boolean18 = statisticalBarRenderer13.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = statisticalBarRenderer19.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer28 = statisticalBarRenderer19.getGradientPaintTransformer();
        statisticalBarRenderer13.setGradientPaintTransformer(gradientPaintTransformer28);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator30 = statisticalBarRenderer13.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator30);
        java.awt.Paint paint34 = statisticalBarRenderer0.getItemOutlinePaint((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator35 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator35);
        java.awt.Paint paint38 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(font10);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertNull(categoryItemLabelGenerator27);
        org.junit.Assert.assertNotNull(gradientPaintTransformer28);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator30);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(paint38);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation8 = null;
        boolean boolean9 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation8);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        java.awt.Stroke stroke15 = statisticalBarRenderer0.getItemStroke(0, (int) '#');
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer16.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer11.setBasePositiveItemLabelPosition(itemLabelPosition22, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) 'a', itemLabelPosition22);
        java.awt.Paint paint27 = statisticalBarRenderer0.lookupSeriesPaint((int) ' ');
        java.awt.Shape shape28 = statisticalBarRenderer0.getBaseShape();
        boolean boolean29 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener24 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = statisticalBarRenderer0.getItemLabelGenerator(1, (int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        java.awt.Shape shape26 = null;
        statisticalBarRenderer0.setSeriesShape((int) '4', shape26, true);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent29 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent29);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator20);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator12, false);
        int int15 = statisticalBarRenderer11.getColumnCount();
        java.awt.Paint paint16 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint16, false);
        java.awt.Paint paint19 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = statisticalBarRenderer0.getURLGenerator(100, (int) ' ');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(categoryURLGenerator22);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        statisticalBarRenderer0.setBaseSeriesVisible(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator17, true);
        boolean boolean21 = statisticalBarRenderer0.isSeriesVisible((-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        double double10 = statisticalBarRenderer0.getMaximumBarWidth();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) '4', false);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer0.hasListener(eventListener18);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        java.awt.Stroke stroke57 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier58 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(stroke57);
        org.junit.Assert.assertNull(drawingSupplier58);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        java.lang.Object obj14 = statisticalBarRenderer0.clone();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation16 = null;
        org.jfree.chart.util.Layer layer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation16, layer17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        boolean boolean9 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) ' ');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 1, (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer21.hasListener(eventListener24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        java.awt.Font font31 = statisticalBarRenderer26.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer26.getBasePositiveItemLabelPosition();
        statisticalBarRenderer21.setNegativeItemLabelPositionFallback(itemLabelPosition32);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean37 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke41 = statisticalBarRenderer39.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer39.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator46 = null;
        statisticalBarRenderer45.setBaseURLGenerator(categoryURLGenerator46, false);
        int int49 = statisticalBarRenderer45.getColumnCount();
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer45.setErrorIndicatorPaint(paint50);
        statisticalBarRenderer39.setBaseItemLabelPaint(paint50);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition53 = statisticalBarRenderer39.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator55 = statisticalBarRenderer39.getSeriesItemLabelGenerator((int) '4');
        boolean boolean56 = statisticalBarRenderer39.getIncludeBaseInRange();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator58 = null;
        statisticalBarRenderer39.setSeriesURLGenerator((int) (short) 0, categoryURLGenerator58, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer61.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint64 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer61.setBaseFillPaint(paint64);
        boolean boolean66 = statisticalBarRenderer61.getAutoPopulateSeriesStroke();
        java.awt.Paint paint68 = statisticalBarRenderer61.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint69 = statisticalBarRenderer61.getBaseItemLabelPaint();
        statisticalBarRenderer39.setBaseItemLabelPaint(paint69, false);
        statisticalBarRenderer0.setSeriesPaint(100, paint69, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(font31);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(stroke41);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNull(itemLabelPosition53);
        org.junit.Assert.assertNull(categoryItemLabelGenerator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(paint64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(paint68);
        org.junit.Assert.assertNotNull(paint69);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        boolean boolean11 = statisticalBarRenderer0.isSeriesVisible(0);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemPaint(0, (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font11 = statisticalBarRenderer6.getBaseItemLabelFont();
        int int12 = statisticalBarRenderer6.getRowCount();
        double double13 = statisticalBarRenderer6.getBase();
        java.awt.Stroke stroke16 = statisticalBarRenderer6.getItemStroke((int) (byte) 0, (int) (byte) 10);
        statisticalBarRenderer0.setBaseStroke(stroke16, true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        boolean boolean21 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator23 = null;
        statisticalBarRenderer22.setBaseToolTipGenerator(categoryToolTipGenerator23);
        boolean boolean27 = statisticalBarRenderer22.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = statisticalBarRenderer22.getBaseURLGenerator();
        java.awt.Stroke stroke30 = statisticalBarRenderer22.getSeriesStroke((int) (short) 0);
        boolean boolean32 = statisticalBarRenderer22.isSeriesItemLabelsVisible(1);
        double double33 = statisticalBarRenderer22.getItemMargin();
        java.awt.Stroke stroke36 = statisticalBarRenderer22.getItemStroke((int) (byte) 1, (-1));
        statisticalBarRenderer0.setBaseStroke(stroke36);
        java.awt.Paint paint38 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNotNull(font11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(categoryURLGenerator28);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2d + "'", double33 == 0.2d);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNotNull(paint38);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        boolean boolean15 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation14);
        java.awt.Font font16 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesVisibleInLegend((-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 1, categoryURLGenerator20, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        java.awt.Shape shape57 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator59);
        statisticalBarRenderer0.setItemMargin((double) 1);
        java.awt.Graphics2D graphics2D63 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot64 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis65 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker66 = null;
        java.awt.geom.Rectangle2D rectangle2D67 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D63, categoryPlot64, categoryAxis65, categoryMarker66, rectangle2D67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertNotNull(shape57);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        int int16 = statisticalBarRenderer11.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener20 = null;
        boolean boolean21 = statisticalBarRenderer17.hasListener(eventListener20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        int int25 = statisticalBarRenderer22.getPassCount();
        java.awt.Font font27 = statisticalBarRenderer22.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getBasePositiveItemLabelPosition();
        statisticalBarRenderer17.setNegativeItemLabelPositionFallback(itemLabelPosition28);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition28, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) -1, itemLabelPosition28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(font27);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false);
        boolean boolean10 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBase((double) 1);
        java.awt.Shape shape10 = statisticalBarRenderer0.lookupSeriesShape((int) '4');
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.Marker marker14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D11, categoryPlot12, valueAxis13, marker14, rectangle2D15);
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D17, categoryPlot18, rectangle2D19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        int int10 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemFillPaint(1, (-1));
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        int int12 = statisticalBarRenderer7.getRowCount();
        java.awt.Shape shape13 = statisticalBarRenderer7.getBaseShape();
        java.awt.Font font16 = statisticalBarRenderer7.getItemLabelFont((int) (short) 10, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) 'a', (-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 0, categoryItemLabelGenerator24, true);
        boolean boolean29 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 100, (int) (short) 100);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier30 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(drawingSupplier30);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Paint paint3 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Stroke stroke4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke4);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getItemStroke((int) ' ', (int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer57 = statisticalBarRenderer0.getGradientPaintTransformer();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) 'a', (java.lang.Boolean) false, true);
        java.awt.Paint paint64 = statisticalBarRenderer0.getItemPaint((int) (short) -1, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer57);
        org.junit.Assert.assertNotNull(paint64);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer21.hasListener(eventListener24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        java.awt.Font font31 = statisticalBarRenderer26.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer26.getBasePositiveItemLabelPosition();
        statisticalBarRenderer21.setNegativeItemLabelPositionFallback(itemLabelPosition32);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        boolean boolean35 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        double double36 = statisticalBarRenderer0.getItemMargin();
        java.awt.Paint paint38 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint(1, paint38);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(font31);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.2d + "'", double36 == 0.2d);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        java.awt.Font font6 = statisticalBarRenderer0.getSeriesItemLabelFont((-1));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(font6);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer8.hasListener(eventListener11);
        java.awt.Paint paint15 = statisticalBarRenderer8.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke22 = statisticalBarRenderer18.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font28 = statisticalBarRenderer23.getBaseItemLabelFont();
        statisticalBarRenderer18.setBaseItemLabelFont(font28);
        statisticalBarRenderer0.setBaseItemLabelFont(font28, false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 0, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(font28);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setBasePaint(paint7, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(itemLabelPosition10);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer25.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer25.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator33 = statisticalBarRenderer25.getSeriesURLGenerator(1);
        double double34 = statisticalBarRenderer25.getBase();
        boolean boolean35 = statisticalBarRenderer25.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer37.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator43 = null;
        statisticalBarRenderer37.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator43, true);
        statisticalBarRenderer37.removeAnnotations();
        statisticalBarRenderer37.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke52 = statisticalBarRenderer50.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer50.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font55 = statisticalBarRenderer50.getBaseItemLabelFont();
        statisticalBarRenderer37.setSeriesItemLabelFont(0, font55, true);
        statisticalBarRenderer25.setSeriesItemLabelFont(0, font55);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 100, font55, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertNull(categoryURLGenerator33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(stroke52);
        org.junit.Assert.assertNotNull(font55);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        boolean boolean39 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.LegendItemCollection legendItemCollection40 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(legendItemCollection40);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        int int17 = statisticalBarRenderer0.getRowCount();
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 100);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation20 = null;
        boolean boolean21 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation20);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Font font19 = null;
        statisticalBarRenderer12.setSeriesItemLabelFont((int) '4', font19);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke21);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer12.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer27.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer33.setBaseURLGenerator(categoryURLGenerator34, false);
        int int37 = statisticalBarRenderer33.getColumnCount();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setErrorIndicatorPaint(paint38);
        statisticalBarRenderer27.setBaseItemLabelPaint(paint38);
        statisticalBarRenderer12.setSeriesFillPaint((int) (byte) 10, paint38, true);
        statisticalBarRenderer0.setBaseOutlinePaint(paint38);
        java.awt.Shape shape44 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(shape44);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 100);
        java.awt.Paint paint15 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(paint13);
        org.junit.Assert.assertNull(paint15);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Paint paint14 = null;
        statisticalBarRenderer0.setSeriesFillPaint((int) 'a', paint14, true);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer23.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer32 = statisticalBarRenderer23.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer35.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener41 = null;
        boolean boolean42 = statisticalBarRenderer35.hasListener(eventListener41);
        java.awt.Shape shape45 = statisticalBarRenderer35.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape(100, shape45, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer48.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer48.setBaseFillPaint(paint51);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer53 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke55 = statisticalBarRenderer53.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer53.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font58 = statisticalBarRenderer53.getBaseItemLabelFont();
        statisticalBarRenderer48.setBaseItemLabelFont(font58);
        statisticalBarRenderer0.setBaseItemLabelFont(font58);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertNotNull(gradientPaintTransformer32);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shape45);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNull(stroke55);
        org.junit.Assert.assertNotNull(font58);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) '#');
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape(0, 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15, false);
        int int18 = statisticalBarRenderer14.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer14.setBasePositiveItemLabelPosition(itemLabelPosition25, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer29.setBaseFillPaint(paint32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke36 = statisticalBarRenderer34.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer34.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font39 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer29.setBaseItemLabelFont(font39);
        statisticalBarRenderer14.setSeriesItemLabelFont((int) '#', font39, false);
        statisticalBarRenderer14.setBaseSeriesVisible(false);
        java.awt.Stroke stroke47 = statisticalBarRenderer14.getItemOutlineStroke((int) (short) -1, 0);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke47, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(stroke36);
        org.junit.Assert.assertNotNull(font39);
        org.junit.Assert.assertNotNull(stroke47);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) 1);
        java.awt.Paint paint12 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator13);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke18 = statisticalBarRenderer16.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        java.awt.Paint paint25 = statisticalBarRenderer20.getBaseFillPaint();
        java.awt.Paint paint28 = statisticalBarRenderer20.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator36 = null;
        statisticalBarRenderer35.setBaseURLGenerator(categoryURLGenerator36, false);
        int int39 = statisticalBarRenderer35.getColumnCount();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer35.setErrorIndicatorPaint(paint40);
        statisticalBarRenderer29.setBaseItemLabelPaint(paint40);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke45 = statisticalBarRenderer43.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke47 = statisticalBarRenderer43.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer29.setBaseStroke(stroke47, false);
        statisticalBarRenderer20.setBaseStroke(stroke47, true);
        statisticalBarRenderer16.setSeriesOutlineStroke((int) (short) 10, stroke47);
        java.awt.Paint paint54 = statisticalBarRenderer16.getSeriesOutlinePaint((int) (byte) 100);
        java.awt.Paint paint57 = statisticalBarRenderer16.getItemPaint((int) (short) 1, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) -1, paint57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNull(stroke45);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(paint54);
        org.junit.Assert.assertNotNull(paint57);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        java.awt.Stroke stroke14 = statisticalBarRenderer0.lookupSeriesOutlineStroke((-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator((int) 'a');
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent21 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent21);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer6.hasListener(eventListener9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        java.awt.Font font16 = statisticalBarRenderer11.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getBasePositiveItemLabelPosition();
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition17);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition17, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke27 = statisticalBarRenderer25.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke29 = statisticalBarRenderer25.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent30 = null;
        statisticalBarRenderer25.notifyListeners(rendererChangeEvent30);
        java.awt.Paint paint34 = statisticalBarRenderer25.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint34);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator37 = null;
        statisticalBarRenderer36.setBaseToolTipGenerator(categoryToolTipGenerator37);
        boolean boolean41 = statisticalBarRenderer36.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer36.setBaseItemLabelGenerator(categoryItemLabelGenerator42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        int int47 = statisticalBarRenderer44.getPassCount();
        java.awt.Font font49 = statisticalBarRenderer44.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer44.getBasePositiveItemLabelPosition();
        statisticalBarRenderer36.setNegativeItemLabelPositionFallback(itemLabelPosition50);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition50);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(font16);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNull(font49);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        boolean boolean7 = statisticalBarRenderer0.isItemLabelVisible((int) '4', (int) (byte) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator18);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean14 = statisticalBarRenderer0.getItemCreateEntity(100, (int) '4');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator15);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 100);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getSeriesStroke((int) (short) 0);
        java.awt.Paint paint34 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer21.hasListener(eventListener24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke28 = statisticalBarRenderer26.getSeriesOutlineStroke((int) (byte) 10);
        int int29 = statisticalBarRenderer26.getPassCount();
        java.awt.Font font31 = statisticalBarRenderer26.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer26.getBasePositiveItemLabelPosition();
        statisticalBarRenderer21.setNegativeItemLabelPositionFallback(itemLabelPosition32);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition32);
        statisticalBarRenderer0.setSeriesVisible((int) '4', (java.lang.Boolean) true, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(stroke28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(font31);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        java.awt.Stroke stroke21 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator23, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNull(categoryToolTipGenerator22);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        double double15 = statisticalBarRenderer12.getBase();
        java.awt.Paint paint16 = statisticalBarRenderer12.getErrorIndicatorPaint();
        java.awt.Stroke stroke19 = statisticalBarRenderer12.getItemStroke((int) (short) -1, (int) (byte) 1);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke19, true);
        java.awt.Shape shape24 = statisticalBarRenderer0.getItemShape((int) (short) 100, 1);
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(stroke19);
        org.junit.Assert.assertNotNull(shape24);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer8.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator30 = null;
        statisticalBarRenderer29.setBaseURLGenerator(categoryURLGenerator30, false);
        int int33 = statisticalBarRenderer29.getColumnCount();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setErrorIndicatorPaint(paint34);
        statisticalBarRenderer23.setBaseItemLabelPaint(paint34);
        statisticalBarRenderer8.setSeriesFillPaint((int) (byte) 10, paint34, true);
        statisticalBarRenderer8.setBaseSeriesVisibleInLegend(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer42.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer42.setBaseFillPaint(paint45);
        boolean boolean47 = statisticalBarRenderer42.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke48 = statisticalBarRenderer42.getBaseStroke();
        statisticalBarRenderer8.setErrorIndicatorStroke(stroke48);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke48, true);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(stroke48);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer23.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        statisticalBarRenderer23.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer23.setSeriesFillPaint((int) (byte) 1, paint34);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint34, false);
        boolean boolean39 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Paint paint40 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener41 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent4 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer6.setBaseToolTipGenerator(categoryToolTipGenerator7);
        boolean boolean11 = statisticalBarRenderer6.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = statisticalBarRenderer12.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer21 = statisticalBarRenderer12.getGradientPaintTransformer();
        statisticalBarRenderer6.setGradientPaintTransformer(gradientPaintTransformer21);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer6.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator23);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator25, true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator20);
        org.junit.Assert.assertNotNull(gradientPaintTransformer21);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator23);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.lang.Object obj8 = statisticalBarRenderer0.clone();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = statisticalBarRenderer0.getSeriesToolTipGenerator(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = statisticalBarRenderer12.getLegendItemToolTipGenerator();
        statisticalBarRenderer12.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer20.setBaseFillPaint(paint23);
        statisticalBarRenderer12.setSeriesFillPaint((int) (byte) 1, paint23);
        statisticalBarRenderer0.setSeriesItemLabelPaint(100, paint23, true);
        boolean boolean30 = statisticalBarRenderer0.getItemVisible((int) (short) 0, (int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke34 = statisticalBarRenderer32.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer32.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer38.setBaseURLGenerator(categoryURLGenerator39, false);
        int int42 = statisticalBarRenderer38.getColumnCount();
        java.awt.Paint paint43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer38.setErrorIndicatorPaint(paint43);
        statisticalBarRenderer32.setBaseItemLabelPaint(paint43);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke50 = statisticalBarRenderer46.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer32.setBaseStroke(stroke50, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer53 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer53.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener56 = null;
        boolean boolean57 = statisticalBarRenderer53.hasListener(eventListener56);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer58 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke60 = statisticalBarRenderer58.getSeriesOutlineStroke((int) (byte) 10);
        int int61 = statisticalBarRenderer58.getPassCount();
        java.awt.Font font63 = statisticalBarRenderer58.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = statisticalBarRenderer58.getBasePositiveItemLabelPosition();
        statisticalBarRenderer53.setNegativeItemLabelPositionFallback(itemLabelPosition64);
        statisticalBarRenderer32.setPositiveItemLabelPositionFallback(itemLabelPosition64);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(10, itemLabelPosition64);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertNull(categoryToolTipGenerator10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator15);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(stroke34);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(stroke60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNull(font63);
        org.junit.Assert.assertNotNull(itemLabelPosition64);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke11, true);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.util.Layer layer20 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D16, rectangle2D17, categoryAxis18, valueAxis19, layer20, plotRenderingInfo21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setBaseCreateEntities(true, false);
        java.awt.Paint paint18 = null;
        statisticalBarRenderer11.setSeriesOutlinePaint((int) '4', paint18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer11.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer11.setBaseItemLabelGenerator(categoryItemLabelGenerator21);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer31.setBaseFillPaint(paint34);
        statisticalBarRenderer24.setSeriesPaint(1, paint34);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer24.getSeriesPositiveItemLabelPosition((int) '4');
        statisticalBarRenderer11.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition38, true);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition38);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator9, true);
        boolean boolean12 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer13.setBaseURLGenerator(categoryURLGenerator14, false);
        int int17 = statisticalBarRenderer13.getColumnCount();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setErrorIndicatorPaint(paint18);
        boolean boolean20 = statisticalBarRenderer13.getBaseSeriesVisible();
        java.awt.Stroke stroke21 = statisticalBarRenderer13.getErrorIndicatorStroke();
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke21);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer0.lookupSeriesStroke(10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 10);
        boolean boolean15 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator16 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator16);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.data.category.CategoryDataset categoryDataset6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range7 = statisticalBarRenderer0.findRangeBounds(categoryDataset6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseStroke();
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) -1);
        java.awt.Shape shape15 = statisticalBarRenderer0.lookupSeriesShape((-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertNotNull(shape15);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false, true);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible(10, (int) (short) 10);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator17);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getBaseURLGenerator();
        double double12 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryURLGenerator11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.0d + "'", double12 == 2.0d);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Paint paint18 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Stroke stroke20 = statisticalBarRenderer0.lookupSeriesStroke((int) (short) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        java.awt.Shape shape4 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.junit.Assert.assertNotNull(shape4);
        org.junit.Assert.assertNotNull(stroke5);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        java.awt.Paint paint11 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer14.setBaseToolTipGenerator(categoryToolTipGenerator15);
        boolean boolean19 = statisticalBarRenderer14.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        statisticalBarRenderer14.setBaseItemLabelGenerator(categoryItemLabelGenerator20, false);
        java.awt.Paint paint25 = statisticalBarRenderer14.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        statisticalBarRenderer14.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35, false);
        int int38 = statisticalBarRenderer34.getColumnCount();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setErrorIndicatorPaint(paint39);
        statisticalBarRenderer28.setBaseItemLabelPaint(paint39);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer28.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = statisticalBarRenderer28.getSeriesItemLabelGenerator((int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer46.setBaseCreateEntities(true, false);
        java.awt.Paint paint53 = null;
        statisticalBarRenderer46.setSeriesOutlinePaint((int) '4', paint53);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator55 = statisticalBarRenderer46.getBaseToolTipGenerator();
        statisticalBarRenderer46.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer59 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke61 = statisticalBarRenderer59.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke63 = statisticalBarRenderer59.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer46.setSeriesStroke((int) (byte) 0, stroke63);
        statisticalBarRenderer46.setItemLabelAnchorOffset((double) '#');
        java.awt.Shape shape68 = statisticalBarRenderer46.lookupSeriesShape((int) (byte) 0);
        statisticalBarRenderer28.setSeriesShape((int) (short) 1, shape68, false);
        statisticalBarRenderer14.setBaseShape(shape68, false);
        statisticalBarRenderer0.setSeriesShape((int) (short) 10, shape68);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator76 = statisticalBarRenderer0.getToolTipGenerator(10, (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(itemLabelPosition42);
        org.junit.Assert.assertNull(categoryItemLabelGenerator44);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertNull(categoryToolTipGenerator55);
        org.junit.Assert.assertNull(stroke61);
        org.junit.Assert.assertNotNull(stroke63);
        org.junit.Assert.assertNotNull(shape68);
        org.junit.Assert.assertNull(categoryToolTipGenerator76);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 10);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        double double20 = statisticalBarRenderer17.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke23 = statisticalBarRenderer17.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke23);
        java.awt.Stroke stroke26 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) -1, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(stroke26);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.LegendItemCollection legendItemCollection8 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(legendItemCollection8);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        boolean boolean15 = statisticalBarRenderer11.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer11.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setBaseFillPaint(paint20);
        statisticalBarRenderer11.setBaseItemLabelPaint(paint20, false);
        statisticalBarRenderer0.setBaseFillPaint(paint20, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = null;
        statisticalBarRenderer31.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator35, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator38 = statisticalBarRenderer31.getBaseToolTipGenerator();
        java.awt.Paint paint40 = statisticalBarRenderer31.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlinePaint(paint40);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categoryPlot16);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNull(categoryToolTipGenerator38);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean8 = statisticalBarRenderer0.isSeriesItemLabelsVisible(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setItemLabelAnchorOffset((-1.0d));
        double double12 = statisticalBarRenderer9.getBase();
        boolean boolean13 = statisticalBarRenderer9.getBaseItemLabelsVisible();
        java.awt.Stroke stroke14 = statisticalBarRenderer9.getErrorIndicatorStroke();
        java.lang.Boolean boolean16 = statisticalBarRenderer9.getSeriesVisibleInLegend((int) (byte) 100);
        java.awt.Paint paint17 = statisticalBarRenderer9.getBaseOutlinePaint();
        java.lang.Boolean boolean19 = statisticalBarRenderer9.getSeriesVisible((int) (short) -1);
        java.awt.Graphics2D graphics2D20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.plot.Marker marker23 = null;
        java.awt.geom.Rectangle2D rectangle2D24 = null;
        statisticalBarRenderer9.drawRangeMarker(graphics2D20, categoryPlot21, valueAxis22, marker23, rectangle2D24);
        statisticalBarRenderer9.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer9.getNegativeItemLabelPosition(0, (int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator35, false);
        int int38 = statisticalBarRenderer34.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke41 = statisticalBarRenderer39.getSeriesOutlineStroke((int) (byte) 10);
        int int42 = statisticalBarRenderer39.getPassCount();
        double double43 = statisticalBarRenderer39.getUpperClip();
        double double44 = statisticalBarRenderer39.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer46.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer46.setBaseFillPaint(paint49);
        statisticalBarRenderer39.setSeriesPaint(1, paint49);
        statisticalBarRenderer34.setBaseFillPaint(paint49, true);
        java.awt.Paint paint54 = statisticalBarRenderer34.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) 0, paint54, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(stroke41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.2d + "'", double44 == 0.2d);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(paint54);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer17.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator21, false);
        java.awt.Stroke stroke24 = null;
        statisticalBarRenderer17.setErrorIndicatorStroke(stroke24);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer17.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = statisticalBarRenderer0.getSeriesItemLabelGenerator(100);
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(categoryItemLabelGenerator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset(3.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        double double9 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer11.setDrawBarOutline(false);
        statisticalBarRenderer11.removeAnnotations();
        statisticalBarRenderer11.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        int int25 = statisticalBarRenderer22.getPassCount();
        double double26 = statisticalBarRenderer22.getUpperClip();
        double double27 = statisticalBarRenderer22.getItemMargin();
        java.lang.Boolean boolean29 = statisticalBarRenderer22.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean30 = statisticalBarRenderer22.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint35 = statisticalBarRenderer22.getItemOutlinePaint(10, (int) (byte) 100);
        statisticalBarRenderer11.setSeriesOutlinePaint((int) (short) 10, paint35, true);
        statisticalBarRenderer0.setSeriesPaint(0, paint35, true);
        java.awt.Graphics2D graphics2D40 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState41 = null;
        java.awt.geom.Rectangle2D rectangle2D42 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot43 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis44 = null;
        org.jfree.chart.axis.ValueAxis valueAxis45 = null;
        org.jfree.data.category.CategoryDataset categoryDataset46 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D40, categoryItemRendererState41, rectangle2D42, categoryPlot43, categoryAxis44, valueAxis45, categoryDataset46, (int) (short) 10, (int) ' ', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.2d + "'", double27 == 0.2d);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer23.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke28 = statisticalBarRenderer23.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke28);
        java.awt.Shape shape30 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        int int34 = statisticalBarRenderer31.getPassCount();
        double double35 = statisticalBarRenderer31.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer31.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition37, false);
        double double40 = statisticalBarRenderer0.getLowerClip();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition37);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (byte) 100, categoryToolTipGenerator17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20, false);
        int int23 = statisticalBarRenderer19.getColumnCount();
        java.awt.Paint paint24 = statisticalBarRenderer19.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem27 = statisticalBarRenderer19.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer19.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setItemLabelAnchorOffset((-1.0d));
        double double34 = statisticalBarRenderer31.getBase();
        java.awt.Paint paint35 = statisticalBarRenderer31.getErrorIndicatorPaint();
        java.awt.Stroke stroke38 = statisticalBarRenderer31.getItemStroke((int) (short) -1, (int) (byte) 1);
        statisticalBarRenderer19.setSeriesStroke((int) (short) 100, stroke38, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer19.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition41, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(legendItem27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font18 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font18, true);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertNotNull(font18);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12, false);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator18, false);
        int int21 = statisticalBarRenderer17.getColumnCount();
        int int22 = statisticalBarRenderer17.getColumnCount();
        java.util.EventListener eventListener23 = null;
        boolean boolean24 = statisticalBarRenderer17.hasListener(eventListener23);
        java.lang.Object obj25 = statisticalBarRenderer17.clone();
        java.awt.Paint paint26 = statisticalBarRenderer17.getBasePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint26, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        java.awt.Shape shape14 = statisticalBarRenderer0.getItemShape((int) (byte) 0, (int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        double double17 = statisticalBarRenderer0.getMaximumBarWidth();
        boolean boolean20 = statisticalBarRenderer0.isItemLabelVisible((int) '4', 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font27 = statisticalBarRenderer22.getBaseItemLabelFont();
        int int28 = statisticalBarRenderer22.getRowCount();
        double double29 = statisticalBarRenderer22.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener33 = null;
        boolean boolean34 = statisticalBarRenderer30.hasListener(eventListener33);
        java.awt.Paint paint37 = statisticalBarRenderer30.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer22.setBaseOutlinePaint(paint37, true);
        statisticalBarRenderer0.setSeriesFillPaint(10, paint37);
        boolean boolean41 = statisticalBarRenderer0.getIncludeBaseInRange();
        boolean boolean42 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer14.setBaseURLGenerator(categoryURLGenerator15, false);
        int int18 = statisticalBarRenderer14.getColumnCount();
        java.awt.Paint paint19 = statisticalBarRenderer14.getBaseFillPaint();
        java.awt.Paint paint22 = statisticalBarRenderer14.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setBaseFillPaint(paint22, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer25.setBaseURLGenerator(categoryURLGenerator26, false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent29 = null;
        statisticalBarRenderer25.notifyListeners(rendererChangeEvent29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer31.setBaseToolTipGenerator(categoryToolTipGenerator32);
        boolean boolean36 = statisticalBarRenderer31.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer37.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer37.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer46 = statisticalBarRenderer37.getGradientPaintTransformer();
        statisticalBarRenderer31.setGradientPaintTransformer(gradientPaintTransformer46);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator48 = statisticalBarRenderer31.getLegendItemLabelGenerator();
        statisticalBarRenderer25.setLegendItemLabelGenerator(categorySeriesLabelGenerator48);
        statisticalBarRenderer0.setLegendItemURLGenerator(categorySeriesLabelGenerator48);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 100);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(paint13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(gradientPaintTransformer46);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator48);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth(2.0d);
        boolean boolean29 = statisticalBarRenderer0.isItemLabelVisible(0, (int) (short) -1);
        java.lang.Boolean boolean31 = statisticalBarRenderer0.getSeriesVisible((int) (byte) -1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont(0, 0);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) -1);
        double double23 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        int int11 = statisticalBarRenderer0.getRowCount();
        java.lang.Object obj12 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(obj12);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator13, false);
        int int16 = statisticalBarRenderer12.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        double double21 = statisticalBarRenderer17.getUpperClip();
        double double22 = statisticalBarRenderer17.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer24.setBaseFillPaint(paint27);
        statisticalBarRenderer17.setSeriesPaint(1, paint27);
        statisticalBarRenderer12.setBaseFillPaint(paint27, true);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint27);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        java.awt.Graphics2D graphics2D35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = null;
        java.awt.geom.Rectangle2D rectangle2D37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D35, categoryPlot36, rectangle2D37, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(paint27);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        double double8 = statisticalBarRenderer0.getItemMargin();
        double double9 = statisticalBarRenderer0.getMinimumBarLength();
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemOutlinePaint(0, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.LegendItem legendItem18 = statisticalBarRenderer0.getLegendItem((int) (byte) 100, (int) (short) 10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertNull(legendItem18);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        statisticalBarRenderer0.setBaseCreateEntities(true, true);
        boolean boolean27 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        java.awt.Stroke stroke54 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer56.setBaseCreateEntities(true, false);
        java.awt.Paint paint63 = null;
        statisticalBarRenderer56.setSeriesOutlinePaint((int) '4', paint63);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator65 = statisticalBarRenderer56.getBaseToolTipGenerator();
        java.awt.Shape shape67 = statisticalBarRenderer56.getSeriesShape((int) '4');
        java.awt.Paint paint69 = statisticalBarRenderer56.getSeriesOutlinePaint(100);
        java.awt.Shape shape70 = statisticalBarRenderer56.getBaseShape();
        statisticalBarRenderer0.setSeriesShape((int) (short) 0, shape70);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertNull(categoryToolTipGenerator65);
        org.junit.Assert.assertNull(shape67);
        org.junit.Assert.assertNull(paint69);
        org.junit.Assert.assertNotNull(shape70);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean8 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint11 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        boolean boolean28 = statisticalBarRenderer0.isSeriesVisible((int) '4');
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = null;
        java.awt.geom.Rectangle2D rectangle2D31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D29, categoryPlot30, rectangle2D31, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        boolean boolean7 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font23 = statisticalBarRenderer18.getBaseItemLabelFont();
        boolean boolean24 = statisticalBarRenderer18.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer25.setBaseURLGenerator(categoryURLGenerator26, false);
        int int29 = statisticalBarRenderer25.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer30.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer25.setBasePositiveItemLabelPosition(itemLabelPosition36, true);
        statisticalBarRenderer18.setBaseNegativeItemLabelPosition(itemLabelPosition36);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator40 = null;
        statisticalBarRenderer18.setBaseToolTipGenerator(categoryToolTipGenerator40, true);
        double double43 = statisticalBarRenderer18.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer44.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator47 = null;
        statisticalBarRenderer44.setLegendItemToolTipGenerator(categorySeriesLabelGenerator47);
        java.awt.Graphics2D graphics2D49 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot50 = null;
        org.jfree.chart.axis.ValueAxis valueAxis51 = null;
        org.jfree.chart.plot.Marker marker52 = null;
        java.awt.geom.Rectangle2D rectangle2D53 = null;
        statisticalBarRenderer44.drawRangeMarker(graphics2D49, categoryPlot50, valueAxis51, marker52, rectangle2D53);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator55 = null;
        statisticalBarRenderer44.setBaseToolTipGenerator(categoryToolTipGenerator55);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer44.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer44.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint60 = statisticalBarRenderer44.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke63 = statisticalBarRenderer61.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke65 = statisticalBarRenderer61.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke68 = statisticalBarRenderer66.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer66.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font71 = statisticalBarRenderer66.getBaseItemLabelFont();
        statisticalBarRenderer61.setBaseItemLabelFont(font71);
        java.awt.Paint paint74 = statisticalBarRenderer61.lookupSeriesPaint(0);
        statisticalBarRenderer44.setBasePaint(paint74);
        statisticalBarRenderer18.setBaseOutlinePaint(paint74, true);
        statisticalBarRenderer0.setBaseFillPaint(paint74);
        java.lang.Boolean boolean80 = statisticalBarRenderer0.getSeriesItemLabelsVisible((-1));
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertNotNull(font23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
        org.junit.Assert.assertNotNull(paint60);
        org.junit.Assert.assertNull(stroke63);
        org.junit.Assert.assertNotNull(stroke65);
        org.junit.Assert.assertNull(stroke68);
        org.junit.Assert.assertNotNull(font71);
        org.junit.Assert.assertNotNull(paint74);
        org.junit.Assert.assertNull(boolean80);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemLabelPaint(1, 0);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.awt.Paint paint22 = statisticalBarRenderer0.getItemOutlinePaint((int) ' ', (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint33, true);
        double double38 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) -1, 100);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2.0d + "'", double38 == 2.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setBaseCreateEntities(true, false);
        boolean boolean10 = statisticalBarRenderer3.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer3.getBaseToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer3.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer3.setSeriesShape(1, shape16, false);
        statisticalBarRenderer0.setSeriesShape(1, shape16);
        boolean boolean20 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        java.awt.Paint paint23 = statisticalBarRenderer0.getItemLabelPaint((int) (short) 10, (int) (short) 100);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer62 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.lang.Boolean boolean64 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 10);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNotNull(gradientPaintTransformer62);
        org.junit.Assert.assertNull(boolean64);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer9 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Paint paint11 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertNotNull(gradientPaintTransformer9);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer11.setAutoPopulateSeriesOutlinePaint(false);
        int int16 = statisticalBarRenderer11.getRowCount();
        java.awt.Shape shape17 = statisticalBarRenderer11.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape17);
        java.awt.Paint paint19 = statisticalBarRenderer0.getBasePaint();
        boolean boolean21 = statisticalBarRenderer0.isSeriesVisible((int) (short) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 100, categoryItemLabelGenerator25, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 10);
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.plot.Marker marker28 = null;
        java.awt.geom.Rectangle2D rectangle2D29 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D25, categoryPlot26, valueAxis27, marker28, rectangle2D29);
        int int31 = statisticalBarRenderer0.getRowCount();
        double double32 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNull(paint24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer10.setBaseToolTipGenerator(categoryToolTipGenerator11);
        boolean boolean15 = statisticalBarRenderer10.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer10.getBaseURLGenerator();
        java.awt.Stroke stroke18 = statisticalBarRenderer10.getSeriesStroke((int) (short) 0);
        boolean boolean20 = statisticalBarRenderer10.isSeriesItemLabelsVisible(1);
        java.awt.Font font21 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font21, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(font21);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer2.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer2.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer2.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator8, true);
        statisticalBarRenderer2.removeAnnotations();
        java.awt.Paint paint12 = statisticalBarRenderer2.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint12, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        int int18 = statisticalBarRenderer15.getPassCount();
        double double19 = statisticalBarRenderer15.getUpperClip();
        java.awt.Shape shape22 = statisticalBarRenderer15.getItemShape(10, (int) '4');
        statisticalBarRenderer0.setBaseShape(shape22, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer0.getBaseStroke();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(stroke25);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator12, false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemLabelPaint(1, 0);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator26, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        java.awt.Shape shape57 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator59);
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertNotNull(shape57);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        boolean boolean63 = statisticalBarRenderer0.getItemVisible(0, (int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator65 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer67 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator68 = null;
        statisticalBarRenderer67.setBaseToolTipGenerator(categoryToolTipGenerator68);
        boolean boolean72 = statisticalBarRenderer67.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator73 = null;
        statisticalBarRenderer67.setBaseItemLabelGenerator(categoryItemLabelGenerator73, false);
        java.awt.Paint paint78 = statisticalBarRenderer67.getItemOutlinePaint((int) (byte) 100, (int) 'a');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint78, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator81 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator65);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(paint78);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator81);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesVisible((int) '#', (java.lang.Boolean) false);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) true, true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Graphics2D graphics2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D18, categoryPlot19, rectangle2D20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator9);
        double double11 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.0d + "'", double11 == 2.0d);
        org.junit.Assert.assertNull(categoryPlot12);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        java.awt.Paint paint16 = null;
        statisticalBarRenderer9.setSeriesOutlinePaint((int) '4', paint16);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator18 = statisticalBarRenderer9.getBaseToolTipGenerator();
        statisticalBarRenderer9.setAutoPopulateSeriesOutlinePaint(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke26 = statisticalBarRenderer22.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setSeriesStroke((int) (byte) 0, stroke26);
        statisticalBarRenderer9.setItemLabelAnchorOffset((double) '#');
        boolean boolean30 = statisticalBarRenderer0.equals((java.lang.Object) '#');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNull(categoryToolTipGenerator18);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        statisticalBarRenderer0.setItemMargin((double) 10.0f);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier21 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNull(drawingSupplier21);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer12.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator16, false);
        java.awt.Stroke stroke19 = null;
        statisticalBarRenderer12.setErrorIndicatorStroke(stroke19);
        boolean boolean21 = statisticalBarRenderer12.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint25 = statisticalBarRenderer12.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 1, paint25, false);
        java.awt.Stroke stroke29 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 100);
        java.awt.Stroke stroke31 = statisticalBarRenderer0.getSeriesStroke((int) ' ');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertNull(stroke31);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape30 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation33 = null;
        org.jfree.chart.util.Layer layer34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation33, layer34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNull(shape30);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryItemLabelGenerator16);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '4', categoryToolTipGenerator15, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertNull(paint10);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        boolean boolean14 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Font font18 = statisticalBarRenderer0.getItemLabelFont(100, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        boolean boolean26 = statisticalBarRenderer19.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer19.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer19.getSeriesItemLabelGenerator((int) (byte) 100);
        java.awt.Shape shape31 = statisticalBarRenderer19.lookupSeriesShape((int) '4');
        java.awt.Stroke stroke32 = statisticalBarRenderer19.getErrorIndicatorStroke();
        statisticalBarRenderer0.setBaseOutlineStroke(stroke32, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNotNull(font18);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertNotNull(shape31);
        org.junit.Assert.assertNotNull(stroke32);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) 100, categoryURLGenerator8, false);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        double double9 = statisticalBarRenderer0.getBase();
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        boolean boolean12 = statisticalBarRenderer0.isSeriesVisible(10);
        java.awt.Font font15 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categoryURLGenerator8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(font15);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer57 = statisticalBarRenderer0.getGradientPaintTransformer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition59 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 0);
        boolean boolean62 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 1, (int) (short) 10);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer57);
        org.junit.Assert.assertNotNull(itemLabelPosition59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer7.setBasePositiveItemLabelPosition(itemLabelPosition18, true);
        statisticalBarRenderer7.setSeriesVisibleInLegend(100, (java.lang.Boolean) true, false);
        boolean boolean26 = statisticalBarRenderer7.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        int int33 = statisticalBarRenderer28.getRowCount();
        java.awt.Shape shape34 = statisticalBarRenderer28.getBaseShape();
        java.awt.Font font37 = statisticalBarRenderer28.getItemLabelFont((int) (short) 10, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer39.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator42 = statisticalBarRenderer39.getLegendItemToolTipGenerator();
        statisticalBarRenderer39.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint50 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer47.setBaseFillPaint(paint50);
        statisticalBarRenderer39.setSeriesFillPaint((int) (byte) 1, paint50);
        statisticalBarRenderer28.setSeriesFillPaint((int) '4', paint50);
        statisticalBarRenderer7.setSeriesFillPaint(100, paint50, false);
        statisticalBarRenderer0.setBaseFillPaint(paint50);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer57 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Graphics2D graphics2D58 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState59 = null;
        java.awt.geom.Rectangle2D rectangle2D60 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot61 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis62 = null;
        org.jfree.chart.axis.ValueAxis valueAxis63 = null;
        org.jfree.data.category.CategoryDataset categoryDataset64 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D58, categoryItemRendererState59, rectangle2D60, categoryPlot61, categoryAxis62, valueAxis63, categoryDataset64, (int) (byte) 100, 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNotNull(font37);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator42);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(gradientPaintTransformer57);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(categoryPlot11);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean21 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator25, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator23);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer4.setBaseURLGenerator(categoryURLGenerator5, false);
        int int8 = statisticalBarRenderer4.getColumnCount();
        java.awt.Paint paint9 = statisticalBarRenderer4.getBaseFillPaint();
        java.awt.Paint paint12 = statisticalBarRenderer4.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke15 = statisticalBarRenderer13.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer13.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = null;
        statisticalBarRenderer19.setBaseURLGenerator(categoryURLGenerator20, false);
        int int23 = statisticalBarRenderer19.getColumnCount();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setErrorIndicatorPaint(paint24);
        statisticalBarRenderer13.setBaseItemLabelPaint(paint24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke31 = statisticalBarRenderer27.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer13.setBaseStroke(stroke31, false);
        statisticalBarRenderer4.setBaseStroke(stroke31, true);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 10, stroke31);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        int int44 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint46 = statisticalBarRenderer39.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer39.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        java.awt.Paint paint50 = statisticalBarRenderer39.getBaseOutlinePaint();
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setBaseOutlinePaint(paint51);
        statisticalBarRenderer0.setBaseOutlinePaint(paint51);
        boolean boolean56 = statisticalBarRenderer0.getItemVisible((int) (short) 0, (-1));
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(stroke15);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(categoryItemLabelGenerator38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
        org.junit.Assert.assertNotNull(paint50);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        double double8 = statisticalBarRenderer0.getItemMargin();
        double double9 = statisticalBarRenderer0.getMaximumBarWidth();
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 0);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        statisticalBarRenderer0.removeAnnotations();
        java.awt.Graphics2D graphics2D7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.util.Layer layer11 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D7, rectangle2D8, categoryAxis9, valueAxis10, layer11, plotRenderingInfo12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        statisticalBarRenderer0.setMinimumBarLength((double) 0);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesPaint((-1));
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator14);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        boolean boolean27 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer29.setBaseCreateEntities(true, false);
        java.awt.Font font36 = null;
        statisticalBarRenderer29.setSeriesItemLabelFont((int) '4', font36);
        java.awt.Stroke stroke38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer29.setBaseStroke(stroke38);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer29.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = statisticalBarRenderer29.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer44.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator51 = null;
        statisticalBarRenderer50.setBaseURLGenerator(categoryURLGenerator51, false);
        int int54 = statisticalBarRenderer50.getColumnCount();
        java.awt.Paint paint55 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer50.setErrorIndicatorPaint(paint55);
        statisticalBarRenderer44.setBaseItemLabelPaint(paint55);
        statisticalBarRenderer29.setSeriesFillPaint((int) (byte) 10, paint55, true);
        statisticalBarRenderer29.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke63 = statisticalBarRenderer29.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke63);
        statisticalBarRenderer0.setSeriesCreateEntities(1, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
        org.junit.Assert.assertNull(categoryItemLabelGenerator42);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(paint55);
        org.junit.Assert.assertNotNull(stroke63);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseItemLabelPaint();
        double double18 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation31 = null;
        org.jfree.chart.util.Layer layer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation31, layer32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, true);
        boolean boolean10 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) 100, (int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        statisticalBarRenderer13.removeAnnotations();
        boolean boolean19 = statisticalBarRenderer13.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer13.setBaseItemLabelsVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer24.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = null;
        statisticalBarRenderer24.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator30, true);
        statisticalBarRenderer24.removeAnnotations();
        java.lang.Object obj34 = statisticalBarRenderer24.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke37 = statisticalBarRenderer35.getSeriesOutlineStroke((int) (byte) 10);
        int int38 = statisticalBarRenderer35.getPassCount();
        double double39 = statisticalBarRenderer35.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer35.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer24.setBasePositiveItemLabelPosition(itemLabelPosition41);
        statisticalBarRenderer13.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition41);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition41);
        java.awt.Graphics2D graphics2D45 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = null;
        org.jfree.chart.axis.ValueAxis valueAxis47 = null;
        org.jfree.chart.plot.Marker marker48 = null;
        java.awt.geom.Rectangle2D rectangle2D49 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D45, categoryPlot46, valueAxis47, marker48, rectangle2D49);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryPlot9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertNull(stroke37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator7, false);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer12.setDrawBarOutline(false);
        statisticalBarRenderer12.removeAnnotations();
        boolean boolean18 = statisticalBarRenderer12.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer20.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        statisticalBarRenderer20.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer20.setSeriesOutlineStroke((int) (byte) 1, stroke28);
        java.awt.Paint paint31 = statisticalBarRenderer20.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer12.setSeriesOutlinePaint((int) (byte) 0, paint31);
        java.awt.Paint paint34 = statisticalBarRenderer12.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer12.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer37.setBaseFillPaint(paint40);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke44 = statisticalBarRenderer42.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer42.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font47 = statisticalBarRenderer42.getBaseItemLabelFont();
        statisticalBarRenderer37.setBaseItemLabelFont(font47);
        java.awt.Stroke stroke50 = statisticalBarRenderer37.lookupSeriesOutlineStroke((int) (byte) 1);
        java.awt.Font font51 = statisticalBarRenderer37.getBaseItemLabelFont();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer52 = statisticalBarRenderer37.getGradientPaintTransformer();
        statisticalBarRenderer12.setGradientPaintTransformer(gradientPaintTransformer52);
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer52);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer55.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer55.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator61 = null;
        statisticalBarRenderer55.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator61, true);
        statisticalBarRenderer55.setSeriesItemLabelsVisible(0, true);
        java.awt.Stroke stroke69 = statisticalBarRenderer55.getItemStroke((int) '#', (int) ' ');
        statisticalBarRenderer0.setBaseStroke(stroke69, true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator23);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNull(stroke44);
        org.junit.Assert.assertNotNull(font47);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertNotNull(font51);
        org.junit.Assert.assertNotNull(gradientPaintTransformer52);
        org.junit.Assert.assertNotNull(stroke69);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = statisticalBarRenderer0.getBaseToolTipGenerator();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) true, true);
        double double14 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator19, false);
        java.awt.Stroke stroke22 = null;
        statisticalBarRenderer15.setErrorIndicatorStroke(stroke22);
        boolean boolean24 = statisticalBarRenderer15.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer15.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint28 = statisticalBarRenderer15.lookupSeriesPaint(0);
        boolean boolean31 = statisticalBarRenderer15.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint32 = statisticalBarRenderer15.getBaseFillPaint();
        statisticalBarRenderer0.setBasePaint(paint32);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = statisticalBarRenderer0.getItemLabelGenerator(0, (int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer38.setBaseURLGenerator(categoryURLGenerator39, false);
        int int42 = statisticalBarRenderer38.getColumnCount();
        int int43 = statisticalBarRenderer38.getColumnCount();
        java.awt.Paint paint45 = statisticalBarRenderer38.getSeriesItemLabelPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer38.getNegativeItemLabelPosition((int) (short) -1, (int) (byte) 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) '#', itemLabelPosition48, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(categoryItemLabelGenerator36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(paint45);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Shape shape8 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        boolean boolean18 = statisticalBarRenderer12.getAutoPopulateSeriesPaint();
        java.awt.Stroke stroke21 = statisticalBarRenderer12.getItemOutlineStroke((int) (byte) 0, (int) (byte) -1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke21, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(shape8);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke11, true);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator17, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Font font6 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(font6);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getSeriesStroke((int) ' ');
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemLabelPaint((int) (short) 0, (int) (short) 0);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator58 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, 10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator59 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator59);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition61 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Stroke stroke65 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 10);
        java.awt.Paint paint68 = statisticalBarRenderer0.getItemPaint((int) (short) 1, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertNull(categoryItemLabelGenerator58);
        org.junit.Assert.assertNotNull(itemLabelPosition61);
        org.junit.Assert.assertNull(stroke65);
        org.junit.Assert.assertNotNull(paint68);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setBaseCreateEntities(true, false);
        boolean boolean26 = statisticalBarRenderer19.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator27 = statisticalBarRenderer19.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = statisticalBarRenderer19.getSeriesItemLabelGenerator((int) (byte) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        int int33 = statisticalBarRenderer30.getPassCount();
        boolean boolean34 = statisticalBarRenderer30.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = statisticalBarRenderer30.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer36.setBaseFillPaint(paint39);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint39, false);
        statisticalBarRenderer19.setBaseFillPaint(paint39, false);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint39);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer46.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator53 = null;
        statisticalBarRenderer52.setBaseURLGenerator(categoryURLGenerator53, false);
        int int56 = statisticalBarRenderer52.getColumnCount();
        java.awt.Paint paint57 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer52.setErrorIndicatorPaint(paint57);
        statisticalBarRenderer46.setBaseItemLabelPaint(paint57);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation60 = null;
        boolean boolean61 = statisticalBarRenderer46.removeAnnotation(categoryAnnotation60);
        java.awt.Paint paint62 = statisticalBarRenderer46.getBasePaint();
        java.awt.Stroke stroke63 = statisticalBarRenderer46.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke63);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator27);
        org.junit.Assert.assertNull(categoryItemLabelGenerator29);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryPlot35);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(paint57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(paint62);
        org.junit.Assert.assertNotNull(stroke63);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseFillPaint(paint9);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint9, false);
        java.awt.Shape shape14 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer16.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer16.getToolTipGenerator((int) (byte) 0, (int) ' ');
        java.awt.Shape shape27 = statisticalBarRenderer16.getBaseShape();
        statisticalBarRenderer0.setSeriesShape(0, shape27, false);
        java.lang.Boolean boolean31 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(categoryPlot5);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        java.awt.Paint paint12 = statisticalBarRenderer0.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBase(0.0d);
        statisticalBarRenderer0.setItemMargin((double) 1.0f);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        boolean boolean10 = statisticalBarRenderer0.getIncludeBaseInRange();
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.axis.ValueAxis valueAxis13 = null;
        org.jfree.chart.plot.Marker marker14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D11, categoryPlot12, valueAxis13, marker14, rectangle2D15);
        statisticalBarRenderer0.setBaseSeriesVisible(false, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator20);
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer16.setAutoPopulateSeriesOutlineStroke(true);
        java.awt.Stroke stroke23 = statisticalBarRenderer16.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 0, stroke23, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertNotNull(stroke23);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        int int13 = statisticalBarRenderer8.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener17 = null;
        boolean boolean18 = statisticalBarRenderer14.hasListener(eventListener17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        java.awt.Font font24 = statisticalBarRenderer19.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getBasePositiveItemLabelPosition();
        statisticalBarRenderer14.setNegativeItemLabelPositionFallback(itemLabelPosition25);
        statisticalBarRenderer8.setBaseNegativeItemLabelPosition(itemLabelPosition25, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer29.setDrawBarOutline(false);
        statisticalBarRenderer29.removeAnnotations();
        boolean boolean35 = statisticalBarRenderer29.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer37.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator40 = statisticalBarRenderer37.getLegendItemToolTipGenerator();
        statisticalBarRenderer37.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer37.setSeriesOutlineStroke((int) (byte) 1, stroke45);
        java.awt.Paint paint48 = statisticalBarRenderer37.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer29.setSeriesOutlinePaint((int) (byte) 0, paint48);
        statisticalBarRenderer8.setBaseFillPaint(paint48);
        statisticalBarRenderer0.setBaseOutlinePaint(paint48, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(font24);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator40);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNotNull(paint48);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setBaseCreateEntities(true, false);
        boolean boolean10 = statisticalBarRenderer3.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer3.getBaseToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer3.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer3.setSeriesShape(1, shape16, false);
        statisticalBarRenderer0.setSeriesShape(1, shape16);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator20, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer24.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator31 = null;
        statisticalBarRenderer30.setBaseURLGenerator(categoryURLGenerator31, false);
        int int34 = statisticalBarRenderer30.getColumnCount();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setErrorIndicatorPaint(paint35);
        statisticalBarRenderer24.setBaseItemLabelPaint(paint35);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation38 = null;
        boolean boolean39 = statisticalBarRenderer24.removeAnnotation(categoryAnnotation38);
        java.awt.Paint paint40 = statisticalBarRenderer24.getBasePaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint40, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(paint40);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getSeriesURLGenerator(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseCreateEntities(true, false);
        java.awt.Paint paint24 = null;
        statisticalBarRenderer17.setSeriesOutlinePaint((int) '4', paint24);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = statisticalBarRenderer17.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator27);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer17.setBaseURLGenerator(categoryURLGenerator29, false);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (short) 0);
        double double34 = statisticalBarRenderer17.getUpperClip();
        boolean boolean35 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer17);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator37 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator37);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNull(categoryURLGenerator16);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryToolTipGenerator26);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent4 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent4);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getURLGenerator((int) '4', (int) (short) -1);
        org.junit.Assert.assertNull(categoryURLGenerator8);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        boolean boolean6 = statisticalBarRenderer0.isSeriesVisibleInLegend((-1));
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D7, categoryPlot8, valueAxis9, rectangle2D10, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer5.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition11, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer15.setBaseFillPaint(paint18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font25);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font25, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection31 = statisticalBarRenderer0.getLegendItems();
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Paint paint34 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 1);
        java.awt.Paint paint36 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        boolean boolean37 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(100, categoryURLGenerator39);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNotNull(legendItemCollection31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(paint34);
        org.junit.Assert.assertNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font12 = statisticalBarRenderer7.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer13.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer13.setDrawBarOutline(false);
        java.awt.Font font20 = statisticalBarRenderer13.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer7.setBaseItemLabelFont(font20, false);
        statisticalBarRenderer7.setItemLabelAnchorOffset(2.0d);
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint((int) (byte) 10, paint26, false);
        statisticalBarRenderer0.setBaseFillPaint(paint26, true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNotNull(stroke6);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 10, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer12.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator16, false);
        java.awt.Stroke stroke19 = null;
        statisticalBarRenderer12.setErrorIndicatorStroke(stroke19);
        boolean boolean21 = statisticalBarRenderer12.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint25 = statisticalBarRenderer12.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 1, paint25, false);
        java.awt.Stroke stroke29 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 100);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        org.jfree.chart.plot.Marker marker33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D30, categoryPlot31, valueAxis32, marker33, rectangle2D34);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(stroke29);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer10.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer10.hasListener(eventListener13);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator15);
        java.awt.Paint paint17 = statisticalBarRenderer10.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke22 = statisticalBarRenderer20.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font25 = statisticalBarRenderer20.getBaseItemLabelFont();
        int int26 = statisticalBarRenderer20.getRowCount();
        double double27 = statisticalBarRenderer20.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer28.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener31 = null;
        boolean boolean32 = statisticalBarRenderer28.hasListener(eventListener31);
        java.awt.Paint paint35 = statisticalBarRenderer28.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer20.setBaseOutlinePaint(paint35, true);
        statisticalBarRenderer18.setSeriesOutlinePaint(10, paint35);
        statisticalBarRenderer10.setBaseItemLabelPaint(paint35);
        statisticalBarRenderer0.setBaseOutlinePaint(paint35);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) 0, (int) (byte) 10);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '4', categoryToolTipGenerator13);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D15, categoryPlot16, rectangle2D17, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        statisticalBarRenderer0.setBaseSeriesVisible(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator17, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        java.awt.Paint paint24 = statisticalBarRenderer0.getItemFillPaint(0, 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        boolean boolean13 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer0.getToolTipGenerator(100, (int) '4');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke25 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer9.setBaseStroke(stroke27, false);
        statisticalBarRenderer0.setBaseStroke(stroke27, true);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.awt.Paint paint35 = statisticalBarRenderer0.getItemPaint((int) (short) 10, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        int int40 = statisticalBarRenderer37.getPassCount();
        double double41 = statisticalBarRenderer37.getUpperClip();
        double double42 = statisticalBarRenderer37.getItemMargin();
        java.lang.Boolean boolean44 = statisticalBarRenderer37.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean45 = statisticalBarRenderer37.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer37.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 1, itemLabelPosition47);
        boolean boolean49 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke25);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.2d + "'", double42 == 0.2d);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke33 = statisticalBarRenderer31.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer31.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font36 = statisticalBarRenderer31.getBaseItemLabelFont();
        boolean boolean37 = statisticalBarRenderer31.isDrawBarOutline();
        java.awt.Shape shape38 = statisticalBarRenderer31.getBaseShape();
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape38);
        java.awt.Paint paint42 = statisticalBarRenderer0.getItemFillPaint((int) '4', 1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNotNull(font36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertNotNull(paint42);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean1 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator3 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator3, false);
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        boolean boolean10 = statisticalBarRenderer0.getItemVisible(0, (int) (short) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator11, false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        double double9 = statisticalBarRenderer6.getBase();
        java.awt.Paint paint10 = statisticalBarRenderer6.getErrorIndicatorPaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 0, paint10, true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 0);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        java.awt.Paint paint20 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (short) 10, (int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator11, false);
        java.awt.Shape shape15 = statisticalBarRenderer0.getSeriesShape((int) (byte) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(shape15);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean14 = statisticalBarRenderer0.equals((java.lang.Object) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        double double16 = statisticalBarRenderer0.getItemMargin();
        java.awt.Paint paint18 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) '4');
        java.awt.Paint paint20 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        java.awt.Paint paint28 = null;
        statisticalBarRenderer21.setSeriesOutlinePaint((int) '4', paint28);
        org.jfree.chart.LegendItem legendItem32 = statisticalBarRenderer21.getLegendItem((int) (byte) -1, (int) (byte) 1);
        boolean boolean33 = statisticalBarRenderer21.getAutoPopulateSeriesPaint();
        java.awt.Font font34 = statisticalBarRenderer21.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font34);
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(paint20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(legendItem32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(font34);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean7 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke15 = statisticalBarRenderer10.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator16 = null;
        statisticalBarRenderer10.setBaseItemLabelGenerator(categoryItemLabelGenerator16);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setAutoPopulateSeriesOutlinePaint(false);
        int int26 = statisticalBarRenderer21.getRowCount();
        java.awt.Shape shape27 = statisticalBarRenderer21.getBaseShape();
        statisticalBarRenderer10.setBaseShape(shape27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke32 = statisticalBarRenderer30.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer30.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator37 = null;
        statisticalBarRenderer36.setBaseURLGenerator(categoryURLGenerator37, false);
        int int40 = statisticalBarRenderer36.getColumnCount();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint41);
        statisticalBarRenderer30.setBaseItemLabelPaint(paint41);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke48 = statisticalBarRenderer44.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer30.setBaseStroke(stroke48, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer51.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener54 = null;
        boolean boolean55 = statisticalBarRenderer51.hasListener(eventListener54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke58 = statisticalBarRenderer56.getSeriesOutlineStroke((int) (byte) 10);
        int int59 = statisticalBarRenderer56.getPassCount();
        java.awt.Font font61 = statisticalBarRenderer56.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer56.getBasePositiveItemLabelPosition();
        statisticalBarRenderer51.setNegativeItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer30.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition62);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition62);
        int int67 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier68 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNull(stroke32);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(stroke58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNull(font61);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNull(drawingSupplier68);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = null;
        statisticalBarRenderer9.setBaseURLGenerator(categoryURLGenerator10, false);
        int int13 = statisticalBarRenderer9.getColumnCount();
        java.awt.Paint paint14 = statisticalBarRenderer9.getBaseFillPaint();
        java.awt.Paint paint17 = statisticalBarRenderer9.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer9.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke20 = statisticalBarRenderer9.getErrorIndicatorStroke();
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke20, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator23);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer25.setBaseToolTipGenerator(categoryToolTipGenerator26);
        boolean boolean30 = statisticalBarRenderer25.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = null;
        statisticalBarRenderer25.setBaseItemLabelGenerator(categoryItemLabelGenerator31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        int int36 = statisticalBarRenderer33.getPassCount();
        java.awt.Font font38 = statisticalBarRenderer33.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getBasePositiveItemLabelPosition();
        statisticalBarRenderer25.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition39, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(font38);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = statisticalBarRenderer6.getItemLabelGenerator((int) (short) 0, (int) (byte) 100);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer15 = statisticalBarRenderer6.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer15);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer17 = statisticalBarRenderer0.getGradientPaintTransformer();
        boolean boolean18 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertNull(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(gradientPaintTransformer15);
        org.junit.Assert.assertNotNull(gradientPaintTransformer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        java.awt.Paint paint33 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator34 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        boolean boolean37 = statisticalBarRenderer0.getItemVisible((int) '#', (int) (short) -1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer6.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer6.setDrawBarOutline(false);
        java.awt.Font font13 = statisticalBarRenderer6.getItemLabelFont((int) (short) -1, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font13, false);
        statisticalBarRenderer0.setItemLabelAnchorOffset(2.0d);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (short) 100, (int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        double double25 = statisticalBarRenderer21.getBase();
        boolean boolean27 = statisticalBarRenderer21.isSeriesVisibleInLegend((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font33 = statisticalBarRenderer28.getBaseItemLabelFont();
        int int34 = statisticalBarRenderer28.getRowCount();
        double double35 = statisticalBarRenderer28.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer36.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer36.hasListener(eventListener39);
        java.awt.Paint paint43 = statisticalBarRenderer36.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer28.setBaseOutlinePaint(paint43, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke48 = statisticalBarRenderer46.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke50 = statisticalBarRenderer46.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke53 = statisticalBarRenderer51.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer51.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font56 = statisticalBarRenderer51.getBaseItemLabelFont();
        statisticalBarRenderer46.setBaseItemLabelFont(font56);
        statisticalBarRenderer28.setBaseItemLabelFont(font56, false);
        statisticalBarRenderer21.setBaseItemLabelFont(font56, false);
        statisticalBarRenderer0.setBaseItemLabelFont(font56);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator64 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator64, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator68 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(font13);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertNotNull(font33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(stroke48);
        org.junit.Assert.assertNotNull(stroke50);
        org.junit.Assert.assertNull(stroke53);
        org.junit.Assert.assertNotNull(font56);
        org.junit.Assert.assertNull(categoryURLGenerator68);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Paint paint8 = statisticalBarRenderer0.getItemLabelPaint((int) '#', (int) '4');
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getErrorIndicatorStroke();
        java.awt.Paint paint12 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Paint paint13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseFillPaint(paint13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font15 = statisticalBarRenderer10.getBaseItemLabelFont();
        int int16 = statisticalBarRenderer10.getRowCount();
        double double17 = statisticalBarRenderer10.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener21 = null;
        boolean boolean22 = statisticalBarRenderer18.hasListener(eventListener21);
        java.awt.Paint paint25 = statisticalBarRenderer18.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer10.setBaseOutlinePaint(paint25, true);
        statisticalBarRenderer8.setSeriesOutlinePaint(10, paint25);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint25);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        java.awt.geom.Rectangle2D rectangle2D32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D30, categoryPlot31, rectangle2D32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(font15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Shape shape12 = statisticalBarRenderer0.lookupSeriesShape((int) '#');
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(shape12);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(10, (java.lang.Boolean) false, false);
        java.awt.Paint paint24 = statisticalBarRenderer0.getErrorIndicatorPaint();
        boolean boolean25 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation10 = null;
        boolean boolean11 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) (short) 0, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = statisticalBarRenderer17.getURLGenerator(1, (int) (short) 0);
        statisticalBarRenderer17.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false);
        double double28 = statisticalBarRenderer17.getItemLabelAnchorOffset();
        boolean boolean31 = statisticalBarRenderer17.getItemCreateEntity(100, (int) '4');
        statisticalBarRenderer17.setSeriesItemLabelsVisible((int) '#', true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition(0);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition36);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNull(categoryURLGenerator24);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2.0d + "'", double28 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = null;
        statisticalBarRenderer7.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator11, false);
        java.awt.Stroke stroke14 = null;
        statisticalBarRenderer7.setErrorIndicatorStroke(stroke14);
        boolean boolean16 = statisticalBarRenderer7.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint20 = statisticalBarRenderer7.lookupSeriesPaint(0);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 1, paint20, true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener23 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setBaseCreateEntities(true, false);
        java.awt.Font font14 = null;
        statisticalBarRenderer7.setSeriesItemLabelFont((int) '4', font14);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer7.setBaseStroke(stroke16);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer7.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18, false);
        boolean boolean21 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        boolean boolean29 = statisticalBarRenderer22.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = statisticalBarRenderer22.getBaseToolTipGenerator();
        boolean boolean31 = statisticalBarRenderer22.getAutoPopulateSeriesShape();
        statisticalBarRenderer22.setBaseSeriesVisible(true);
        java.awt.Font font34 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font34);
        java.awt.Graphics2D graphics2D36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        org.jfree.chart.axis.ValueAxis valueAxis38 = null;
        java.awt.geom.Rectangle2D rectangle2D39 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D36, categoryPlot37, valueAxis38, rectangle2D39, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(font34);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Paint paint10 = statisticalBarRenderer0.getErrorIndicatorPaint();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke11, true);
        java.awt.Shape shape15 = null;
        statisticalBarRenderer0.setSeriesShape(100, shape15, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        int int21 = statisticalBarRenderer18.getPassCount();
        double double22 = statisticalBarRenderer18.getUpperClip();
        double double23 = statisticalBarRenderer18.getItemMargin();
        java.lang.Boolean boolean25 = statisticalBarRenderer18.getSeriesVisibleInLegend((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer27.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer27.setDrawBarOutline(false);
        statisticalBarRenderer27.removeAnnotations();
        boolean boolean33 = statisticalBarRenderer27.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer35.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator38 = statisticalBarRenderer35.getLegendItemToolTipGenerator();
        statisticalBarRenderer35.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer35.setSeriesOutlineStroke((int) (byte) 1, stroke43);
        java.awt.Paint paint46 = statisticalBarRenderer35.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer27.setSeriesOutlinePaint((int) (byte) 0, paint46);
        java.awt.Paint paint49 = statisticalBarRenderer27.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer18.setSeriesItemLabelPaint(1, paint49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke53 = statisticalBarRenderer51.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator55 = null;
        statisticalBarRenderer51.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator55, false);
        java.awt.Stroke stroke58 = null;
        statisticalBarRenderer51.setErrorIndicatorStroke(stroke58);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer51.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer51.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer65 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator66 = null;
        statisticalBarRenderer65.setBaseToolTipGenerator(categoryToolTipGenerator66);
        boolean boolean70 = statisticalBarRenderer65.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator71 = null;
        statisticalBarRenderer65.setBaseItemLabelGenerator(categoryItemLabelGenerator71, false);
        statisticalBarRenderer65.setDrawBarOutline(true);
        java.awt.Paint paint77 = statisticalBarRenderer65.lookupSeriesOutlinePaint((int) (byte) 0);
        statisticalBarRenderer51.setBaseItemLabelPaint(paint77, false);
        boolean boolean80 = statisticalBarRenderer18.equals((java.lang.Object) paint77);
        statisticalBarRenderer0.setBaseFillPaint(paint77, false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator38);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(stroke53);
        org.junit.Assert.assertNotNull(itemLabelPosition62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(paint77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        java.awt.Paint paint13 = statisticalBarRenderer0.lookupSeriesPaint(0);
        boolean boolean16 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) (byte) 10);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer18.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer18.getLegendItemToolTipGenerator();
        statisticalBarRenderer18.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer26.setBaseFillPaint(paint29);
        statisticalBarRenderer18.setSeriesFillPaint((int) (byte) 1, paint29);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint29);
        double double33 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2.0d + "'", double33 == 2.0d);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(0, categoryItemLabelGenerator22, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem8 = statisticalBarRenderer0.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        java.awt.Paint paint12 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 10);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true, true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(legendItem8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNull(paint12);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator12 = statisticalBarRenderer0.getSeriesToolTipGenerator(1);
        double double13 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        int int8 = statisticalBarRenderer0.getPassCount();
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) '#');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(paint10);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer3 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke5 = statisticalBarRenderer3.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer3.setBaseCreateEntities(true, false);
        boolean boolean10 = statisticalBarRenderer3.isSeriesItemLabelsVisible((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer3.getBaseToolTipGenerator();
        java.awt.Paint paint14 = statisticalBarRenderer3.getItemFillPaint((int) (byte) 100, 1);
        java.awt.Shape shape16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer3.setSeriesShape(1, shape16, false);
        statisticalBarRenderer0.setSeriesShape(1, shape16);
        double double20 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(shape16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator22 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator22, false);
        int int25 = statisticalBarRenderer21.getColumnCount();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer15.setBaseItemLabelPaint(paint26);
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 10, paint26, true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getErrorIndicatorStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator36);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer38.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer38.setBaseFillPaint(paint41);
        boolean boolean43 = statisticalBarRenderer38.getAutoPopulateSeriesStroke();
        java.awt.Paint paint45 = statisticalBarRenderer38.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint46 = statisticalBarRenderer38.getBaseItemLabelPaint();
        boolean boolean47 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer38);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer48 = statisticalBarRenderer38.getGradientPaintTransformer();
        org.jfree.chart.plot.CategoryPlot categoryPlot49 = statisticalBarRenderer38.getPlot();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(paint45);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(gradientPaintTransformer48);
        org.junit.Assert.assertNull(categoryPlot49);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(1);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        boolean boolean9 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer10.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = null;
        statisticalBarRenderer16.setBaseURLGenerator(categoryURLGenerator17, false);
        int int20 = statisticalBarRenderer16.getColumnCount();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setErrorIndicatorPaint(paint21);
        statisticalBarRenderer10.setBaseItemLabelPaint(paint21);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint21);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer1 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke3 = statisticalBarRenderer1.getSeriesOutlineStroke((int) (byte) 10);
        int int4 = statisticalBarRenderer1.getPassCount();
        double double5 = statisticalBarRenderer1.getUpperClip();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer1.setSeriesPaint(100, paint7);
        statisticalBarRenderer0.setBasePaint(paint7);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) false, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer17.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke22 = statisticalBarRenderer17.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer17.setBaseItemLabelGenerator(categoryItemLabelGenerator23);
        java.awt.Stroke stroke27 = statisticalBarRenderer17.getItemStroke((int) (byte) -1, 1);
        java.awt.Paint paint28 = statisticalBarRenderer17.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint28, false);
        java.awt.Paint paint31 = statisticalBarRenderer0.getBaseFillPaint();
        org.junit.Assert.assertNull(stroke3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke6 = statisticalBarRenderer4.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer4.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer4.getPositiveItemLabelPositionFallback();
        java.awt.Shape shape12 = statisticalBarRenderer4.getItemShape((int) 'a', (int) (byte) -1);
        java.lang.Boolean boolean14 = statisticalBarRenderer4.getSeriesItemLabelsVisible((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke17 = statisticalBarRenderer15.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer15.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font20 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer4.setBaseItemLabelFont(font20, true);
        statisticalBarRenderer0.setBaseItemLabelFont(font20, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) '#', categoryURLGenerator26);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertNull(itemLabelPosition9);
        org.junit.Assert.assertNotNull(shape12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke5 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.getItemStroke((int) (byte) -1, 1);
        java.awt.Paint paint11 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((-1));
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke5);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesFillPaint(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = paint13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '4');
        double double15 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setItemLabelAnchorOffset((-1.0d));
        double double20 = statisticalBarRenderer17.getBase();
        boolean boolean21 = statisticalBarRenderer17.getBaseItemLabelsVisible();
        java.lang.Boolean boolean23 = statisticalBarRenderer17.getSeriesVisibleInLegend(10);
        double double24 = statisticalBarRenderer17.getUpperClip();
        java.awt.Shape shape27 = statisticalBarRenderer17.getItemShape(100, (int) ' ');
        statisticalBarRenderer0.setSeriesShape((int) '#', shape27);
        boolean boolean29 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        boolean boolean7 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator10 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator10);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.awt.Font font21 = statisticalBarRenderer0.getSeriesItemLabelFont((-1));
        boolean boolean22 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint23 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Paint paint25 = statisticalBarRenderer0.getSeriesPaint((int) (short) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(font21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(paint25);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer10.setBaseURLGenerator(categoryURLGenerator11, false);
        int int14 = statisticalBarRenderer10.getColumnCount();
        java.awt.Shape shape16 = null;
        statisticalBarRenderer10.setSeriesShape((int) (byte) 100, shape16, true);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.lookupSeriesStroke(1);
        statisticalBarRenderer0.setBaseStroke(stroke20, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 0, categoryURLGenerator26);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent28 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent28);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke9 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer7.setAutoPopulateSeriesOutlinePaint(false);
        int int12 = statisticalBarRenderer7.getRowCount();
        java.awt.Shape shape13 = statisticalBarRenderer7.getBaseShape();
        java.awt.Font font16 = statisticalBarRenderer7.getItemLabelFont((int) (short) 10, 1);
        statisticalBarRenderer0.setBaseItemLabelFont(font16, false);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesItemLabelsVisible(0);
        java.lang.Object obj21 = statisticalBarRenderer0.clone();
        boolean boolean23 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(stroke9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 10, (int) (short) -1);
        java.awt.Paint paint15 = statisticalBarRenderer0.getBasePaint();
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer19.setAutoPopulateSeriesOutlinePaint(false);
        int int24 = statisticalBarRenderer19.getRowCount();
        java.awt.Shape shape25 = statisticalBarRenderer19.getBaseShape();
        java.awt.Font font28 = statisticalBarRenderer19.getItemLabelFont((int) (short) 10, 1);
        boolean boolean30 = statisticalBarRenderer19.isSeriesItemLabelsVisible((int) (short) -1);
        java.awt.Stroke stroke33 = statisticalBarRenderer19.getItemOutlineStroke((int) '#', (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener37 = null;
        boolean boolean38 = statisticalBarRenderer34.hasListener(eventListener37);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator39 = null;
        statisticalBarRenderer34.setBaseURLGenerator(categoryURLGenerator39);
        java.awt.Paint paint41 = statisticalBarRenderer34.getBaseItemLabelPaint();
        statisticalBarRenderer34.setAutoPopulateSeriesPaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke46 = statisticalBarRenderer44.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator48 = null;
        statisticalBarRenderer44.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator48, false);
        java.awt.Stroke stroke51 = null;
        statisticalBarRenderer44.setErrorIndicatorStroke(stroke51);
        boolean boolean53 = statisticalBarRenderer44.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition55 = statisticalBarRenderer44.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer34.setBaseNegativeItemLabelPosition(itemLabelPosition55, true);
        statisticalBarRenderer19.setPositiveItemLabelPositionFallback(itemLabelPosition55);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition55);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNotNull(font28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(stroke46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition55);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        int int11 = statisticalBarRenderer5.getRowCount();
        double double12 = statisticalBarRenderer5.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer5.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition15);
        boolean boolean17 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        boolean boolean19 = statisticalBarRenderer0.isSeriesItemLabelsVisible((-1));
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        boolean boolean10 = statisticalBarRenderer0.getItemVisible((int) ' ', (int) ' ');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        boolean boolean15 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) 'a');
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setSeriesVisible((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer0.getNegativeItemLabelPosition(1, (int) (short) 1);
        java.awt.Paint paint38 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNull(paint38);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer5.setBaseURLGenerator(categoryURLGenerator6, false);
        int int9 = statisticalBarRenderer5.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer5.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint12 = statisticalBarRenderer5.lookupSeriesOutlinePaint((int) (short) -1);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer5.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        java.awt.Font font18 = statisticalBarRenderer0.getItemLabelFont((int) (short) 1, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertNotNull(font18);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator11 = statisticalBarRenderer8.getLegendItemToolTipGenerator();
        statisticalBarRenderer8.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (byte) 1, stroke16);
        java.awt.Paint paint19 = statisticalBarRenderer8.lookupSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 0, paint19);
        java.awt.Paint paint22 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator25, false);
        statisticalBarRenderer0.setMinimumBarLength((double) 100L);
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis32 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker33 = null;
        java.awt.geom.Rectangle2D rectangle2D34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D30, categoryPlot31, categoryAxis32, categoryMarker33, rectangle2D34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator11);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        boolean boolean14 = statisticalBarRenderer0.getBaseSeriesVisible();
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemLabelPaint((int) (byte) 100, (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator11, true);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesVisible((int) (short) 10);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.axis.ValueAxis valueAxis19 = null;
        org.jfree.chart.util.Layer layer20 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D16, rectangle2D17, categoryAxis18, valueAxis19, layer20, plotRenderingInfo21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator5);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setBasePaint(paint7, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke12 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke14, true);
        boolean boolean17 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator18);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent20 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent20);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(stroke12);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesPaint(100, paint6);
        double double8 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator13, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer9.getBaseToolTipGenerator();
        java.awt.Paint paint17 = statisticalBarRenderer9.getBaseOutlinePaint();
        java.awt.Stroke stroke18 = statisticalBarRenderer9.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke18);
        boolean boolean21 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator21, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setBase((-1.0d));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke30 = statisticalBarRenderer28.getSeriesOutlineStroke((int) (byte) 10);
        int int31 = statisticalBarRenderer28.getPassCount();
        double double32 = statisticalBarRenderer28.getUpperClip();
        double double33 = statisticalBarRenderer28.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer35.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer35.setBaseFillPaint(paint38);
        statisticalBarRenderer28.setSeriesPaint(1, paint38);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer28.getBaseNegativeItemLabelPosition();
        boolean boolean42 = statisticalBarRenderer28.getBaseCreateEntities();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator43 = statisticalBarRenderer28.getBaseURLGenerator();
        java.awt.Font font46 = statisticalBarRenderer28.getItemLabelFont(100, 100);
        boolean boolean47 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer28);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertNull(stroke30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.2d + "'", double33 == 0.2d);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(categoryURLGenerator43);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean10 = statisticalBarRenderer0.getBaseCreateEntities();
        java.awt.Paint paint12 = statisticalBarRenderer0.getSeriesPaint((int) (short) 0);
        boolean boolean13 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) false, true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator9 = statisticalBarRenderer0.getBaseToolTipGenerator();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator12 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator12, false);
        boolean boolean15 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator9);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition17);
        java.awt.Paint paint21 = statisticalBarRenderer0.getItemLabelPaint((int) (byte) -1, (int) '4');
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseFillPaint(paint10);
        statisticalBarRenderer0.setSeriesPaint(1, paint10);
        java.lang.Boolean boolean14 = statisticalBarRenderer0.getSeriesVisible(10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setItemLabelAnchorOffset(0.2d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        java.awt.Paint paint28 = null;
        statisticalBarRenderer21.setSeriesOutlinePaint((int) '4', paint28);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator30 = statisticalBarRenderer21.getBaseToolTipGenerator();
        java.awt.Paint paint32 = statisticalBarRenderer21.getSeriesPaint((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesPositiveItemLabelPosition((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer40.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener43 = null;
        boolean boolean44 = statisticalBarRenderer40.hasListener(eventListener43);
        java.awt.Paint paint47 = statisticalBarRenderer40.getItemLabelPaint((int) (byte) -1, (int) (short) 100);
        statisticalBarRenderer33.setBaseFillPaint(paint47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer49.setBaseURLGenerator(categoryURLGenerator50, false);
        int int53 = statisticalBarRenderer49.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke56 = statisticalBarRenderer54.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer54.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition60 = statisticalBarRenderer54.getSeriesPositiveItemLabelPosition((int) 'a');
        statisticalBarRenderer49.setBasePositiveItemLabelPosition(itemLabelPosition60, true);
        statisticalBarRenderer33.setBasePositiveItemLabelPosition(itemLabelPosition60);
        statisticalBarRenderer21.setBasePositiveItemLabelPosition(itemLabelPosition60);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition60, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition67 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition67, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(categoryToolTipGenerator30);
        org.junit.Assert.assertNull(paint32);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(stroke56);
        org.junit.Assert.assertNotNull(itemLabelPosition60);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer5.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font10 = statisticalBarRenderer5.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font10);
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false);
        java.awt.Paint paint17 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Stroke stroke20 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 1, (int) (short) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke4);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNull(shape13);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        java.lang.Boolean boolean7 = statisticalBarRenderer0.getSeriesVisible((int) 'a');
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.chart.plot.Marker marker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D8, categoryPlot9, valueAxis10, marker11, rectangle2D12);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getPositiveItemLabelPositionFallback();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer8.getLegendItemURLGenerator();
        java.awt.Stroke stroke15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke15);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke21 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (byte) 10);
        int int22 = statisticalBarRenderer19.getPassCount();
        double double23 = statisticalBarRenderer19.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer19.getSeriesPositiveItemLabelPosition(1);
        boolean boolean28 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (-1));
        java.awt.Font font29 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font29);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '4', categoryToolTipGenerator32, true);
        java.awt.Paint paint35 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer36.setBaseCreateEntities(true, false);
        java.awt.Font font43 = null;
        statisticalBarRenderer36.setSeriesItemLabelFont((int) '4', font43);
        java.awt.Stroke stroke45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer36.setBaseStroke(stroke45);
        statisticalBarRenderer36.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator51 = null;
        statisticalBarRenderer36.setSeriesToolTipGenerator(100, categoryToolTipGenerator51);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer53 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer53.setItemLabelAnchorOffset((-1.0d));
        double double56 = statisticalBarRenderer53.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator57 = statisticalBarRenderer53.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke59 = statisticalBarRenderer53.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer36.setErrorIndicatorStroke(stroke59);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke59, false);
        java.awt.Paint paint64 = null;
        statisticalBarRenderer0.setSeriesFillPaint(100, paint64);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(font29);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator57);
        org.junit.Assert.assertNotNull(stroke59);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setDrawBarOutline(true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, false);
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer0.hasListener(eventListener18);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) 'a', categoryToolTipGenerator6, true);
        statisticalBarRenderer0.removeAnnotations();
        java.lang.Object obj10 = statisticalBarRenderer0.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition(1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition17);
        java.lang.Boolean boolean20 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = null;
        statisticalBarRenderer21.setLegendItemToolTipGenerator(categorySeriesLabelGenerator24);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.plot.Marker marker29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        statisticalBarRenderer21.drawRangeMarker(graphics2D26, categoryPlot27, valueAxis28, marker29, rectangle2D30);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer21.setBaseToolTipGenerator(categoryToolTipGenerator32);
        statisticalBarRenderer21.setIncludeBaseInRange(true);
        java.awt.Paint paint38 = statisticalBarRenderer21.getItemOutlinePaint((int) (byte) 0, (int) (short) 100);
        statisticalBarRenderer0.setBaseFillPaint(paint38);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(paint38);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        boolean boolean15 = statisticalBarRenderer8.isSeriesItemLabelsVisible((int) (byte) 0);
        java.awt.Shape shape17 = statisticalBarRenderer8.lookupSeriesShape((int) (short) -1);
        java.lang.Boolean boolean19 = statisticalBarRenderer8.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator21 = null;
        statisticalBarRenderer20.setBaseURLGenerator(categoryURLGenerator21, false);
        int int24 = statisticalBarRenderer20.getColumnCount();
        java.awt.Paint paint25 = statisticalBarRenderer20.getBaseFillPaint();
        org.jfree.chart.LegendItem legendItem28 = statisticalBarRenderer20.getLegendItem((int) (byte) 1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer20.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = statisticalBarRenderer20.getLegendItemLabelGenerator();
        statisticalBarRenderer8.setLegendItemURLGenerator(categorySeriesLabelGenerator31);
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator31);
        java.lang.Boolean boolean35 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 1);
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 0, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(legendItem28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator31);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Paint paint3 = statisticalBarRenderer0.getBaseFillPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        boolean boolean8 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 0, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator1 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator1);
        boolean boolean5 = statisticalBarRenderer0.getItemVisible((-1), (int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator6 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        int int11 = statisticalBarRenderer8.getPassCount();
        java.awt.Font font13 = statisticalBarRenderer8.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition14);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean19 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(font13);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        int int5 = statisticalBarRenderer0.getColumnCount();
        java.awt.Paint paint6 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer8.hasListener(eventListener14);
        java.awt.Shape shape18 = statisticalBarRenderer8.getItemShape((int) (short) 10, (int) (byte) -1);
        statisticalBarRenderer0.setSeriesShape((int) '4', shape18, true);
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 1);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        java.awt.Paint paint24 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer26.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer26.setDrawBarOutline(false);
        java.lang.Boolean boolean32 = statisticalBarRenderer26.getSeriesVisibleInLegend((int) ' ');
        statisticalBarRenderer26.setBaseCreateEntities(false, false);
        boolean boolean36 = statisticalBarRenderer26.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer37.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke42 = statisticalBarRenderer37.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer37.setBaseItemLabelGenerator(categoryItemLabelGenerator43);
        java.awt.Stroke stroke47 = statisticalBarRenderer37.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer48.setAutoPopulateSeriesOutlinePaint(false);
        int int53 = statisticalBarRenderer48.getRowCount();
        java.awt.Shape shape54 = statisticalBarRenderer48.getBaseShape();
        statisticalBarRenderer37.setBaseShape(shape54);
        java.awt.Paint paint56 = statisticalBarRenderer37.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition58 = statisticalBarRenderer37.getSeriesNegativeItemLabelPosition((int) ' ');
        java.awt.Font font59 = statisticalBarRenderer37.getBaseItemLabelFont();
        statisticalBarRenderer26.setBaseItemLabelFont(font59, false);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font59);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(paint22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(shape54);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNotNull(itemLabelPosition58);
        org.junit.Assert.assertNotNull(font59);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        boolean boolean25 = statisticalBarRenderer0.isItemLabelVisible((int) '#', 10);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        int int5 = statisticalBarRenderer0.getRowCount();
        java.awt.Shape shape6 = statisticalBarRenderer0.getBaseShape();
        java.awt.Font font9 = statisticalBarRenderer0.getItemLabelFont((int) (short) 10, 1);
        boolean boolean10 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(font9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator4 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke8 = statisticalBarRenderer6.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer6.setAutoPopulateSeriesOutlinePaint(false);
        int int11 = statisticalBarRenderer6.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer12.hasListener(eventListener15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke19 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (byte) 10);
        int int20 = statisticalBarRenderer17.getPassCount();
        java.awt.Font font22 = statisticalBarRenderer17.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer17.getBasePositiveItemLabelPosition();
        statisticalBarRenderer12.setNegativeItemLabelPositionFallback(itemLabelPosition23);
        statisticalBarRenderer6.setBaseNegativeItemLabelPosition(itemLabelPosition23, false);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition23);
        boolean boolean28 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        statisticalBarRenderer0.setSeriesVisible((int) ' ', (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer0.getNegativeItemLabelPosition(1, (int) (short) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, false);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator4);
        org.junit.Assert.assertNull(stroke8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(stroke19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(font22);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer9.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer15.setBaseURLGenerator(categoryURLGenerator16, false);
        int int19 = statisticalBarRenderer15.getColumnCount();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer9.setBaseItemLabelPaint(paint20);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        boolean boolean24 = statisticalBarRenderer9.removeAnnotation(categoryAnnotation23);
        java.awt.Paint paint25 = statisticalBarRenderer9.getBasePaint();
        statisticalBarRenderer0.setBasePaint(paint25, true);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent12 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        int int17 = statisticalBarRenderer14.getPassCount();
        boolean boolean18 = statisticalBarRenderer14.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke24 = statisticalBarRenderer22.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        int int32 = statisticalBarRenderer28.getColumnCount();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setErrorIndicatorPaint(paint33);
        statisticalBarRenderer22.setBaseItemLabelPaint(paint33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke38 = statisticalBarRenderer36.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke40 = statisticalBarRenderer36.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer22.setBaseStroke(stroke40, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer43.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener46 = null;
        boolean boolean47 = statisticalBarRenderer43.hasListener(eventListener46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        int int51 = statisticalBarRenderer48.getPassCount();
        java.awt.Font font53 = statisticalBarRenderer48.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer48.getBasePositiveItemLabelPosition();
        statisticalBarRenderer43.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer22.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        boolean boolean63 = statisticalBarRenderer0.getItemVisible(0, (int) (short) 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator65 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator66 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(stroke24);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(stroke38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator65);
        org.junit.Assert.assertNull(categoryURLGenerator66);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        double double8 = statisticalBarRenderer0.getItemMargin();
        boolean boolean10 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.2d + "'", double8 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        java.awt.Shape shape16 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        java.lang.Object obj19 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(shape16);
        org.junit.Assert.assertNotNull(obj19);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) true, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 0, categoryToolTipGenerator17);
        java.awt.Paint paint20 = statisticalBarRenderer0.lookupSeriesPaint(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(itemLabelPosition21);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        double double4 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation8 = null;
        boolean boolean9 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation8);
        boolean boolean11 = statisticalBarRenderer0.isSeriesVisible(1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        boolean boolean6 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = null;
        statisticalBarRenderer7.setBaseURLGenerator(categoryURLGenerator8, false);
        int int11 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        int int15 = statisticalBarRenderer12.getPassCount();
        double double16 = statisticalBarRenderer12.getUpperClip();
        double double17 = statisticalBarRenderer12.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer19.setBaseFillPaint(paint22);
        statisticalBarRenderer12.setSeriesPaint(1, paint22);
        statisticalBarRenderer7.setBaseFillPaint(paint22, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier27 = statisticalBarRenderer7.getDrawingSupplier();
        java.awt.Stroke stroke28 = statisticalBarRenderer7.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke28, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(drawingSupplier27);
        org.junit.Assert.assertNotNull(stroke28);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) ' ', (int) (short) 1);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent23 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent23);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) '#');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 100);
        java.awt.Shape shape30 = statisticalBarRenderer0.getSeriesShape(0);
        statisticalBarRenderer0.setMinimumBarLength(1.0d);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator36 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(0, categoryToolTipGenerator36);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, 0);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNull(categoryToolTipGenerator28);
        org.junit.Assert.assertNull(shape30);
        org.junit.Assert.assertNull(categoryItemLabelGenerator40);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Paint paint7 = null;
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((int) (byte) -1, (int) (byte) 1);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setItemLabelAnchorOffset((-1.0d));
        double double18 = statisticalBarRenderer15.getBase();
        java.awt.Font font19 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont(10, font19, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23, false);
        int int26 = statisticalBarRenderer22.getColumnCount();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setErrorIndicatorPaint(paint27);
        statisticalBarRenderer0.setBaseOutlinePaint(paint27, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(legendItem11);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(paint27);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        double double7 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 1, (int) ' ');
        java.awt.Paint paint11 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier12 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(drawingSupplier12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.removeAnnotations();
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 10, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke13 = statisticalBarRenderer11.getSeriesOutlineStroke((int) (byte) 10);
        int int14 = statisticalBarRenderer11.getPassCount();
        double double15 = statisticalBarRenderer11.getUpperClip();
        double double16 = statisticalBarRenderer11.getItemMargin();
        java.lang.Boolean boolean18 = statisticalBarRenderer11.getSeriesVisibleInLegend((int) (byte) 0);
        boolean boolean19 = statisticalBarRenderer11.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer11.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint24 = statisticalBarRenderer11.getItemOutlinePaint(10, (int) (byte) 100);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 10, paint24, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator28 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(100, categoryToolTipGenerator28);
        org.junit.Assert.assertNull(stroke13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer0.setBaseStroke(stroke9);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator14);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        java.awt.Shape shape6 = null;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 100, shape6, true);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean13 = statisticalBarRenderer12.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer12.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator15, false);
        java.awt.Paint paint19 = statisticalBarRenderer12.getSeriesOutlinePaint(10);
        org.jfree.chart.LegendItem legendItem22 = statisticalBarRenderer12.getLegendItem((int) (byte) 1, (int) '#');
        java.awt.Shape shape25 = statisticalBarRenderer12.getItemShape((int) (byte) 10, (int) (short) 10);
        statisticalBarRenderer0.setSeriesShape((int) (byte) 10, shape25, false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(paint19);
        org.junit.Assert.assertNull(legendItem22);
        org.junit.Assert.assertNotNull(shape25);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setMaximumBarWidth(2.0d);
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D27, categoryPlot28, valueAxis29, rectangle2D30, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator3 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator3);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.plot.Marker marker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D5, categoryPlot6, valueAxis7, marker8, rectangle2D9);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator11);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        boolean boolean16 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        int int17 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke20 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer18.setAutoPopulateSeriesOutlinePaint(false);
        int int23 = statisticalBarRenderer18.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setItemLabelAnchorOffset((-1.0d));
        java.util.EventListener eventListener27 = null;
        boolean boolean28 = statisticalBarRenderer24.hasListener(eventListener27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke31 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (byte) 10);
        int int32 = statisticalBarRenderer29.getPassCount();
        java.awt.Font font34 = statisticalBarRenderer29.getSeriesItemLabelFont((int) (short) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer29.getBasePositiveItemLabelPosition();
        statisticalBarRenderer24.setNegativeItemLabelPositionFallback(itemLabelPosition35);
        statisticalBarRenderer18.setBaseNegativeItemLabelPosition(itemLabelPosition35, false);
        java.awt.Paint paint41 = statisticalBarRenderer18.getItemOutlinePaint(0, (-1));
        statisticalBarRenderer0.setBasePaint(paint41, true);
        java.lang.Boolean boolean45 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator49 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator50 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator50, true);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(stroke20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(stroke31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNull(font34);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator49);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke10 = statisticalBarRenderer8.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer8.setBaseCreateEntities(true, false);
        java.awt.Font font15 = null;
        statisticalBarRenderer8.setSeriesItemLabelFont((int) '4', font15);
        java.awt.Stroke stroke17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer8.setBaseStroke(stroke17);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke17);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesCreateEntities(100);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke26 = statisticalBarRenderer24.getSeriesOutlineStroke((int) (byte) 10);
        int int27 = statisticalBarRenderer24.getPassCount();
        double double28 = statisticalBarRenderer24.getUpperClip();
        double double29 = statisticalBarRenderer24.getItemMargin();
        java.awt.Stroke stroke30 = statisticalBarRenderer24.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke30);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke35 = statisticalBarRenderer33.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer33.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer39.setBaseURLGenerator(categoryURLGenerator40, false);
        int int43 = statisticalBarRenderer39.getColumnCount();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer39.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer33.setBaseItemLabelPaint(paint44);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation47 = null;
        boolean boolean48 = statisticalBarRenderer33.removeAnnotation(categoryAnnotation47);
        java.awt.Paint paint49 = statisticalBarRenderer33.getBasePaint();
        statisticalBarRenderer0.setSeriesOutlinePaint(100, paint49, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator52 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator52);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator55 = statisticalBarRenderer0.getSeriesURLGenerator((int) '#');
        boolean boolean57 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier58 = statisticalBarRenderer0.getDrawingSupplier();
        boolean boolean59 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        boolean boolean61 = statisticalBarRenderer0.isSeriesItemLabelsVisible(10);
        java.awt.Stroke stroke62 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke10);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(stroke26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.2d + "'", double29 == 0.2d);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNull(stroke35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNull(categoryURLGenerator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(drawingSupplier58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(stroke62);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setItemLabelAnchorOffset((-1.0d));
        double double8 = statisticalBarRenderer5.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer5.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke11 = statisticalBarRenderer5.lookupSeriesStroke((int) 'a');
        java.awt.Paint paint12 = statisticalBarRenderer5.getBaseFillPaint();
        statisticalBarRenderer0.setBasePaint(paint12);
        statisticalBarRenderer0.setBaseSeriesVisible(false, false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = null;
        statisticalBarRenderer6.setBaseURLGenerator(categoryURLGenerator7, false);
        int int10 = statisticalBarRenderer6.getColumnCount();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setErrorIndicatorPaint(paint11);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke18 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (short) 1);
        statisticalBarRenderer0.setBaseStroke(stroke18, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator21 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator21);
        java.awt.Stroke stroke24 = statisticalBarRenderer0.getSeriesOutlineStroke((-1));
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 1, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(stroke24);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryURLGenerator10);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        int int6 = statisticalBarRenderer0.getRowCount();
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (short) 100);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getItemOutlineStroke((int) (short) -1, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke16 = statisticalBarRenderer14.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer14.setBaseCreateEntities(false);
        statisticalBarRenderer14.setBaseSeriesVisible(true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer22.setBaseURLGenerator(categoryURLGenerator23, false);
        int int26 = statisticalBarRenderer22.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke29 = statisticalBarRenderer27.getSeriesOutlineStroke((int) (byte) 10);
        int int30 = statisticalBarRenderer27.getPassCount();
        double double31 = statisticalBarRenderer27.getUpperClip();
        double double32 = statisticalBarRenderer27.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer34.setBaseFillPaint(paint37);
        statisticalBarRenderer27.setSeriesPaint(1, paint37);
        statisticalBarRenderer22.setBaseFillPaint(paint37, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator42 = statisticalBarRenderer22.getBaseToolTipGenerator();
        java.awt.Paint paint43 = statisticalBarRenderer22.getBaseItemLabelPaint();
        statisticalBarRenderer14.setBaseFillPaint(paint43, true);
        statisticalBarRenderer0.setBaseFillPaint(paint43, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator50 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 1, 0);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator8);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(stroke16);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(stroke29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNull(categoryToolTipGenerator42);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(categoryToolTipGenerator50);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (byte) 100);
        java.awt.Stroke stroke12 = statisticalBarRenderer0.getItemStroke((int) (short) 100, (int) (short) 0);
        boolean boolean13 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint14 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseOutlinePaint();
        java.awt.Font font10 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator11, true);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNull(font10);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.LegendItem legendItem7 = statisticalBarRenderer0.getLegendItem(0, (int) '#');
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint((int) '4');
        double double10 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(legendItem7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke7 = statisticalBarRenderer5.getSeriesOutlineStroke((int) (byte) 10);
        int int8 = statisticalBarRenderer5.getPassCount();
        double double9 = statisticalBarRenderer5.getUpperClip();
        double double10 = statisticalBarRenderer5.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setBaseFillPaint(paint15);
        statisticalBarRenderer5.setSeriesPaint(1, paint15);
        statisticalBarRenderer0.setBaseFillPaint(paint15, true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier20 = statisticalBarRenderer0.getDrawingSupplier();
        java.awt.Paint paint22 = statisticalBarRenderer0.getSeriesPaint((-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.2d + "'", double10 == 0.2d);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(drawingSupplier20);
        org.junit.Assert.assertNull(paint22);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator1 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator1, false);
        int int4 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPosition((int) (short) -1, (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer8.setBaseURLGenerator(categoryURLGenerator9, false);
        double double12 = statisticalBarRenderer8.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator13 = statisticalBarRenderer8.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator13);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator13);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertNull(categoryURLGenerator17);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font7 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '4', font7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke11 = statisticalBarRenderer9.getSeriesOutlineStroke((int) (byte) 10);
        java.awt.Stroke stroke13 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (short) 1);
        boolean boolean14 = statisticalBarRenderer0.equals((java.lang.Object) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        double double16 = statisticalBarRenderer0.getItemMargin();
        java.awt.Paint paint18 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) '4');
        java.awt.Paint paint20 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke23 = statisticalBarRenderer21.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer21.setBaseCreateEntities(true, false);
        java.awt.Paint paint28 = null;
        statisticalBarRenderer21.setSeriesOutlinePaint((int) '4', paint28);
        org.jfree.chart.LegendItem legendItem32 = statisticalBarRenderer21.getLegendItem((int) (byte) -1, (int) (byte) 1);
        boolean boolean33 = statisticalBarRenderer21.getAutoPopulateSeriesPaint();
        java.awt.Font font34 = statisticalBarRenderer21.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font34);
        int int36 = statisticalBarRenderer0.getPassCount();
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.2d + "'", double16 == 0.2d);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(paint20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(legendItem32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setItemLabelAnchorOffset((-1.0d));
        java.awt.Paint paint3 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseFillPaint(paint3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) -1);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        int int3 = statisticalBarRenderer0.getPassCount();
        double double4 = statisticalBarRenderer0.getUpperClip();
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemStroke((int) (short) 0, (int) (short) 1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(categoryPlot6);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator4 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) 'a', categoryItemLabelGenerator4, false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke7);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator9, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke14 = statisticalBarRenderer12.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer12.setBaseCreateEntities(true, false);
        java.awt.Font font19 = null;
        statisticalBarRenderer12.setSeriesItemLabelFont((int) '4', font19);
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        statisticalBarRenderer12.setBaseStroke(stroke21);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer12.getBasePositiveItemLabelPosition();
        org.jfree.chart.LegendItem legendItem26 = statisticalBarRenderer12.getLegendItem((int) (short) 10, (int) (short) -1);
        double double27 = statisticalBarRenderer12.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator29 = null;
        statisticalBarRenderer28.setBaseURLGenerator(categoryURLGenerator29, false);
        double double32 = statisticalBarRenderer28.getBase();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer28.getLegendItemLabelGenerator();
        statisticalBarRenderer12.setLegendItemLabelGenerator(categorySeriesLabelGenerator33);
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke39 = statisticalBarRenderer37.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer37.setBaseSeriesVisibleInLegend(false);
        java.awt.Stroke stroke42 = statisticalBarRenderer37.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer37.setBaseItemLabelGenerator(categoryItemLabelGenerator43);
        java.awt.Stroke stroke47 = statisticalBarRenderer37.getItemStroke((int) (byte) -1, 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke50 = statisticalBarRenderer48.getSeriesOutlineStroke((int) (byte) 10);
        statisticalBarRenderer48.setAutoPopulateSeriesOutlinePaint(false);
        int int53 = statisticalBarRenderer48.getRowCount();
        java.awt.Shape shape54 = statisticalBarRenderer48.getBaseShape();
        statisticalBarRenderer37.setBaseShape(shape54);
        java.awt.Paint paint56 = statisticalBarRenderer37.getBasePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition58 = statisticalBarRenderer37.getSeriesNegativeItemLabelPosition((int) ' ');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition58);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition61 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) -1);
        org.junit.Assert.assertNull(stroke2);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNull(legendItem26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator33);
        org.junit.Assert.assertNull(stroke39);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertNotNull(stroke47);
        org.junit.Assert.assertNull(stroke50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(shape54);
        org.junit.Assert.assertNotNull(paint56);
        org.junit.Assert.assertNotNull(itemLabelPosition58);
        org.junit.Assert.assertNotNull(itemLabelPosition61);
    }
}

