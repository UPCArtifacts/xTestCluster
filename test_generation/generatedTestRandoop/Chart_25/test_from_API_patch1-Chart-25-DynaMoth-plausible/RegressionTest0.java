import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.awt.Stroke stroke0 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE;
        org.junit.Assert.assertNotNull(stroke0);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        double double0 = org.jfree.chart.renderer.category.BarRenderer.DEFAULT_ITEM_MARGIN;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 0.2d + "'", double0 == 0.2d);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        double double0 = org.jfree.chart.renderer.category.BarRenderer.BAR_OUTLINE_WIDTH_THRESHOLD;
        org.junit.Assert.assertTrue("'" + double0 + "' != '" + 3.0d + "'", double0 == 3.0d);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        java.awt.Font font0 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        java.lang.Class<?> wildcardClass1 = font0.getClass();
        org.junit.Assert.assertNotNull(font0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.awt.Shape shape0 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        java.lang.Class<?> wildcardClass1 = shape0.getClass();
        org.junit.Assert.assertNotNull(shape0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) -1, itemLabelPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) -1, categoryToolTipGenerator8, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryToolTipGenerator6);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer6.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer6.getSeriesPositiveItemLabelPosition((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) -1, itemLabelPosition9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Graphics2D graphics2D4 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D4, categoryPlot5, categoryAxis6, categoryMarker7, rectangle2D8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((-1), categoryItemLabelGenerator5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        java.awt.Font font12 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer0.hasListener(eventListener13);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator12);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation20 = null;
        org.jfree.chart.util.Layer layer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation20, layer21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryToolTipGenerator6);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        boolean boolean18 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer20.setSeriesStroke((int) (short) 100, stroke27);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((-1), stroke27, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        boolean boolean14 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation13);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener1 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint9);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        statisticalBarRenderer0.setBase(0.2d);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState24 = null;
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.data.category.CategoryDataset categoryDataset29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D23, categoryItemRendererState24, rectangle2D25, categoryPlot26, categoryAxis27, valueAxis28, categoryDataset29, (int) (short) 10, (int) (short) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer21.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        org.jfree.data.category.CategoryDataset categoryDataset26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range27 = statisticalBarRenderer0.findRangeBounds(categoryDataset26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        double double27 = statisticalBarRenderer24.getItemLabelAnchorOffset();
        statisticalBarRenderer24.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint31 = statisticalBarRenderer24.lookupSeriesOutlinePaint(0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((-1), paint31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2.0d + "'", double27 == 2.0d);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        java.awt.Stroke stroke8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (byte) -1, stroke8, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(stroke8);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint14 = statisticalBarRenderer11.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint14, true);
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(paint14);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis11 = null;
        org.jfree.chart.axis.ValueAxis valueAxis12 = null;
        org.jfree.data.category.CategoryDataset categoryDataset13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D7, categoryItemRendererState8, rectangle2D9, categoryPlot10, categoryAxis11, valueAxis12, categoryDataset13, (int) (byte) 10, (int) '4', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        java.awt.Shape shape10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 1, shape10, true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) -1, font22, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer11.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer11.setSeriesShape((int) (short) 1, shape20);
        java.lang.Boolean boolean23 = statisticalBarRenderer11.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        boolean boolean27 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer28.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer24.setBasePositiveItemLabelPosition(itemLabelPosition31);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition31);
        java.awt.Paint paint36 = statisticalBarRenderer11.getItemPaint(10, (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((int) (byte) -1, paint36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertNotNull(paint36);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Font font2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 1, font2);
        statisticalBarRenderer0.setSeriesCreateEntities((int) ' ', (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(font2);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer11.setSeriesPaint(10, paint26);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) -1, paint26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = statisticalBarRenderer11.getSeriesURLGenerator(10);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getItemStroke((int) 'a', (int) ' ');
        statisticalBarRenderer0.setSeriesOutlineStroke(1, stroke20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setBaseOutlinePaint(paint24);
        boolean boolean26 = statisticalBarRenderer23.isDrawBarOutline();
        boolean boolean27 = statisticalBarRenderer23.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        java.awt.Stroke stroke36 = statisticalBarRenderer29.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer38.setBaseOutlinePaint(paint39);
        statisticalBarRenderer29.setSeriesPaint((int) 'a', paint39, false);
        statisticalBarRenderer23.setSeriesFillPaint((int) (short) 100, paint39);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((int) (short) -1, paint39, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(categoryURLGenerator17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNotNull(paint39);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        statisticalBarRenderer7.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition9, false);
        java.awt.Stroke stroke14 = statisticalBarRenderer7.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = statisticalBarRenderer7.getPlot();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setBaseItemLabelPaint(paint16);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) -1, paint16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(categoryPlot15);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Graphics2D graphics2D2 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot3 = null;
        java.awt.geom.Rectangle2D rectangle2D4 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D2, categoryPlot3, rectangle2D4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        org.jfree.chart.axis.ValueAxis valueAxis8 = null;
        org.jfree.chart.plot.Marker marker9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D6, categoryPlot7, valueAxis8, marker9, rectangle2D10);
        boolean boolean12 = statisticalBarRenderer0.isDrawBarOutline();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(100);
        org.jfree.data.category.CategoryDataset categoryDataset7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range8 = statisticalBarRenderer0.findRangeBounds(categoryDataset7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem(1, 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((int) (byte) -1, categoryURLGenerator13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(legendItem11);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Shape shape6 = statisticalBarRenderer0.getSeriesShape((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Paint paint13 = statisticalBarRenderer8.getBaseItemLabelPaint();
        statisticalBarRenderer8.setBaseCreateEntities(false, false);
        boolean boolean17 = statisticalBarRenderer8.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer19.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint22 = statisticalBarRenderer19.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer8.setSeriesOutlinePaint(0, paint22, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) -1, paint22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(shape6);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        double double26 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2.0d + "'", double26 == 2.0d);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer21.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator37 = statisticalBarRenderer32.getLegendItemToolTipGenerator();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer32.setErrorIndicatorPaint(paint38);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator37);
        org.junit.Assert.assertNotNull(paint38);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition15);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 0);
        java.awt.Graphics2D graphics2D19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis21 = null;
        org.jfree.chart.axis.ValueAxis valueAxis22 = null;
        org.jfree.chart.util.Layer layer23 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D19, rectangle2D20, categoryAxis21, valueAxis22, layer23, plotRenderingInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertNull(stroke18);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator7 = statisticalBarRenderer0.getURLGenerator((int) (short) 0, (int) (short) -1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(categoryURLGenerator7);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        boolean boolean5 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 10);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        double double9 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint17 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 0, paint17, true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.0d + "'", double9 == 2.0d);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Font font25 = statisticalBarRenderer0.getItemLabelFont((int) '#', (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(font25);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        java.awt.Stroke stroke27 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 100);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(stroke27);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer11.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer11.setSeriesShape((int) (short) 1, shape20);
        java.lang.Boolean boolean23 = statisticalBarRenderer11.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        boolean boolean27 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer28.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer24.setBasePositiveItemLabelPosition(itemLabelPosition31);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition31);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = null;
        statisticalBarRenderer36.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition38, false);
        java.awt.Stroke stroke43 = statisticalBarRenderer36.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer36.setSeriesShape((int) (short) 1, shape45);
        java.lang.Boolean boolean48 = statisticalBarRenderer36.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = null;
        statisticalBarRenderer50.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition52, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator55 = statisticalBarRenderer50.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke57 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer50.setSeriesStroke((int) (short) 100, stroke57);
        statisticalBarRenderer36.setSeriesOutlineStroke((int) (byte) 10, stroke57);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNotNull(shape45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator55);
        org.junit.Assert.assertNotNull(stroke57);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryPlot8);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) true, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer14.setSeriesStroke((int) (short) 100, stroke21);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 10, stroke21);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis13 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D11, categoryPlot12, categoryAxis13, categoryMarker14, rectangle2D15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getItemLabelGenerator((int) (byte) 10, (int) '4');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.data.category.CategoryDataset categoryDataset9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range10 = statisticalBarRenderer0.findRangeBounds(categoryDataset9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator8);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Shape shape7 = statisticalBarRenderer0.getItemShape((int) (short) -1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer9.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean13 = statisticalBarRenderer9.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer9.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint15 = statisticalBarRenderer9.getBaseFillPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer9.getBaseToolTipGenerator();
        java.awt.Stroke stroke18 = statisticalBarRenderer9.lookupSeriesStroke((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNull(itemLabelPosition10);
        org.junit.Assert.assertNotNull(itemLabelPosition12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean11 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.data.category.CategoryDataset categoryDataset14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range15 = statisticalBarRenderer0.findRangeBounds(categoryDataset14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D16, categoryPlot17, rectangle2D18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer22.setSeriesOutlinePaint(10, paint28, true);
        java.awt.Shape shape32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer22.setSeriesShape((int) (byte) 1, shape32, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(shape32);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean11 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        org.jfree.chart.axis.ValueAxis valueAxis16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D14, categoryPlot15, valueAxis16, rectangle2D17, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        statisticalBarRenderer0.setMinimumBarLength(0.0d);
        java.awt.Font font7 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setSeriesPaint(0, paint13);
        java.lang.Object obj15 = null;
        boolean boolean16 = statisticalBarRenderer9.equals(obj15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer18.getLegendItemToolTipGenerator();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer18.setErrorIndicatorPaint(paint24);
        statisticalBarRenderer9.setSeriesPaint(10, paint24);
        boolean boolean27 = statisticalBarRenderer9.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        boolean boolean31 = statisticalBarRenderer28.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer32.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer32.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer28.setBasePositiveItemLabelPosition(itemLabelPosition35);
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition35);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) -1, itemLabelPosition35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(font7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer14.setSeriesStroke((int) (short) 100, stroke21);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 10, stroke21);
        java.awt.Stroke stroke26 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, (int) '4');
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertNotNull(stroke26);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        int int8 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) -1, categoryItemLabelGenerator10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Stroke stroke11 = statisticalBarRenderer0.lookupSeriesOutlineStroke(0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12);
        double double14 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D15, categoryPlot16, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.0d + "'", double14 == 2.0d);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setBaseOutlinePaint(paint11);
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer10.setSeriesPaint(0, paint14);
        java.lang.Object obj16 = null;
        boolean boolean17 = statisticalBarRenderer10.equals(obj16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = statisticalBarRenderer19.getLegendItemToolTipGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer19.setErrorIndicatorPaint(paint25);
        statisticalBarRenderer10.setSeriesPaint(10, paint25);
        java.awt.Paint paint28 = statisticalBarRenderer10.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint28);
        double double30 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape9 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 10);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisible(1);
        int int12 = statisticalBarRenderer0.getPassCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer13.setSeriesPaint(0, paint17);
        java.lang.Object obj19 = null;
        boolean boolean20 = statisticalBarRenderer13.equals(obj19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = null;
        statisticalBarRenderer22.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition24, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer22.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer13.setSeriesPaint(10, paint28);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer13.setLegendItemToolTipGenerator(categorySeriesLabelGenerator31);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = statisticalBarRenderer34.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer34.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer34.getSeriesNegativeItemLabelPosition((int) 'a');
        statisticalBarRenderer13.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition42);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition42);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(categoryPlot38);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        boolean boolean8 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer14.setSeriesStroke((int) (short) 100, stroke21);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 10, stroke21);
        java.awt.Graphics2D graphics2D24 = null;
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState29 = statisticalBarRenderer0.initialise(graphics2D24, rectangle2D25, categoryPlot26, (int) (byte) -1, plotRenderingInfo28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((int) (short) -1, (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Paint paint11 = statisticalBarRenderer6.getBaseItemLabelPaint();
        statisticalBarRenderer6.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator15 = statisticalBarRenderer6.getLegendItemURLGenerator();
        java.lang.Boolean boolean17 = statisticalBarRenderer6.getSeriesVisibleInLegend((int) (short) 1);
        java.awt.Stroke stroke19 = statisticalBarRenderer6.lookupSeriesStroke((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) -1, stroke19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(stroke19);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        boolean boolean9 = statisticalBarRenderer0.getItemCreateEntity((int) '4', (int) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 10);
        java.awt.Graphics2D graphics2D12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState17 = statisticalBarRenderer0.initialise(graphics2D12, rectangle2D13, categoryPlot14, 10, plotRenderingInfo16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesFillPaint((int) ' ');
        org.jfree.chart.LegendItem legendItem14 = statisticalBarRenderer0.getLegendItem((int) (short) 1, 1);
        java.lang.Boolean boolean16 = statisticalBarRenderer0.getSeriesCreateEntities((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertNull(legendItem14);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Stroke stroke6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((-1), stroke6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(itemLabelPosition4);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 100);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.ValueAxis valueAxis14 = null;
        java.awt.geom.Rectangle2D rectangle2D15 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D12, categoryPlot13, valueAxis14, rectangle2D15, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = null;
        statisticalBarRenderer21.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition23, false);
        java.awt.Stroke stroke28 = statisticalBarRenderer21.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer21.setSeriesShape((int) (short) 1, shape30);
        java.lang.Boolean boolean33 = statisticalBarRenderer21.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setBaseOutlinePaint(paint35);
        boolean boolean37 = statisticalBarRenderer34.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer38.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer38.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer34.setBasePositiveItemLabelPosition(itemLabelPosition41);
        statisticalBarRenderer21.setBaseNegativeItemLabelPosition(itemLabelPosition41);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 0, itemLabelPosition41);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator46 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 100);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(shape30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
        org.junit.Assert.assertNull(categoryToolTipGenerator46);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D16, categoryItemRendererState17, rectangle2D18, categoryPlot19, categoryAxis20, valueAxis21, categoryDataset22, 100, (int) ' ', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        java.awt.Paint paint24 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker28 = null;
        java.awt.geom.Rectangle2D rectangle2D29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D25, categoryPlot26, categoryAxis27, categoryMarker28, rectangle2D29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer7.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer7.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        int int13 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        boolean boolean18 = statisticalBarRenderer15.isDrawBarOutline();
        statisticalBarRenderer15.setDrawBarOutline(false);
        java.awt.Stroke stroke22 = null;
        statisticalBarRenderer15.setSeriesOutlineStroke((int) (short) 0, stroke22, true);
        java.awt.Paint paint27 = statisticalBarRenderer15.getItemPaint(10, (-1));
        java.awt.Shape shape29 = statisticalBarRenderer15.getSeriesShape((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = statisticalBarRenderer30.getPlot();
        java.awt.Stroke stroke37 = statisticalBarRenderer30.getItemOutlineStroke(1, 100);
        statisticalBarRenderer15.setBaseStroke(stroke37);
        statisticalBarRenderer7.setSeriesOutlineStroke(100, stroke37, false);
        statisticalBarRenderer0.setBaseStroke(stroke37);
        java.awt.Graphics2D graphics2D42 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot43 = null;
        java.awt.geom.Rectangle2D rectangle2D44 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D42, categoryPlot43, rectangle2D44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(itemLabelPosition8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNull(shape29);
        org.junit.Assert.assertNull(categoryPlot34);
        org.junit.Assert.assertNotNull(stroke37);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemFillPaint(1, (int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        statisticalBarRenderer13.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer13.getSeriesToolTipGenerator((-1));
        boolean boolean21 = statisticalBarRenderer13.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseOutlinePaint(paint23);
        statisticalBarRenderer13.setBaseFillPaint(paint23, true);
        statisticalBarRenderer0.setBasePaint(paint23);
        boolean boolean29 = statisticalBarRenderer0.isSeriesVisible(0);
        boolean boolean30 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation31 = null;
        org.jfree.chart.util.Layer layer32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation31, layer32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setBaseOutlinePaint(paint6);
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer5.setSeriesPaint(0, paint9);
        java.lang.Object obj11 = null;
        boolean boolean12 = statisticalBarRenderer5.equals(obj11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer5.setSeriesPaint(10, paint20);
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 10, paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        java.awt.Paint paint29 = statisticalBarRenderer24.getBaseItemLabelPaint();
        statisticalBarRenderer24.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer24.getLegendItemURLGenerator();
        java.awt.Stroke stroke35 = statisticalBarRenderer24.lookupSeriesOutlineStroke(0);
        statisticalBarRenderer0.setBaseStroke(stroke35);
        int int37 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator33);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition15);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 0);
        java.awt.Graphics2D graphics2D19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState24 = statisticalBarRenderer0.initialise(graphics2D19, rectangle2D20, categoryPlot21, 0, plotRenderingInfo23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertNull(stroke18);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator6 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setBaseOutlinePaint(paint8);
        boolean boolean10 = statisticalBarRenderer7.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.util.EventListener eventListener16 = null;
        boolean boolean17 = statisticalBarRenderer11.hasListener(eventListener16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer11.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator19);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer11.getSeriesItemLabelGenerator(0);
        java.awt.Font font23 = statisticalBarRenderer11.getBaseItemLabelFont();
        statisticalBarRenderer7.setBaseItemLabelFont(font23);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = null;
        statisticalBarRenderer7.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator26);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer28.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer7.setNegativeItemLabelPositionFallback(itemLabelPosition31);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition31);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator6);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
        org.junit.Assert.assertNotNull(font23);
        org.junit.Assert.assertNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer12 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer12);
        java.lang.Class<?> wildcardClass14 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        java.awt.Graphics2D graphics2D10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState15 = statisticalBarRenderer0.initialise(graphics2D10, rectangle2D11, categoryPlot12, 0, plotRenderingInfo14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer5.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition7, false);
        java.awt.Stroke stroke12 = statisticalBarRenderer5.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer5.setSeriesShape((int) (short) 1, shape14);
        boolean boolean16 = statisticalBarRenderer5.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = statisticalBarRenderer5.getPlot();
        statisticalBarRenderer5.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer5.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition22);
        boolean boolean24 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryPlot17);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition18, false);
        java.awt.Stroke stroke23 = statisticalBarRenderer16.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer16.setSeriesShape((int) (short) 1, shape25);
        java.lang.Boolean boolean28 = statisticalBarRenderer16.getSeriesVisible((int) (byte) 0);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer31.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer31.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setBaseOutlinePaint(paint37);
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer36.setSeriesPaint(0, paint40);
        java.lang.Object obj42 = null;
        boolean boolean43 = statisticalBarRenderer36.equals(obj42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = null;
        statisticalBarRenderer45.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition47, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator50 = statisticalBarRenderer45.getLegendItemToolTipGenerator();
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer45.setErrorIndicatorPaint(paint51);
        statisticalBarRenderer36.setSeriesPaint(10, paint51);
        statisticalBarRenderer31.setSeriesPaint((int) (byte) 10, paint51);
        statisticalBarRenderer16.setBaseItemLabelPaint(paint51);
        statisticalBarRenderer0.setBaseOutlinePaint(paint51);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) '#');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(itemLabelPosition32);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator50);
        org.junit.Assert.assertNotNull(paint51);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer12 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator14);
        java.awt.Graphics2D graphics2D16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState21 = statisticalBarRenderer0.initialise(graphics2D16, rectangle2D17, categoryPlot18, (int) (short) -1, plotRenderingInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) ' ');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer9 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer9);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 10, (java.lang.Boolean) false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint18 = statisticalBarRenderer0.getSeriesOutlinePaint((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false, false);
        java.awt.Font font24 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        boolean boolean25 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        double double26 = statisticalBarRenderer0.getBase();
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 100, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertNull(font24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition15);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 1L);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        boolean boolean5 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 100, categoryURLGenerator5);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer8.hasListener(eventListener13);
        boolean boolean15 = statisticalBarRenderer8.getAutoPopulateSeriesFillPaint();
        double double16 = statisticalBarRenderer8.getItemLabelAnchorOffset();
        java.awt.Paint paint17 = statisticalBarRenderer8.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint17, true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer20 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer20);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.0d + "'", double16 == 2.0d);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean11 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer24.getLegendItemToolTipGenerator();
        double double30 = statisticalBarRenderer24.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = null;
        statisticalBarRenderer24.setBaseToolTipGenerator(categoryToolTipGenerator31);
        java.awt.Stroke stroke34 = statisticalBarRenderer24.lookupSeriesOutlineStroke((int) 'a');
        statisticalBarRenderer0.setSeriesStroke((int) (short) 10, stroke34, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        java.awt.Stroke stroke45 = statisticalBarRenderer38.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot46 = statisticalBarRenderer38.getPlot();
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer38.setBaseItemLabelPaint(paint47);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) -1, paint47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(stroke45);
        org.junit.Assert.assertNull(categoryPlot46);
        org.junit.Assert.assertNotNull(paint47);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        int int8 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryPlot12);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
        org.junit.Assert.assertNull(itemLabelPosition18);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean2 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 1);
        java.awt.Paint paint3 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier4 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNull(drawingSupplier4);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer7.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer7.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) 10, itemLabelPosition10);
        java.awt.Graphics2D graphics2D12 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis14 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D12, categoryPlot13, categoryAxis14, categoryMarker15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(itemLabelPosition8);
        org.junit.Assert.assertNotNull(itemLabelPosition10);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        java.awt.Shape shape5 = statisticalBarRenderer0.lookupSeriesShape(0);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (byte) 100);
        boolean boolean9 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 100);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        statisticalBarRenderer0.setItemMargin((double) (byte) 1);
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition15);
        java.awt.Graphics2D graphics2D17 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        java.awt.geom.Rectangle2D rectangle2D19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D17, categoryPlot18, rectangle2D19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        double double60 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Stroke stroke63 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, (int) (byte) -1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2.0d + "'", double60 == 2.0d);
        org.junit.Assert.assertNotNull(stroke63);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis20 = null;
        org.jfree.chart.axis.ValueAxis valueAxis21 = null;
        org.jfree.data.category.CategoryDataset categoryDataset22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D16, categoryItemRendererState17, rectangle2D18, categoryPlot19, categoryAxis20, valueAxis21, categoryDataset22, (int) (byte) -1, (int) (short) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        boolean boolean9 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNull(categoryToolTipGenerator6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.awt.Paint paint16 = statisticalBarRenderer11.getBaseItemLabelPaint();
        statisticalBarRenderer11.setBaseCreateEntities(false, false);
        boolean boolean20 = statisticalBarRenderer11.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer22.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint25 = statisticalBarRenderer22.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer11.setSeriesOutlinePaint(0, paint25, true);
        statisticalBarRenderer0.setSeriesFillPaint(1, paint25);
        java.awt.Graphics2D graphics2D29 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        java.awt.geom.Rectangle2D rectangle2D32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D29, categoryPlot30, valueAxis31, rectangle2D32, 3.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        int int12 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation13 = null;
        org.jfree.chart.util.Layer layer14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation13, layer14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer6.getPlot();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseItemLabelPaint(paint15);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator19 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Paint paint22 = statisticalBarRenderer0.getItemFillPaint((int) '4', (int) (byte) 1);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis25 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker26 = null;
        java.awt.geom.Rectangle2D rectangle2D27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D23, categoryPlot24, categoryAxis25, categoryMarker26, rectangle2D27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryToolTipGenerator19);
        org.junit.Assert.assertNotNull(paint22);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer12.setBaseOutlinePaint(paint13);
        boolean boolean15 = statisticalBarRenderer12.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = null;
        statisticalBarRenderer12.setBaseURLGenerator(categoryURLGenerator16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = null;
        statisticalBarRenderer22.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition24, false);
        java.util.EventListener eventListener27 = null;
        boolean boolean28 = statisticalBarRenderer22.hasListener(eventListener27);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer22.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator30);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator33 = statisticalBarRenderer22.getSeriesItemLabelGenerator(0);
        java.awt.Font font34 = statisticalBarRenderer22.getBaseItemLabelFont();
        statisticalBarRenderer18.setBaseItemLabelFont(font34);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer18.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator37);
        java.awt.Shape shape40 = statisticalBarRenderer18.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape41 = statisticalBarRenderer18.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer42.setBaseOutlinePaint(paint43);
        boolean boolean45 = statisticalBarRenderer42.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = null;
        statisticalBarRenderer46.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition48, false);
        java.util.EventListener eventListener51 = null;
        boolean boolean52 = statisticalBarRenderer46.hasListener(eventListener51);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator54 = null;
        statisticalBarRenderer46.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator54);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator57 = statisticalBarRenderer46.getSeriesItemLabelGenerator(0);
        java.awt.Font font58 = statisticalBarRenderer46.getBaseItemLabelFont();
        statisticalBarRenderer42.setBaseItemLabelFont(font58);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator61 = null;
        statisticalBarRenderer42.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator61);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer63 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = statisticalBarRenderer63.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition66 = statisticalBarRenderer63.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer42.setNegativeItemLabelPositionFallback(itemLabelPosition66);
        statisticalBarRenderer18.setNegativeItemLabelPositionFallback(itemLabelPosition66);
        statisticalBarRenderer12.setPositiveItemLabelPositionFallback(itemLabelPosition66);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition66);
        java.awt.Font font72 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont(1, font72);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator33);
        org.junit.Assert.assertNotNull(font34);
        org.junit.Assert.assertNotNull(shape40);
        org.junit.Assert.assertNotNull(shape41);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator57);
        org.junit.Assert.assertNotNull(font58);
        org.junit.Assert.assertNull(itemLabelPosition64);
        org.junit.Assert.assertNotNull(itemLabelPosition66);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        boolean boolean13 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint23 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint23);
        statisticalBarRenderer0.setItemMargin((double) (short) -1);
        org.jfree.data.category.CategoryDataset categoryDataset27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range28 = statisticalBarRenderer0.findRangeBounds(categoryDataset27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        double double8 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.0d + "'", double8 == 2.0d);
        org.junit.Assert.assertNotNull(paint9);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint17 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = null;
        statisticalBarRenderer22.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition24, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer22.setSeriesStroke((int) (short) 100, stroke29);
        boolean boolean31 = statisticalBarRenderer22.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setBaseOutlinePaint(paint33);
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer32.setSeriesPaint(0, paint36);
        java.lang.Object obj38 = null;
        boolean boolean39 = statisticalBarRenderer32.equals(obj38);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = null;
        statisticalBarRenderer41.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition43, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator46 = statisticalBarRenderer41.getLegendItemToolTipGenerator();
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer41.setErrorIndicatorPaint(paint47);
        statisticalBarRenderer32.setSeriesPaint(10, paint47);
        java.awt.Paint paint50 = statisticalBarRenderer32.getBaseOutlinePaint();
        statisticalBarRenderer22.setBaseFillPaint(paint50);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint50, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator46);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNotNull(paint50);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 100, (java.lang.Boolean) false, true);
        boolean boolean14 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Font font9 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 1, font9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        boolean boolean14 = statisticalBarRenderer11.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = null;
        statisticalBarRenderer15.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition17, false);
        java.util.EventListener eventListener20 = null;
        boolean boolean21 = statisticalBarRenderer15.hasListener(eventListener20);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator23 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator23);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer15.getSeriesItemLabelGenerator(0);
        java.awt.Font font27 = statisticalBarRenderer15.getBaseItemLabelFont();
        statisticalBarRenderer11.setBaseItemLabelFont(font27);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer11.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator30);
        java.awt.Shape shape33 = statisticalBarRenderer11.lookupSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBaseShape(shape33);
        org.jfree.data.category.CategoryDataset categoryDataset35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range36 = statisticalBarRenderer0.findRangeBounds(categoryDataset35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNotNull(shape33);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation6 = null;
        org.jfree.chart.util.Layer layer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation6, layer7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        boolean boolean9 = statisticalBarRenderer0.getItemCreateEntity((int) '4', (int) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 10);
        boolean boolean14 = statisticalBarRenderer0.getItemVisible((int) (byte) 0, 1);
        java.awt.Paint paint15 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis18 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D16, categoryPlot17, categoryAxis18, categoryMarker19, rectangle2D20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke17 = statisticalBarRenderer8.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Font font20 = statisticalBarRenderer8.getItemLabelFont((int) (short) 0, 10);
        statisticalBarRenderer0.setSeriesItemLabelFont(0, font20, true);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        double double20 = statisticalBarRenderer17.getItemLabelAnchorOffset();
        statisticalBarRenderer17.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint24 = statisticalBarRenderer17.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer0.setBaseFillPaint(paint24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = null;
        statisticalBarRenderer26.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition28, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer26.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition31, true);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.0d + "'", double20 == 2.0d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) false);
        statisticalBarRenderer0.setBase((double) (byte) 0);
        java.awt.Paint paint27 = null;
        statisticalBarRenderer0.setSeriesFillPaint((int) (byte) 0, paint27);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        org.junit.Assert.assertNotNull(stroke7);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = statisticalBarRenderer7.getPlot();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint13, true);
        statisticalBarRenderer0.setSeriesPaint((int) '#', paint13, true);
        boolean boolean18 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryPlot11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        java.awt.Graphics2D graphics2D23 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot24 = null;
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D23, categoryPlot24, rectangle2D25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getToolTipGenerator(0, 0);
        boolean boolean8 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator11);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer9.setSeriesOutlinePaint(10, paint15, true);
        java.awt.Shape shape19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer9.setSeriesShape((int) (byte) 1, shape19, true);
        statisticalBarRenderer0.setBaseShape(shape19, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNull(itemLabelPosition24);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) -1);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(stroke7);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(10);
        statisticalBarRenderer0.setSeriesVisible((int) (byte) 1, (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryItemLabelGenerator9);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Graphics2D graphics2D4 = null;
        java.awt.geom.Rectangle2D rectangle2D5 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis6 = null;
        org.jfree.chart.axis.ValueAxis valueAxis7 = null;
        org.jfree.chart.util.Layer layer8 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D4, rectangle2D5, categoryAxis6, valueAxis7, layer8, plotRenderingInfo9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        int int7 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator10 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 0, (int) (short) 100);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(categoryItemLabelGenerator10);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '4', categoryToolTipGenerator11);
        java.awt.Graphics2D graphics2D13 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis15 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker16 = null;
        java.awt.geom.Rectangle2D rectangle2D17 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D13, categoryPlot14, categoryAxis15, categoryMarker16, rectangle2D17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        boolean boolean13 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        java.awt.Font font15 = statisticalBarRenderer0.getSeriesItemLabelFont((int) '#');
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(font15);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28, true);
        java.awt.Shape shape32 = statisticalBarRenderer0.getSeriesShape(1);
        java.awt.Font font34 = statisticalBarRenderer0.getSeriesItemLabelFont(10);
        java.awt.Graphics2D graphics2D35 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        java.awt.geom.Rectangle2D rectangle2D38 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D35, categoryPlot36, valueAxis37, rectangle2D38, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(shape32);
        org.junit.Assert.assertNull(font34);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        boolean boolean16 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        statisticalBarRenderer18.setDrawBarOutline(false);
        java.awt.Stroke stroke25 = null;
        statisticalBarRenderer18.setSeriesOutlineStroke((int) (short) 0, stroke25, true);
        java.awt.Paint paint30 = statisticalBarRenderer18.getItemPaint(10, (-1));
        statisticalBarRenderer0.setErrorIndicatorPaint(paint30);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = statisticalBarRenderer34.getLegendItemToolTipGenerator();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer34.setErrorIndicatorPaint(paint40);
        java.awt.Stroke stroke42 = statisticalBarRenderer34.getBaseOutlineStroke();
        statisticalBarRenderer34.setBaseSeriesVisibleInLegend(false, true);
        statisticalBarRenderer34.setSeriesCreateEntities(0, (java.lang.Boolean) false);
        boolean boolean49 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer34);
        java.lang.Class<?> wildcardClass50 = statisticalBarRenderer34.getClass();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNull(paint33);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator39);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = statisticalBarRenderer0.getSeriesURLGenerator(1);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(categoryURLGenerator18);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28, true);
        java.awt.Shape shape32 = statisticalBarRenderer0.getSeriesShape(1);
        java.lang.Object obj33 = statisticalBarRenderer0.clone();
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        java.awt.geom.Rectangle2D rectangle2D37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D34, categoryPlot35, valueAxis36, rectangle2D37, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(shape32);
        org.junit.Assert.assertNotNull(obj33);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer7.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer7.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer7.setSeriesShape((int) ' ', shape14, false);
        statisticalBarRenderer0.setBaseShape(shape14, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer20.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer20.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer20.setSeriesShape((int) ' ', shape27, false);
        statisticalBarRenderer20.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint34 = statisticalBarRenderer20.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer20.getSeriesNegativeItemLabelPosition((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer37.setBaseOutlinePaint(paint38);
        double double40 = statisticalBarRenderer37.getItemLabelAnchorOffset();
        statisticalBarRenderer37.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint44 = statisticalBarRenderer37.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer20.setBaseFillPaint(paint44);
        statisticalBarRenderer0.setSeriesPaint((int) (byte) 100, paint44, true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(itemLabelPosition8);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNull(itemLabelPosition21);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2.0d + "'", double40 == 2.0d);
        org.junit.Assert.assertNotNull(paint44);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.getSeriesFillPaint((int) ' ');
        statisticalBarRenderer0.setSeriesCreateEntities(0, (java.lang.Boolean) true, false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNull(paint3);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint18 = statisticalBarRenderer0.getSeriesOutlinePaint((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false, false);
        java.awt.Font font24 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesURLGenerator((-1), categoryURLGenerator26, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertNull(font24);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer14.setSeriesStroke((int) (short) 100, stroke21);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 10, stroke21);
        double double24 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(stroke21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2.0d + "'", double24 == 2.0d);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier10 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(drawingSupplier10);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        boolean boolean27 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = null;
        statisticalBarRenderer28.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition30, false);
        java.util.EventListener eventListener33 = null;
        boolean boolean34 = statisticalBarRenderer28.hasListener(eventListener33);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator36);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = statisticalBarRenderer28.getSeriesItemLabelGenerator(0);
        java.awt.Font font40 = statisticalBarRenderer28.getBaseItemLabelFont();
        statisticalBarRenderer24.setBaseItemLabelFont(font40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer24.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator43);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer45.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer45.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer24.setNegativeItemLabelPositionFallback(itemLabelPosition48);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition48);
        boolean boolean53 = statisticalBarRenderer0.getItemCreateEntity(100, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisible((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator39);
        org.junit.Assert.assertNotNull(font40);
        org.junit.Assert.assertNull(itemLabelPosition46);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        double double58 = statisticalBarRenderer0.getMaximumBarWidth();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1.0d + "'", double58 == 1.0d);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        boolean boolean9 = statisticalBarRenderer0.getItemCreateEntity((int) '4', (int) 'a');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (short) 10);
        boolean boolean13 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) -1);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(true);
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(categoryToolTipGenerator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseOutlinePaint(paint9);
        boolean boolean11 = statisticalBarRenderer8.isDrawBarOutline();
        boolean boolean12 = statisticalBarRenderer8.getBaseItemLabelsVisible();
        int int13 = statisticalBarRenderer8.getColumnCount();
        double double14 = statisticalBarRenderer8.getItemMargin();
        java.awt.Shape shape17 = statisticalBarRenderer8.getItemShape(1, (int) (byte) 10);
        boolean boolean18 = statisticalBarRenderer0.equals((java.lang.Object) shape17);
        java.awt.Paint paint19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseItemLabelPaint(paint19, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'paint' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = statisticalBarRenderer11.getSeriesURLGenerator(10);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getItemStroke((int) 'a', (int) ' ');
        statisticalBarRenderer0.setSeriesOutlineStroke(1, stroke20);
        boolean boolean22 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        boolean boolean27 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = null;
        statisticalBarRenderer28.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition30, false);
        java.util.EventListener eventListener33 = null;
        boolean boolean34 = statisticalBarRenderer28.hasListener(eventListener33);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator36);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = statisticalBarRenderer28.getSeriesItemLabelGenerator(0);
        java.awt.Font font40 = statisticalBarRenderer28.getBaseItemLabelFont();
        statisticalBarRenderer24.setBaseItemLabelFont(font40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer24.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator43);
        java.awt.Shape shape46 = statisticalBarRenderer24.lookupSeriesShape((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((-1), shape46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(categoryURLGenerator17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator39);
        org.junit.Assert.assertNotNull(font40);
        org.junit.Assert.assertNotNull(shape46);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) 0);
        java.awt.Paint paint18 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 10);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer22.setSeriesOutlinePaint(10, paint28, true);
        java.awt.Shape shape32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer22.setSeriesShape((int) (byte) 1, shape32, true);
        java.awt.Paint paint35 = statisticalBarRenderer22.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesFillPaint(100, paint35, false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(shape32);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        java.awt.Shape shape15 = statisticalBarRenderer0.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer17.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot21 = statisticalBarRenderer17.getPlot();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer17.setSeriesOutlinePaint(10, paint23, true);
        java.awt.Shape shape27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer17.setSeriesShape((int) (byte) 1, shape27, true);
        statisticalBarRenderer17.setItemLabelAnchorOffset((double) (-1.0f));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setBaseOutlinePaint(paint33);
        boolean boolean35 = statisticalBarRenderer32.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer36.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer36.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer32.setBasePositiveItemLabelPosition(itemLabelPosition39);
        statisticalBarRenderer17.setBaseNegativeItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition39);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNull(categoryPlot21);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(itemLabelPosition37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint17 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener19 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryItemLabelGenerator18);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Font font6 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(font6);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer21.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        boolean boolean28 = statisticalBarRenderer0.isItemLabelVisible((int) (short) -1, (int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        java.util.EventListener eventListener34 = null;
        boolean boolean35 = statisticalBarRenderer29.hasListener(eventListener34);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer29.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator37);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = statisticalBarRenderer29.getSeriesItemLabelGenerator(0);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer41 = null;
        statisticalBarRenderer29.setGradientPaintTransformer(gradientPaintTransformer41);
        java.awt.Paint paint44 = statisticalBarRenderer29.lookupSeriesPaint((int) ' ');
        statisticalBarRenderer0.setBasePaint(paint44);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint48 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer47.setBaseOutlinePaint(paint48);
        boolean boolean50 = statisticalBarRenderer47.isDrawBarOutline();
        statisticalBarRenderer47.setDrawBarOutline(false);
        java.awt.Stroke stroke54 = null;
        statisticalBarRenderer47.setSeriesOutlineStroke((int) (short) 0, stroke54, true);
        java.awt.Paint paint59 = statisticalBarRenderer47.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator62 = statisticalBarRenderer47.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator64 = null;
        statisticalBarRenderer47.setSeriesItemLabelGenerator((int) (short) 10, categoryItemLabelGenerator64);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition68 = null;
        statisticalBarRenderer66.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition68, false);
        java.util.EventListener eventListener71 = null;
        boolean boolean72 = statisticalBarRenderer66.hasListener(eventListener71);
        boolean boolean73 = statisticalBarRenderer66.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer74 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition76 = null;
        statisticalBarRenderer74.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition76, false);
        java.util.EventListener eventListener79 = null;
        boolean boolean80 = statisticalBarRenderer74.hasListener(eventListener79);
        boolean boolean81 = statisticalBarRenderer74.getAutoPopulateSeriesFillPaint();
        double double82 = statisticalBarRenderer74.getItemLabelAnchorOffset();
        java.awt.Paint paint83 = statisticalBarRenderer74.getErrorIndicatorPaint();
        statisticalBarRenderer66.setBasePaint(paint83, true);
        statisticalBarRenderer47.setBaseItemLabelPaint(paint83, false);
        statisticalBarRenderer0.setSeriesFillPaint((int) 'a', paint83, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator40);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertNull(categoryURLGenerator62);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2.0d + "'", double82 == 2.0d);
        org.junit.Assert.assertNotNull(paint83);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator8 = statisticalBarRenderer0.getURLGenerator((int) (byte) 1, (-1));
        java.awt.Graphics2D graphics2D9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState14 = statisticalBarRenderer0.initialise(graphics2D9, rectangle2D10, categoryPlot11, 10, plotRenderingInfo13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNull(categoryURLGenerator8);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        java.awt.Shape shape5 = statisticalBarRenderer0.lookupSeriesShape(0);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (byte) 100);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        boolean boolean11 = statisticalBarRenderer0.getBaseSeriesVisibleInLegend();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        java.awt.Paint paint4 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator(10, categoryToolTipGenerator6, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        java.awt.Paint paint14 = statisticalBarRenderer9.getBaseItemLabelPaint();
        statisticalBarRenderer9.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer9.getLegendItemURLGenerator();
        java.lang.Boolean boolean20 = statisticalBarRenderer9.getSeriesVisibleInLegend((int) (short) 1);
        java.awt.Stroke stroke22 = statisticalBarRenderer9.lookupSeriesStroke((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer23 = statisticalBarRenderer9.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer23);
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D25, categoryPlot26, valueAxis27, rectangle2D28, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(gradientPaintTransformer23);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        java.awt.Shape shape10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 1, shape10, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = statisticalBarRenderer0.getSeriesURLGenerator((int) 'a');
        statisticalBarRenderer0.setSeriesCreateEntities(10, (java.lang.Boolean) false);
        java.awt.Stroke stroke19 = statisticalBarRenderer0.getSeriesStroke((int) '#');
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(categoryURLGenerator14);
        org.junit.Assert.assertNull(stroke19);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke18 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Font font21 = statisticalBarRenderer9.getItemLabelFont((int) (short) 0, 10);
        statisticalBarRenderer0.setBaseItemLabelFont(font21, false);
        java.awt.Graphics2D graphics2D24 = null;
        java.awt.geom.Rectangle2D rectangle2D25 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis26 = null;
        org.jfree.chart.axis.ValueAxis valueAxis27 = null;
        org.jfree.chart.util.Layer layer28 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D24, rectangle2D25, categoryAxis26, valueAxis27, layer28, plotRenderingInfo29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(font21);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        statisticalBarRenderer0.setMaximumBarWidth(10.0d);
        java.util.EventListener eventListener11 = null;
        boolean boolean12 = statisticalBarRenderer0.hasListener(eventListener11);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setBaseOutlinePaint(paint11);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean16 = statisticalBarRenderer10.getSeriesCreateEntities((-1));
        java.awt.Paint paint19 = statisticalBarRenderer10.getItemPaint((int) (byte) 100, (int) (byte) 100);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke20, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = statisticalBarRenderer24.getPlot();
        java.awt.Stroke stroke31 = statisticalBarRenderer24.getItemOutlineStroke(1, 100);
        double double32 = statisticalBarRenderer24.getMinimumBarLength();
        statisticalBarRenderer24.setMaximumBarWidth(10.0d);
        statisticalBarRenderer24.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer38.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer38.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer38.setSeriesShape((int) ' ', shape45, false);
        statisticalBarRenderer38.setMaximumBarWidth((double) 10.0f);
        java.awt.Font font50 = statisticalBarRenderer38.getBaseItemLabelFont();
        statisticalBarRenderer24.setBaseItemLabelFont(font50, true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelFont((-1), font50, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(categoryPlot28);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(itemLabelPosition39);
        org.junit.Assert.assertNotNull(shape45);
        org.junit.Assert.assertNotNull(font50);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer5.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition7, false);
        java.awt.Stroke stroke12 = statisticalBarRenderer5.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer5.setSeriesShape((int) (short) 1, shape14);
        boolean boolean16 = statisticalBarRenderer5.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = statisticalBarRenderer5.getPlot();
        statisticalBarRenderer5.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer5.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition(0, itemLabelPosition22);
        statisticalBarRenderer0.setMinimumBarLength(10.0d);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryPlot17);
        org.junit.Assert.assertNotNull(itemLabelPosition22);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer25.setBaseOutlinePaint(paint26);
        boolean boolean28 = statisticalBarRenderer25.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        java.util.EventListener eventListener34 = null;
        boolean boolean35 = statisticalBarRenderer29.hasListener(eventListener34);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator37 = null;
        statisticalBarRenderer29.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator37);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = statisticalBarRenderer29.getSeriesItemLabelGenerator(0);
        java.awt.Font font41 = statisticalBarRenderer29.getBaseItemLabelFont();
        statisticalBarRenderer25.setBaseItemLabelFont(font41);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator44 = null;
        statisticalBarRenderer25.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator44);
        java.awt.Shape shape47 = statisticalBarRenderer25.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape48 = statisticalBarRenderer25.getBaseShape();
        java.awt.Paint paint49 = statisticalBarRenderer25.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesItemLabelPaint(100, paint49);
        java.awt.Shape shape52 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator40);
        org.junit.Assert.assertNotNull(font41);
        org.junit.Assert.assertNotNull(shape47);
        org.junit.Assert.assertNotNull(shape48);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(shape52);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(100);
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesVisible((int) ' ');
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator24, false);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNull(categoryPlot23);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer9.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        java.awt.Stroke stroke27 = statisticalBarRenderer20.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer20.setSeriesShape((int) (short) 1, shape29);
        java.lang.Boolean boolean32 = statisticalBarRenderer20.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setBaseOutlinePaint(paint34);
        boolean boolean36 = statisticalBarRenderer33.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer37.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer37.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer33.setBasePositiveItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer20.setBaseNegativeItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer9.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition40);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer0.setItemMargin((double) 'a');
        java.awt.Graphics2D graphics2D47 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = null;
        java.awt.geom.Rectangle2D rectangle2D49 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D47, categoryPlot48, rectangle2D49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer9.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition15);
        java.awt.Stroke stroke17 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator18 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator18, false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation9 = null;
        org.jfree.chart.util.Layer layer10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation9, layer10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        double double5 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean6 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(itemLabelPosition4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 2.0d + "'", double5 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 100);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D11, categoryPlot12, rectangle2D13, (double) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(paint10);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint17 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.lang.Class<?> wildcardClass19 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Object obj6 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(obj6);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Paint paint18 = statisticalBarRenderer0.getBaseOutlinePaint();
        boolean boolean19 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer21.getPlot();
        java.awt.Stroke stroke28 = statisticalBarRenderer21.getItemOutlineStroke(1, 100);
        statisticalBarRenderer21.setItemMargin(3.0d);
        java.awt.Paint paint32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer21.setSeriesOutlinePaint((int) (short) 10, paint32);
        statisticalBarRenderer0.setSeriesFillPaint((int) ' ', paint32, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertNotNull(stroke28);
        org.junit.Assert.assertNotNull(paint32);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setBaseOutlinePaint(paint17);
        boolean boolean19 = statisticalBarRenderer16.isDrawBarOutline();
        boolean boolean20 = statisticalBarRenderer16.getBaseItemLabelsVisible();
        int int21 = statisticalBarRenderer16.getColumnCount();
        double double22 = statisticalBarRenderer16.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setBaseOutlinePaint(paint24);
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer23.setSeriesPaint(0, paint27);
        java.lang.Object obj29 = null;
        boolean boolean30 = statisticalBarRenderer23.equals(obj29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator37 = statisticalBarRenderer32.getLegendItemToolTipGenerator();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer32.setErrorIndicatorPaint(paint38);
        statisticalBarRenderer23.setSeriesPaint(10, paint38);
        statisticalBarRenderer23.setBaseSeriesVisible(true);
        statisticalBarRenderer23.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer45.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot49 = statisticalBarRenderer45.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition51 = statisticalBarRenderer45.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer23.setBaseNegativeItemLabelPosition(itemLabelPosition51, true);
        statisticalBarRenderer16.setBasePositiveItemLabelPosition(itemLabelPosition51);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition51, true);
        java.awt.Paint paint59 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) (byte) 1);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator37);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categoryPlot49);
        org.junit.Assert.assertNotNull(itemLabelPosition51);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        java.lang.Boolean boolean21 = statisticalBarRenderer0.getSeriesVisible((int) '#');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        boolean boolean9 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        java.awt.geom.Rectangle2D rectangle2D11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D9, categoryPlot10, rectangle2D11, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        boolean boolean13 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        boolean boolean20 = statisticalBarRenderer17.isDrawBarOutline();
        statisticalBarRenderer17.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer17.getSeriesToolTipGenerator((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer17.getNegativeItemLabelPosition(100, (int) (short) -1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setBaseOutlinePaint(paint30);
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer29.setSeriesPaint(0, paint33);
        java.lang.Object obj35 = null;
        boolean boolean36 = statisticalBarRenderer29.equals(obj35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator43 = statisticalBarRenderer38.getLegendItemToolTipGenerator();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer38.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer29.setSeriesPaint(10, paint44);
        statisticalBarRenderer0.setBasePaint(paint44, true);
        java.awt.Paint paint49 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator43);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) ' ');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer9 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer9);
        org.jfree.chart.LegendItem legendItem13 = statisticalBarRenderer0.getLegendItem(0, (int) (short) 10);
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator16);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNull(legendItem13);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        double double8 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        java.awt.Paint paint9 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier10 = statisticalBarRenderer0.getDrawingSupplier();
        java.awt.Stroke stroke12 = statisticalBarRenderer0.getSeriesStroke((-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 2.0d + "'", double8 == 2.0d);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(drawingSupplier10);
        org.junit.Assert.assertNull(stroke12);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition18, false);
        java.awt.Stroke stroke23 = statisticalBarRenderer16.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer16.setSeriesShape((int) (short) 1, shape25);
        java.lang.Boolean boolean28 = statisticalBarRenderer16.getSeriesVisible((int) (byte) 0);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer31.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer31.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setBaseOutlinePaint(paint37);
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer36.setSeriesPaint(0, paint40);
        java.lang.Object obj42 = null;
        boolean boolean43 = statisticalBarRenderer36.equals(obj42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = null;
        statisticalBarRenderer45.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition47, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator50 = statisticalBarRenderer45.getLegendItemToolTipGenerator();
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer45.setErrorIndicatorPaint(paint51);
        statisticalBarRenderer36.setSeriesPaint(10, paint51);
        statisticalBarRenderer31.setSeriesPaint((int) (byte) 10, paint51);
        statisticalBarRenderer16.setBaseItemLabelPaint(paint51);
        statisticalBarRenderer0.setBaseOutlinePaint(paint51);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        java.awt.Paint paint59 = statisticalBarRenderer0.getBasePaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator60 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator60);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(itemLabelPosition32);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator50);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(paint59);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = null;
        statisticalBarRenderer26.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition28, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = statisticalBarRenderer26.getLegendItemToolTipGenerator();
        double double32 = statisticalBarRenderer26.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator33 = null;
        statisticalBarRenderer26.setBaseToolTipGenerator(categoryToolTipGenerator33);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer35 = statisticalBarRenderer26.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = null;
        statisticalBarRenderer37.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition39, false);
        java.awt.Stroke stroke44 = statisticalBarRenderer37.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = statisticalBarRenderer37.getPlot();
        java.awt.Paint paint46 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer37.setBaseItemLabelPaint(paint46);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = statisticalBarRenderer37.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition49, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 10, (java.lang.Boolean) false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition58 = null;
        statisticalBarRenderer56.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition58, false);
        java.awt.Paint paint62 = statisticalBarRenderer56.getSeriesFillPaint((int) (byte) 0);
        boolean boolean65 = statisticalBarRenderer56.getItemCreateEntity((int) '4', (int) 'a');
        java.awt.Paint paint68 = statisticalBarRenderer56.getItemPaint(1, (int) (short) -1);
        statisticalBarRenderer0.setBasePaint(paint68, false);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.2d + "'", double32 == 0.2d);
        org.junit.Assert.assertNotNull(gradientPaintTransformer35);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertNull(categoryPlot45);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertNotNull(itemLabelPosition49);
        org.junit.Assert.assertNull(paint62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(paint68);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setBaseOutlinePaint(paint11);
        boolean boolean13 = statisticalBarRenderer10.getAutoPopulateSeriesShape();
        java.awt.Paint paint15 = statisticalBarRenderer10.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint15);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D19, categoryPlot20, rectangle2D21, 0.2d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier6 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 1, categoryToolTipGenerator8);
        org.junit.Assert.assertNotNull(itemLabelPosition5);
        org.junit.Assert.assertNull(drawingSupplier6);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint17 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint19 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(itemLabelPosition20);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener4 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        statisticalBarRenderer0.setMinimumBarLength(0.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseOutlinePaint(paint9);
        boolean boolean11 = statisticalBarRenderer8.isDrawBarOutline();
        statisticalBarRenderer8.setDrawBarOutline(false);
        java.awt.Stroke stroke15 = null;
        statisticalBarRenderer8.setSeriesOutlineStroke((int) (short) 0, stroke15, true);
        java.awt.Paint paint20 = statisticalBarRenderer8.getItemPaint(10, (-1));
        statisticalBarRenderer0.setSeriesItemLabelPaint(1, paint20, true);
        statisticalBarRenderer0.setMaximumBarWidth(0.0d);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        boolean boolean13 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        boolean boolean20 = statisticalBarRenderer17.isDrawBarOutline();
        statisticalBarRenderer17.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer17.getSeriesToolTipGenerator((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer17.getNegativeItemLabelPosition(100, (int) (short) -1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setBaseOutlinePaint(paint30);
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer29.setSeriesPaint(0, paint33);
        java.lang.Object obj35 = null;
        boolean boolean36 = statisticalBarRenderer29.equals(obj35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator43 = statisticalBarRenderer38.getLegendItemToolTipGenerator();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer38.setErrorIndicatorPaint(paint44);
        statisticalBarRenderer29.setSeriesPaint(10, paint44);
        statisticalBarRenderer0.setBasePaint(paint44, true);
        boolean boolean50 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 1);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator43);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.LegendItem legendItem7 = statisticalBarRenderer0.getLegendItem(0, (int) (byte) -1);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D8, categoryPlot9, rectangle2D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(legendItem7);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer11.setSeriesPaint(10, paint26);
        statisticalBarRenderer11.setBaseSeriesVisible(true);
        statisticalBarRenderer11.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = statisticalBarRenderer33.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        boolean boolean43 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        java.awt.Stroke stroke44 = statisticalBarRenderer0.getBaseStroke();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryPlot37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(stroke44);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        int int8 = statisticalBarRenderer0.getRowCount();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        java.lang.Object obj7 = statisticalBarRenderer0.clone();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseOutlinePaint(paint9);
        boolean boolean11 = statisticalBarRenderer8.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator13 = statisticalBarRenderer8.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.lookupSeriesOutlineStroke(100);
        statisticalBarRenderer0.setBaseStroke(stroke15, true);
        java.awt.Stroke stroke18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseOutlineStroke(stroke18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'stroke' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryURLGenerator13);
        org.junit.Assert.assertNotNull(stroke15);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer14.setSeriesStroke((int) (short) 100, stroke21);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 10, stroke21);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(stroke21);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = null;
        statisticalBarRenderer33.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition35, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator38 = statisticalBarRenderer33.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer33.setSeriesStroke((int) (short) 100, stroke40);
        statisticalBarRenderer33.setBaseItemLabelsVisible(false);
        boolean boolean46 = statisticalBarRenderer33.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer33.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer33.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition50, true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator38);
        org.junit.Assert.assertNotNull(stroke40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        statisticalBarRenderer0.setItemLabelAnchorOffset(0.2d);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator14);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator16 = statisticalBarRenderer0.getBaseURLGenerator();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNull(categoryURLGenerator16);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.awt.Shape shape6 = statisticalBarRenderer0.lookupSeriesShape((int) '#');
        java.awt.Paint paint7 = statisticalBarRenderer0.getBaseItemLabelPaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNotNull(shape6);
        org.junit.Assert.assertNotNull(paint7);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setBaseOutlinePaint(paint17);
        boolean boolean19 = statisticalBarRenderer16.isDrawBarOutline();
        statisticalBarRenderer16.setDrawBarOutline(false);
        java.awt.Stroke stroke23 = null;
        statisticalBarRenderer16.setSeriesOutlineStroke((int) (short) 0, stroke23, true);
        java.awt.Paint paint28 = statisticalBarRenderer16.getItemPaint(10, (-1));
        java.awt.Shape shape30 = statisticalBarRenderer16.getSeriesShape((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer31.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = statisticalBarRenderer31.getPlot();
        java.awt.Stroke stroke38 = statisticalBarRenderer31.getItemOutlineStroke(1, 100);
        statisticalBarRenderer16.setBaseStroke(stroke38);
        java.awt.Stroke stroke41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer16.setSeriesStroke((int) (byte) 100, stroke41);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (byte) -1, stroke41, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNull(shape30);
        org.junit.Assert.assertNull(categoryPlot35);
        org.junit.Assert.assertNotNull(stroke38);
        org.junit.Assert.assertNotNull(stroke41);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        org.jfree.chart.LegendItem legendItem9 = statisticalBarRenderer0.getLegendItem((int) (short) 100, (int) 'a');
        statisticalBarRenderer0.setSeriesCreateEntities((int) (short) 1, (java.lang.Boolean) false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertNull(legendItem9);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Font font8 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Stroke stroke10 = statisticalBarRenderer0.lookupSeriesStroke((int) (byte) 1);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(font8);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setBaseOutlinePaint(paint8);
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer7.setSeriesPaint(0, paint11);
        java.lang.Object obj13 = null;
        boolean boolean14 = statisticalBarRenderer7.equals(obj13);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition18, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator21 = statisticalBarRenderer16.getLegendItemToolTipGenerator();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer16.setErrorIndicatorPaint(paint22);
        statisticalBarRenderer7.setSeriesPaint(10, paint22);
        statisticalBarRenderer7.setBaseSeriesVisible(true);
        statisticalBarRenderer7.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer29.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = statisticalBarRenderer29.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer29.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer7.setBaseNegativeItemLabelPosition(itemLabelPosition35, true);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition35);
        java.awt.Paint paint40 = statisticalBarRenderer0.getSeriesOutlinePaint(10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer0.getPositiveItemLabelPosition(0, 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator45 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) -1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator21);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNull(categoryPlot33);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNull(paint40);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNull(categoryURLGenerator45);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        boolean boolean8 = statisticalBarRenderer0.getIncludeBaseInRange();
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesPaint(0);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) ' ');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator7);
        java.awt.Stroke stroke10 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = null;
        statisticalBarRenderer12.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition14, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = statisticalBarRenderer12.getItemLabelGenerator((int) (byte) 10, (int) '4');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator20 = null;
        statisticalBarRenderer12.setBaseItemLabelGenerator(categoryItemLabelGenerator20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseOutlinePaint(paint23);
        boolean boolean25 = statisticalBarRenderer22.getAutoPopulateSeriesShape();
        java.awt.Paint paint27 = statisticalBarRenderer22.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer12.setBaseOutlinePaint(paint27, true);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint27);
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState32 = null;
        java.awt.geom.Rectangle2D rectangle2D33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis35 = null;
        org.jfree.chart.axis.ValueAxis valueAxis36 = null;
        org.jfree.data.category.CategoryDataset categoryDataset37 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D31, categoryItemRendererState32, rectangle2D33, categoryPlot34, categoryAxis35, valueAxis36, categoryDataset37, (int) (short) 100, (int) (short) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(stroke10);
        org.junit.Assert.assertNull(categoryItemLabelGenerator19);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(paint27);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = statisticalBarRenderer14.getPlot();
        java.awt.Font font19 = statisticalBarRenderer14.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 10, font19);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator22);
        java.awt.Paint paint26 = statisticalBarRenderer0.getItemFillPaint((-1), (int) (byte) 100);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(categoryPlot18);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNotNull(paint26);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) -1);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        java.lang.Boolean boolean10 = statisticalBarRenderer0.getSeriesCreateEntities((int) 'a');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator24, true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        statisticalBarRenderer7.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = statisticalBarRenderer7.getLegendItemToolTipGenerator();
        double double13 = statisticalBarRenderer7.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer7.setBaseToolTipGenerator(categoryToolTipGenerator14);
        java.awt.Stroke stroke17 = statisticalBarRenderer7.lookupSeriesOutlineStroke((int) 'a');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer7.getNegativeItemLabelPosition((int) (byte) 0, (int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) -1, itemLabelPosition20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator6);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        boolean boolean31 = statisticalBarRenderer28.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        java.util.EventListener eventListener37 = null;
        boolean boolean38 = statisticalBarRenderer32.hasListener(eventListener37);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = null;
        statisticalBarRenderer32.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer32.getSeriesItemLabelGenerator(0);
        java.awt.Font font44 = statisticalBarRenderer32.getBaseItemLabelFont();
        statisticalBarRenderer28.setBaseItemLabelFont(font44);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator47 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator47);
        java.awt.Shape shape50 = statisticalBarRenderer28.lookupSeriesShape((int) (short) 0);
        java.awt.Font font53 = statisticalBarRenderer28.getItemLabelFont((int) '#', (int) '4');
        statisticalBarRenderer0.setSeriesItemLabelFont((int) 'a', font53);
        java.awt.Shape shape55 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseShape(shape55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'shape' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
        org.junit.Assert.assertNotNull(font44);
        org.junit.Assert.assertNotNull(shape50);
        org.junit.Assert.assertNotNull(font53);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseOutlinePaint(paint9);
        boolean boolean11 = statisticalBarRenderer8.isDrawBarOutline();
        boolean boolean12 = statisticalBarRenderer8.getBaseItemLabelsVisible();
        int int13 = statisticalBarRenderer8.getColumnCount();
        double double14 = statisticalBarRenderer8.getItemMargin();
        java.awt.Shape shape17 = statisticalBarRenderer8.getItemShape(1, (int) (byte) 10);
        boolean boolean18 = statisticalBarRenderer0.equals((java.lang.Object) shape17);
        java.awt.Paint paint20 = statisticalBarRenderer0.lookupSeriesOutlinePaint(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        boolean boolean25 = statisticalBarRenderer21.getItemVisible((int) (byte) 100, (int) (byte) 1);
        statisticalBarRenderer21.setMinimumBarLength(0.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setBaseOutlinePaint(paint30);
        boolean boolean32 = statisticalBarRenderer29.isDrawBarOutline();
        statisticalBarRenderer29.setDrawBarOutline(false);
        java.awt.Stroke stroke36 = null;
        statisticalBarRenderer29.setSeriesOutlineStroke((int) (short) 0, stroke36, true);
        java.awt.Paint paint41 = statisticalBarRenderer29.getItemPaint(10, (-1));
        statisticalBarRenderer21.setSeriesItemLabelPaint(1, paint41, true);
        boolean boolean44 = statisticalBarRenderer0.equals((java.lang.Object) 1);
        boolean boolean45 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(itemLabelPosition22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        int int22 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        java.awt.Paint paint29 = statisticalBarRenderer24.getBaseItemLabelPaint();
        statisticalBarRenderer24.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer24.getLegendItemURLGenerator();
        java.awt.Stroke stroke35 = statisticalBarRenderer24.lookupSeriesOutlineStroke(0);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke35);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator33);
        org.junit.Assert.assertNotNull(stroke35);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = null;
        statisticalBarRenderer12.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition14, false);
        boolean boolean17 = statisticalBarRenderer12.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = statisticalBarRenderer19.getPlot();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint25, true);
        statisticalBarRenderer12.setSeriesPaint((int) '#', paint25, true);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 100, paint25);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition31, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(categoryPlot23);
        org.junit.Assert.assertNotNull(paint25);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        boolean boolean22 = statisticalBarRenderer18.getBaseItemLabelsVisible();
        int int23 = statisticalBarRenderer18.getColumnCount();
        double double24 = statisticalBarRenderer18.getItemMargin();
        java.awt.Shape shape27 = statisticalBarRenderer18.getItemShape(1, (int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape27, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D33 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = null;
        org.jfree.chart.axis.ValueAxis valueAxis35 = null;
        java.awt.geom.Rectangle2D rectangle2D36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D33, categoryPlot34, valueAxis35, rectangle2D36, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(shape27);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        statisticalBarRenderer0.setItemLabelAnchorOffset(0.2d);
        boolean boolean14 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer15.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer15.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer15.setSeriesShape((int) ' ', shape22, false);
        statisticalBarRenderer0.setBaseShape(shape22, false);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(shape22);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        boolean boolean6 = statisticalBarRenderer0.getItemCreateEntity((int) (byte) 0, 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer9.setSeriesShape((int) (short) 1, shape18);
        java.lang.Boolean boolean21 = statisticalBarRenderer9.getSeriesVisible((int) (byte) 0);
        java.awt.Shape shape24 = statisticalBarRenderer9.getItemShape((int) (byte) 10, (int) '#');
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape24);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(shape24);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        boolean boolean21 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint(0);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisible(0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation12 = null;
        org.jfree.chart.util.Layer layer13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation12, layer13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        boolean boolean14 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 10, (int) (byte) 10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.util.EventListener eventListener6 = null;
        boolean boolean7 = statisticalBarRenderer0.hasListener(eventListener6);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getURLGenerator((int) (short) 100, (int) ' ');
        java.awt.Paint paint11 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertNotNull(paint11);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation3 = null;
        boolean boolean4 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation3);
        java.lang.Class<?> wildcardClass5 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean11 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint20);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(itemLabelPosition23);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 100, (int) (short) 100);
        double double27 = statisticalBarRenderer0.getMaximumBarWidth();
        boolean boolean28 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        double double11 = statisticalBarRenderer6.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = null;
        statisticalBarRenderer12.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition14, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer12.getLegendItemToolTipGenerator();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer12.setErrorIndicatorPaint(paint18);
        java.awt.Stroke stroke20 = statisticalBarRenderer12.getBaseOutlineStroke();
        statisticalBarRenderer6.setBaseStroke(stroke20, true);
        statisticalBarRenderer0.setSeriesStroke(10, stroke20, false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNotNull(stroke20);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        java.awt.Paint paint4 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setBaseOutlinePaint(paint6);
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer5.setSeriesPaint(0, paint9);
        java.lang.Object obj11 = null;
        boolean boolean12 = statisticalBarRenderer5.equals(obj11);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer5.setSeriesPaint(10, paint20);
        java.awt.Paint paint23 = statisticalBarRenderer5.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint23, true);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNotNull(paint23);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Paint paint9 = statisticalBarRenderer0.lookupSeriesPaint(0);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisible(0);
        double double12 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.2d + "'", double12 == 0.2d);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setBaseOutlinePaint(paint11);
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer10.setSeriesPaint(0, paint14);
        java.lang.Object obj16 = null;
        boolean boolean17 = statisticalBarRenderer10.equals(obj16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = statisticalBarRenderer19.getLegendItemToolTipGenerator();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer19.setErrorIndicatorPaint(paint25);
        statisticalBarRenderer10.setSeriesPaint(10, paint25);
        java.awt.Paint paint28 = statisticalBarRenderer10.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseFillPaint(paint28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer31.setBaseOutlinePaint(paint32);
        boolean boolean34 = statisticalBarRenderer31.isDrawBarOutline();
        boolean boolean35 = statisticalBarRenderer31.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = null;
        statisticalBarRenderer37.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition39, false);
        java.awt.Stroke stroke44 = statisticalBarRenderer37.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer46.setBaseOutlinePaint(paint47);
        statisticalBarRenderer37.setSeriesPaint((int) 'a', paint47, false);
        statisticalBarRenderer31.setSeriesFillPaint((int) (short) 100, paint47);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer53 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer53.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot57 = statisticalBarRenderer53.getPlot();
        java.awt.Paint paint59 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer53.setSeriesOutlinePaint(10, paint59, true);
        java.awt.Shape shape63 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer53.setSeriesShape((int) (byte) 1, shape63, true);
        statisticalBarRenderer31.setSeriesShape((int) (byte) 1, shape63);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape63, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertNull(categoryPlot57);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertNotNull(shape63);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        java.awt.Shape shape15 = statisticalBarRenderer0.getItemShape((int) (byte) 10, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = null;
        statisticalBarRenderer17.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer17.setSeriesStroke((int) (short) 100, stroke24);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent26 = null;
        statisticalBarRenderer17.notifyListeners(rendererChangeEvent26);
        statisticalBarRenderer17.setSeriesVisible((int) 'a', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer17.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) ' ', itemLabelPosition33, true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        java.awt.Shape shape15 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = statisticalBarRenderer0.getURLGenerator((int) (short) 1, (int) (short) 10);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNull(categoryURLGenerator18);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer6.getPlot();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer6.setBaseItemLabelPaint(paint15);
        statisticalBarRenderer0.setBaseOutlinePaint(paint15, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setBaseOutlinePaint(paint20);
        boolean boolean22 = statisticalBarRenderer19.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer23.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer23.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer19.setBasePositiveItemLabelPosition(itemLabelPosition26);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = statisticalBarRenderer19.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator28);
        java.awt.Stroke stroke30 = statisticalBarRenderer0.getBaseStroke();
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNotNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator28);
        org.junit.Assert.assertNotNull(stroke30);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        org.jfree.chart.LegendItemCollection legendItemCollection21 = statisticalBarRenderer0.getLegendItems();
        statisticalBarRenderer0.setMaximumBarWidth((double) (-1L));
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNotNull(legendItemCollection21);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.awt.Stroke stroke11 = statisticalBarRenderer4.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        statisticalBarRenderer4.setSeriesPaint((int) 'a', paint14, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = statisticalBarRenderer4.getPlot();
        statisticalBarRenderer4.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        java.awt.Stroke stroke29 = statisticalBarRenderer22.getItemOutlineStroke(1, 100);
        double double30 = statisticalBarRenderer22.getMinimumBarLength();
        statisticalBarRenderer22.setMaximumBarWidth(10.0d);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = statisticalBarRenderer36.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer36.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape43 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer36.setSeriesShape((int) ' ', shape43, false);
        statisticalBarRenderer36.setMaximumBarWidth((double) 10.0f);
        java.awt.Font font48 = statisticalBarRenderer36.getBaseItemLabelFont();
        statisticalBarRenderer22.setBaseItemLabelFont(font48, true);
        statisticalBarRenderer4.setSeriesItemLabelFont((int) (byte) 10, font48, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition53 = statisticalBarRenderer4.getBasePositiveItemLabelPosition();
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition53, true);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categoryPlot18);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(itemLabelPosition37);
        org.junit.Assert.assertNotNull(shape43);
        org.junit.Assert.assertNotNull(font48);
        org.junit.Assert.assertNotNull(itemLabelPosition53);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseOutlinePaint(paint21);
        boolean boolean23 = statisticalBarRenderer20.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        java.util.EventListener eventListener29 = null;
        boolean boolean30 = statisticalBarRenderer24.hasListener(eventListener29);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator32 = null;
        statisticalBarRenderer24.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator32);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = statisticalBarRenderer24.getSeriesItemLabelGenerator(0);
        java.awt.Font font36 = statisticalBarRenderer24.getBaseItemLabelFont();
        statisticalBarRenderer20.setBaseItemLabelFont(font36);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = null;
        statisticalBarRenderer20.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator39);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer41.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = statisticalBarRenderer41.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer20.setNegativeItemLabelPositionFallback(itemLabelPosition44);
        statisticalBarRenderer11.setSeriesNegativeItemLabelPosition(10, itemLabelPosition44, true);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition44);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator35);
        org.junit.Assert.assertNotNull(font36);
        org.junit.Assert.assertNull(itemLabelPosition42);
        org.junit.Assert.assertNotNull(itemLabelPosition44);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        statisticalBarRenderer6.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = statisticalBarRenderer6.getSeriesToolTipGenerator((-1));
        double double14 = statisticalBarRenderer6.getMinimumBarLength();
        java.awt.Paint paint17 = statisticalBarRenderer6.getItemOutlinePaint((int) 'a', 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setBaseOutlinePaint(paint20);
        boolean boolean22 = statisticalBarRenderer19.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer23.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition25, false);
        java.util.EventListener eventListener28 = null;
        boolean boolean29 = statisticalBarRenderer23.hasListener(eventListener28);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator31 = null;
        statisticalBarRenderer23.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator31);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = statisticalBarRenderer23.getSeriesItemLabelGenerator(0);
        java.awt.Font font35 = statisticalBarRenderer23.getBaseItemLabelFont();
        statisticalBarRenderer19.setBaseItemLabelFont(font35);
        statisticalBarRenderer6.setSeriesItemLabelFont((int) (short) 1, font35, true);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 1, font35);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator34);
        org.junit.Assert.assertNotNull(font35);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        statisticalBarRenderer0.setBaseCreateEntities(false, true);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        java.awt.Paint paint19 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 100);
        java.awt.Paint paint21 = statisticalBarRenderer0.getSeriesOutlinePaint((int) (byte) 100);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(paint19);
        org.junit.Assert.assertNull(paint21);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer8.getBaseNegativeItemLabelPosition();
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(10, itemLabelPosition13);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer5.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer5.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke12, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator15 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator15, false);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(categoryPlot9);
        org.junit.Assert.assertNotNull(stroke12);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        double double9 = statisticalBarRenderer0.getLowerClip();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisible((int) '#');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12, true);
        java.awt.Graphics2D graphics2D15 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = null;
        org.jfree.chart.axis.ValueAxis valueAxis17 = null;
        java.awt.geom.Rectangle2D rectangle2D18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D15, categoryPlot16, valueAxis17, rectangle2D18, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation11 = null;
        org.jfree.chart.util.Layer layer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation11, layer12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator36 = statisticalBarRenderer0.getToolTipGenerator((int) (byte) 10, (int) (byte) 0);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNull(categoryToolTipGenerator36);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer9.setSeriesOutlinePaint(10, paint15, true);
        java.awt.Shape shape19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer9.setSeriesShape((int) (byte) 1, shape19, true);
        statisticalBarRenderer0.setBaseShape(shape19, false);
        statisticalBarRenderer0.setBase(0.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer26 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer26.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer26.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer26.setSeriesShape((int) ' ', shape33, false);
        statisticalBarRenderer26.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer26.setBaseItemLabelsVisible(true, false);
        boolean boolean41 = statisticalBarRenderer26.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint43 = statisticalBarRenderer26.lookupSeriesFillPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = statisticalBarRenderer26.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint45 = statisticalBarRenderer26.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBaseOutlinePaint(paint45);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(shape33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(paint43);
        org.junit.Assert.assertNull(itemLabelPosition44);
        org.junit.Assert.assertNotNull(paint45);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer21.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition24);
        boolean boolean28 = statisticalBarRenderer0.isItemLabelVisible((int) (short) -1, (int) ' ');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) ' ', categoryItemLabelGenerator30);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition32);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator6, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer9.setSeriesOutlinePaint(10, paint15, true);
        java.awt.Shape shape19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer9.setSeriesShape((int) (byte) 1, shape19, true);
        statisticalBarRenderer0.setBaseShape(shape19, false);
        statisticalBarRenderer0.setBase(0.0d);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(shape19);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer11.setSeriesPaint(10, paint26);
        statisticalBarRenderer11.setBaseSeriesVisible(true);
        statisticalBarRenderer11.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = statisticalBarRenderer33.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        boolean boolean43 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        double double44 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator45 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        double double46 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryPlot37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        statisticalBarRenderer0.setItemMargin(1.0d);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        double double5 = statisticalBarRenderer0.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer6.setBasePositiveItemLabelPosition(itemLabelPosition13);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition13);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        boolean boolean31 = statisticalBarRenderer28.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        java.util.EventListener eventListener37 = null;
        boolean boolean38 = statisticalBarRenderer32.hasListener(eventListener37);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = null;
        statisticalBarRenderer32.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer32.getSeriesItemLabelGenerator(0);
        java.awt.Font font44 = statisticalBarRenderer32.getBaseItemLabelFont();
        statisticalBarRenderer28.setBaseItemLabelFont(font44);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator47 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator47);
        java.awt.Shape shape50 = statisticalBarRenderer28.lookupSeriesShape((int) (short) 0);
        java.awt.Font font53 = statisticalBarRenderer28.getItemLabelFont((int) '#', (int) '4');
        statisticalBarRenderer0.setSeriesItemLabelFont((int) 'a', font53);
        java.awt.Stroke stroke55 = statisticalBarRenderer0.getBaseOutlineStroke();
        boolean boolean58 = statisticalBarRenderer0.getItemCreateEntity((int) '#', (int) '#');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
        org.junit.Assert.assertNotNull(font44);
        org.junit.Assert.assertNotNull(shape50);
        org.junit.Assert.assertNotNull(font53);
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        statisticalBarRenderer0.setItemLabelAnchorOffset(0.2d);
        java.awt.Paint paint15 = statisticalBarRenderer0.lookupSeriesPaint((int) ' ');
        java.awt.Stroke stroke17 = null;
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 0, stroke17, true);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getToolTipGenerator(0, 0);
        int int8 = statisticalBarRenderer0.getRowCount();
        java.awt.Stroke stroke10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke10, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        java.awt.Shape shape17 = statisticalBarRenderer0.getItemShape((int) (short) -1, (int) (byte) 100);
        java.awt.Paint paint19 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean14 = statisticalBarRenderer10.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition(10);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) '4', categoryItemLabelGenerator21, false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(categoryPlot15);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer12.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer12.getPlot();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer12.setSeriesOutlinePaint(10, paint18, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer21.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer12.setPositiveItemLabelPositionFallback(itemLabelPosition27);
        java.awt.Stroke stroke29 = statisticalBarRenderer12.getBaseOutlineStroke();
        java.awt.Paint paint32 = statisticalBarRenderer12.getItemOutlinePaint((int) (short) 1, (int) (short) 10);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) 'a', paint32);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(itemLabelPosition10);
        org.junit.Assert.assertNull(categoryPlot16);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertNotNull(paint32);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer7.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot11 = statisticalBarRenderer7.getPlot();
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer7.setSeriesOutlinePaint(10, paint13, true);
        statisticalBarRenderer0.setSeriesPaint((int) '#', paint13, true);
        boolean boolean19 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 100);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (short) 100, (java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryPlot11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        double double7 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator9 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(100, categoryURLGenerator9, false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.0d + "'", double7 == 2.0d);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator6 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        statisticalBarRenderer7.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition9, false);
        java.awt.Paint paint13 = statisticalBarRenderer7.getSeriesFillPaint((int) (byte) 0);
        boolean boolean16 = statisticalBarRenderer7.getItemCreateEntity((int) '4', (int) 'a');
        java.awt.Paint paint19 = statisticalBarRenderer7.getItemPaint(1, (int) (short) -1);
        statisticalBarRenderer0.setBasePaint(paint19);
        java.awt.Graphics2D graphics2D21 = null;
        java.awt.geom.Rectangle2D rectangle2D22 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis23 = null;
        org.jfree.chart.axis.ValueAxis valueAxis24 = null;
        org.jfree.chart.util.Layer layer25 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo26 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D21, rectangle2D22, categoryAxis23, valueAxis24, layer25, plotRenderingInfo26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryToolTipGenerator6);
        org.junit.Assert.assertNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.data.category.CategoryDataset categoryDataset12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D6, categoryItemRendererState7, rectangle2D8, categoryPlot9, categoryAxis10, valueAxis11, categoryDataset12, 1, 10, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer21.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition29);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator34 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(1, categoryURLGenerator34);
        statisticalBarRenderer0.setItemMargin((double) (-1));
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer11.setSeriesPaint(10, paint26);
        statisticalBarRenderer11.setBaseSeriesVisible(true);
        statisticalBarRenderer11.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = statisticalBarRenderer33.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        boolean boolean43 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        statisticalBarRenderer0.setSeriesVisible((int) '4', (java.lang.Boolean) true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator48 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) -1, categoryItemLabelGenerator48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryPlot37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        double double13 = statisticalBarRenderer0.getLowerClip();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator14 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator14);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        boolean boolean12 = statisticalBarRenderer9.isDrawBarOutline();
        statisticalBarRenderer9.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = statisticalBarRenderer9.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer9.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean20 = statisticalBarRenderer9.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator22 = statisticalBarRenderer9.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer23.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition25, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer23.setErrorIndicatorPaint(paint29);
        statisticalBarRenderer9.setErrorIndicatorPaint(paint29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer32.setBaseOutlinePaint(paint33);
        boolean boolean35 = statisticalBarRenderer32.isDrawBarOutline();
        statisticalBarRenderer32.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator39 = statisticalBarRenderer32.getSeriesToolTipGenerator((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer41.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot45 = statisticalBarRenderer41.getPlot();
        java.awt.Stroke stroke48 = statisticalBarRenderer41.getItemOutlineStroke(1, 100);
        statisticalBarRenderer32.setSeriesOutlineStroke((int) (short) 0, stroke48);
        statisticalBarRenderer9.setBaseOutlineStroke(stroke48, true);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 10, stroke48, false);
        double double54 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator22);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator28);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator39);
        org.junit.Assert.assertNull(categoryPlot45);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2.0d + "'", double54 == 2.0d);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        statisticalBarRenderer18.setDrawBarOutline(false);
        java.awt.Stroke stroke25 = null;
        statisticalBarRenderer18.setSeriesOutlineStroke((int) (short) 0, stroke25, true);
        java.awt.Paint paint30 = statisticalBarRenderer18.getItemPaint(10, (-1));
        statisticalBarRenderer0.setErrorIndicatorPaint(paint30);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = statisticalBarRenderer34.getLegendItemToolTipGenerator();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer34.setErrorIndicatorPaint(paint40);
        java.awt.Stroke stroke42 = statisticalBarRenderer34.getBaseOutlineStroke();
        statisticalBarRenderer34.setBaseSeriesVisibleInLegend(false, true);
        statisticalBarRenderer34.setSeriesCreateEntities(0, (java.lang.Boolean) false);
        boolean boolean49 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer34);
        java.awt.Stroke stroke51 = statisticalBarRenderer34.getSeriesStroke((int) '4');
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNull(paint33);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator39);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(stroke51);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator17 = statisticalBarRenderer11.getSeriesURLGenerator(10);
        java.awt.Stroke stroke20 = statisticalBarRenderer11.getItemStroke((int) 'a', (int) ' ');
        statisticalBarRenderer0.setSeriesOutlineStroke(1, stroke20);
        boolean boolean22 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator23);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator26 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 1, categoryToolTipGenerator26);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(categoryURLGenerator17);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition18, false);
        java.awt.Stroke stroke23 = statisticalBarRenderer16.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer16.setSeriesShape((int) (short) 1, shape25);
        java.lang.Boolean boolean28 = statisticalBarRenderer16.getSeriesVisible((int) (byte) 0);
        statisticalBarRenderer16.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer31.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer31.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setBaseOutlinePaint(paint37);
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer36.setSeriesPaint(0, paint40);
        java.lang.Object obj42 = null;
        boolean boolean43 = statisticalBarRenderer36.equals(obj42);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = null;
        statisticalBarRenderer45.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition47, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator50 = statisticalBarRenderer45.getLegendItemToolTipGenerator();
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer45.setErrorIndicatorPaint(paint51);
        statisticalBarRenderer36.setSeriesPaint(10, paint51);
        statisticalBarRenderer31.setSeriesPaint((int) (byte) 10, paint51);
        statisticalBarRenderer16.setBaseItemLabelPaint(paint51);
        statisticalBarRenderer0.setBaseOutlinePaint(paint51);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        java.awt.Paint paint59 = statisticalBarRenderer0.getBasePaint();
        boolean boolean61 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (short) 1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(itemLabelPosition32);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator50);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem(1, 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNull(legendItem11);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 10);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) '#', (java.lang.Boolean) false, true);
        java.awt.Paint paint11 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer12.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer12.setBaseSeriesVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = null;
        statisticalBarRenderer16.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition18, false);
        java.awt.Stroke stroke23 = statisticalBarRenderer16.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer16.setSeriesShape((int) (short) 1, shape25);
        boolean boolean27 = statisticalBarRenderer16.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = statisticalBarRenderer16.getPlot();
        statisticalBarRenderer16.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer16.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        statisticalBarRenderer12.setBaseNegativeItemLabelPosition(itemLabelPosition33);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition33, false);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(stroke23);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(categoryPlot28);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = null;
        statisticalBarRenderer12.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition14, false);
        boolean boolean17 = statisticalBarRenderer12.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = statisticalBarRenderer19.getPlot();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint25, true);
        statisticalBarRenderer12.setSeriesPaint((int) '#', paint25, true);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 100, paint25);
        statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) 100, (java.lang.Boolean) true, true);
        java.awt.Stroke stroke36 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) -1);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(categoryPlot23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNull(stroke36);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) ' ', (java.lang.Boolean) false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) 'a', (java.lang.Boolean) false);
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer10.setBaseOutlinePaint(paint11);
        java.awt.Stroke stroke14 = statisticalBarRenderer10.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean16 = statisticalBarRenderer10.getSeriesCreateEntities((-1));
        java.awt.Paint paint19 = statisticalBarRenderer10.getItemPaint((int) (byte) 100, (int) (byte) 100);
        java.awt.Stroke stroke20 = statisticalBarRenderer10.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseStroke(stroke20, false);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier23 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(stroke14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(stroke20);
        org.junit.Assert.assertNull(drawingSupplier23);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        statisticalBarRenderer0.setBase((double) 10L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        java.util.EventListener eventListener34 = null;
        boolean boolean35 = statisticalBarRenderer29.hasListener(eventListener34);
        boolean boolean36 = statisticalBarRenderer29.getAutoPopulateSeriesFillPaint();
        double double37 = statisticalBarRenderer29.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer38.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = null;
        statisticalBarRenderer44.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition46, false);
        java.awt.Stroke stroke51 = statisticalBarRenderer44.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot52 = statisticalBarRenderer44.getPlot();
        java.awt.Paint paint53 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer44.setBaseItemLabelPaint(paint53);
        statisticalBarRenderer38.setBaseOutlinePaint(paint53, true);
        statisticalBarRenderer29.setBasePaint(paint53);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint53, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint61 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer60.setBaseOutlinePaint(paint61);
        boolean boolean63 = statisticalBarRenderer60.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer64 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition66 = null;
        statisticalBarRenderer64.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition66, false);
        java.util.EventListener eventListener69 = null;
        boolean boolean70 = statisticalBarRenderer64.hasListener(eventListener69);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = null;
        statisticalBarRenderer64.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator72);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator75 = statisticalBarRenderer64.getSeriesItemLabelGenerator(0);
        java.awt.Font font76 = statisticalBarRenderer64.getBaseItemLabelFont();
        statisticalBarRenderer60.setBaseItemLabelFont(font76);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator79 = null;
        statisticalBarRenderer60.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator79);
        java.awt.Shape shape82 = statisticalBarRenderer60.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape83 = statisticalBarRenderer60.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape83);
        java.lang.Boolean boolean86 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 10);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0d + "'", double37 == 2.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNotNull(stroke51);
        org.junit.Assert.assertNull(categoryPlot52);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator75);
        org.junit.Assert.assertNotNull(font76);
        org.junit.Assert.assertNotNull(shape82);
        org.junit.Assert.assertNotNull(shape83);
        org.junit.Assert.assertNull(boolean86);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        int int8 = statisticalBarRenderer0.getRowCount();
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Shape shape6 = statisticalBarRenderer0.getSeriesShape((int) (short) 0);
        statisticalBarRenderer0.setBase(0.0d);
        java.awt.Font font11 = statisticalBarRenderer0.getItemLabelFont(10, (int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = null;
        statisticalBarRenderer12.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition14, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer12.getLegendItemToolTipGenerator();
        double double18 = statisticalBarRenderer12.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer19 = null;
        statisticalBarRenderer12.setGradientPaintTransformer(gradientPaintTransformer19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = null;
        statisticalBarRenderer21.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition23, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator26 = statisticalBarRenderer21.getLegendItemToolTipGenerator();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer21.setErrorIndicatorPaint(paint27);
        statisticalBarRenderer21.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        java.awt.Stroke stroke39 = statisticalBarRenderer32.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer32.setSeriesShape((int) (short) 1, shape41);
        java.lang.Boolean boolean44 = statisticalBarRenderer32.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint46 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer45.setBaseOutlinePaint(paint46);
        boolean boolean48 = statisticalBarRenderer45.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer49.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer49.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer45.setBasePositiveItemLabelPosition(itemLabelPosition52);
        statisticalBarRenderer32.setBaseNegativeItemLabelPosition(itemLabelPosition52);
        statisticalBarRenderer21.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition52);
        statisticalBarRenderer12.setBasePositiveItemLabelPosition(itemLabelPosition52);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition52);
        org.junit.Assert.assertNull(shape6);
        org.junit.Assert.assertNotNull(font11);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.2d + "'", double18 == 0.2d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(stroke39);
        org.junit.Assert.assertNotNull(shape41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(itemLabelPosition50);
        org.junit.Assert.assertNotNull(itemLabelPosition52);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getItemLabelGenerator((int) (byte) 10, (int) '4');
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 1);
        java.awt.Paint paint11 = statisticalBarRenderer0.lookupSeriesFillPaint((int) 'a');
        double double12 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        double double60 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10L);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation63 = null;
        org.jfree.chart.util.Layer layer64 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation63, layer64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2.0d + "'", double60 == 2.0d);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setBaseOutlinePaint(paint24);
        java.awt.Stroke stroke27 = statisticalBarRenderer23.getSeriesOutlineStroke((int) (short) 1);
        java.awt.Shape shape29 = statisticalBarRenderer23.lookupSeriesShape((int) '#');
        java.awt.Paint paint30 = statisticalBarRenderer23.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesPaint((int) (short) 0, paint30, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(stroke27);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint30);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        double double60 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        double double61 = statisticalBarRenderer0.getItemMargin();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2.0d + "'", double60 == 2.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.2d + "'", double61 == 0.2d);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Paint paint5 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint((int) (short) 1);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.awt.Paint paint15 = statisticalBarRenderer10.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBasePaint(paint15, false);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator18);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'position' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer35.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer35.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer35.setSeriesShape((int) ' ', shape42, false);
        statisticalBarRenderer35.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer35.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke51 = statisticalBarRenderer35.lookupSeriesOutlineStroke((int) (byte) 0);
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke51);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener53 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNull(itemLabelPosition36);
        org.junit.Assert.assertNotNull(shape42);
        org.junit.Assert.assertNotNull(stroke51);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesVisible(0);
        org.jfree.chart.LegendItemCollection legendItemCollection16 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(legendItemCollection16);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean8 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend(10);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition9);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Font font8 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer22 = null;
        statisticalBarRenderer10.setGradientPaintTransformer(gradientPaintTransformer22);
        java.awt.Paint paint25 = statisticalBarRenderer10.lookupSeriesPaint((int) ' ');
        java.awt.Paint paint28 = statisticalBarRenderer10.getItemPaint(0, (int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) '#', paint28, true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener31 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(font8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Paint paint18 = statisticalBarRenderer0.getBaseOutlinePaint();
        statisticalBarRenderer0.setBaseSeriesVisible(true, true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint18);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition(10);
        double double8 = statisticalBarRenderer0.getLowerClip();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        org.jfree.chart.plot.Marker marker12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D9, categoryPlot10, valueAxis11, marker12, rectangle2D13);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        boolean boolean32 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        java.awt.Stroke stroke34 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 100);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(stroke34);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator9 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 100, categoryItemLabelGenerator9, true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis7 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker8 = null;
        java.awt.geom.Rectangle2D rectangle2D9 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D5, categoryPlot6, categoryAxis7, categoryMarker8, rectangle2D9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        java.lang.Boolean boolean20 = statisticalBarRenderer8.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseOutlinePaint(paint22);
        boolean boolean24 = statisticalBarRenderer21.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer25.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer25.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer21.setBasePositiveItemLabelPosition(itemLabelPosition28);
        statisticalBarRenderer8.setBaseNegativeItemLabelPosition(itemLabelPosition28);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition28);
        statisticalBarRenderer0.setBase((double) (short) 10);
        java.awt.Graphics2D graphics2D34 = null;
        java.awt.geom.Rectangle2D rectangle2D35 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis36 = null;
        org.jfree.chart.axis.ValueAxis valueAxis37 = null;
        org.jfree.chart.util.Layer layer38 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo39 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D34, rectangle2D35, categoryAxis36, valueAxis37, layer38, plotRenderingInfo39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(itemLabelPosition26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemFillPaint(1, (int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        statisticalBarRenderer13.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer13.getSeriesToolTipGenerator((-1));
        boolean boolean21 = statisticalBarRenderer13.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseOutlinePaint(paint23);
        statisticalBarRenderer13.setBaseFillPaint(paint23, true);
        statisticalBarRenderer0.setBasePaint(paint23);
        boolean boolean28 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesPaint((int) (byte) 0);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        java.awt.Shape shape9 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) -1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((-1), categoryToolTipGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator7);
        org.junit.Assert.assertNotNull(shape9);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer14 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Graphics2D graphics2D15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.util.Layer layer19 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D15, rectangle2D16, categoryAxis17, valueAxis18, layer19, plotRenderingInfo20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(gradientPaintTransformer14);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D6, categoryPlot7, rectangle2D8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        boolean boolean9 = statisticalBarRenderer0.getItemCreateEntity((int) '4', (int) 'a');
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer13.setSeriesPaint(0, paint17);
        java.lang.Object obj19 = null;
        boolean boolean20 = statisticalBarRenderer13.equals(obj19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = null;
        statisticalBarRenderer22.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition24, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer22.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer13.setSeriesPaint(10, paint28);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer13.setLegendItemToolTipGenerator(categorySeriesLabelGenerator31);
        java.awt.Paint paint34 = statisticalBarRenderer13.lookupSeriesPaint(1);
        statisticalBarRenderer0.setBasePaint(paint34, false);
        java.awt.Graphics2D graphics2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis39 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker40 = null;
        java.awt.geom.Rectangle2D rectangle2D41 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D37, categoryPlot38, categoryAxis39, categoryMarker40, rectangle2D41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer9.setSeriesStroke((int) (short) 100, stroke16);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16, false);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener20 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        double double9 = statisticalBarRenderer0.getItemMargin();
        statisticalBarRenderer0.setSeriesCreateEntities(10, (java.lang.Boolean) true, true);
        java.awt.Font font16 = statisticalBarRenderer0.getItemLabelFont((int) '#', 1);
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) ' ');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        boolean boolean31 = statisticalBarRenderer28.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        java.util.EventListener eventListener37 = null;
        boolean boolean38 = statisticalBarRenderer32.hasListener(eventListener37);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = null;
        statisticalBarRenderer32.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer32.getSeriesItemLabelGenerator(0);
        java.awt.Font font44 = statisticalBarRenderer32.getBaseItemLabelFont();
        statisticalBarRenderer28.setBaseItemLabelFont(font44);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator47 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator47);
        java.awt.Shape shape50 = statisticalBarRenderer28.lookupSeriesShape((int) (short) 0);
        java.awt.Font font53 = statisticalBarRenderer28.getItemLabelFont((int) '#', (int) '4');
        statisticalBarRenderer0.setSeriesItemLabelFont((int) 'a', font53);
        java.awt.Stroke stroke55 = statisticalBarRenderer0.getBaseOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint57 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer56.setBaseOutlinePaint(paint57);
        boolean boolean59 = statisticalBarRenderer56.isDrawBarOutline();
        boolean boolean60 = statisticalBarRenderer56.getBaseItemLabelsVisible();
        int int61 = statisticalBarRenderer56.getColumnCount();
        double double62 = statisticalBarRenderer56.getItemMargin();
        boolean boolean63 = statisticalBarRenderer56.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot64 = statisticalBarRenderer56.getPlot();
        java.awt.Paint paint67 = statisticalBarRenderer56.getItemOutlinePaint((int) (short) 1, 1);
        statisticalBarRenderer0.setBaseFillPaint(paint67);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
        org.junit.Assert.assertNotNull(font44);
        org.junit.Assert.assertNotNull(shape50);
        org.junit.Assert.assertNotNull(font53);
        org.junit.Assert.assertNotNull(stroke55);
        org.junit.Assert.assertNotNull(paint57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.2d + "'", double62 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(categoryPlot64);
        org.junit.Assert.assertNotNull(paint67);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape8 = statisticalBarRenderer0.getSeriesShape((int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke18 = statisticalBarRenderer9.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Font font21 = statisticalBarRenderer9.getItemLabelFont((int) (short) 0, 10);
        statisticalBarRenderer0.setBaseItemLabelFont(font21, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Graphics2D graphics2D25 = null;
        java.awt.geom.Rectangle2D rectangle2D26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.axis.ValueAxis valueAxis28 = null;
        org.jfree.chart.util.Layer layer29 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawAnnotations(graphics2D25, rectangle2D26, categoryAxis27, valueAxis28, layer29, plotRenderingInfo30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(shape8);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(font21);
        org.junit.Assert.assertNull(itemLabelPosition24);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        boolean boolean18 = statisticalBarRenderer15.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer19.hasListener(eventListener24);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer19.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator27);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = statisticalBarRenderer19.getSeriesItemLabelGenerator(0);
        java.awt.Font font31 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font31);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator34);
        java.awt.Shape shape37 = statisticalBarRenderer15.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape38 = statisticalBarRenderer15.getBaseShape();
        java.awt.Paint paint39 = statisticalBarRenderer15.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint39);
        java.awt.Stroke stroke42 = statisticalBarRenderer0.getSeriesOutlineStroke((int) '#');
        double double43 = statisticalBarRenderer0.getBase();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator30);
        org.junit.Assert.assertNotNull(font31);
        org.junit.Assert.assertNotNull(shape37);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(stroke42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        java.awt.Graphics2D graphics2D58 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot59 = null;
        org.jfree.chart.axis.ValueAxis valueAxis60 = null;
        java.awt.geom.Rectangle2D rectangle2D61 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D58, categoryPlot59, valueAxis60, rectangle2D61, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer6.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer6.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer6.setSeriesShape((int) ' ', shape13, false);
        statisticalBarRenderer6.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint20 = statisticalBarRenderer6.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        statisticalBarRenderer0.setBaseFillPaint(paint20, true);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertNotNull(paint20);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Stroke stroke2 = statisticalBarRenderer0.getSeriesStroke(10);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.junit.Assert.assertNull(stroke2);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Font font2 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 1, font2);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator5 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator5);
        java.awt.Graphics2D graphics2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.ValueAxis valueAxis9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D7, categoryPlot8, valueAxis9, rectangle2D10, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(font2);
        org.junit.Assert.assertNotNull(itemLabelPosition4);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint9);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer12.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer12.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer12.setSeriesShape((int) ' ', shape19, false);
        statisticalBarRenderer12.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint26 = statisticalBarRenderer12.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer12.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint30 = statisticalBarRenderer12.getSeriesOutlinePaint((int) 'a');
        statisticalBarRenderer12.setSeriesVisibleInLegend(0, (java.lang.Boolean) false, false);
        java.awt.Font font36 = statisticalBarRenderer12.getSeriesItemLabelFont(0);
        java.awt.Paint paint37 = statisticalBarRenderer12.getBaseFillPaint();
        java.awt.Shape shape38 = statisticalBarRenderer12.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape38, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = null;
        statisticalBarRenderer42.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition44, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator47 = statisticalBarRenderer42.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer42.setSeriesStroke((int) (short) 100, stroke49);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) -1, stroke49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(itemLabelPosition13);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(paint30);
        org.junit.Assert.assertNull(font36);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator47);
        org.junit.Assert.assertNotNull(stroke49);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer5.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer5.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke12, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 1, 10);
        boolean boolean18 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.LegendItemCollection legendItemCollection19 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(categoryPlot9);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNull(categoryItemLabelGenerator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(legendItemCollection19);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = statisticalBarRenderer0.getBaseToolTipGenerator();
        statisticalBarRenderer0.setIncludeBaseInRange(false);
        java.awt.Shape shape14 = null;
        statisticalBarRenderer0.setSeriesShape(100, shape14, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(categoryToolTipGenerator10);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Shape shape6 = statisticalBarRenderer0.getSeriesShape((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Paint paint14 = statisticalBarRenderer8.lookupSeriesFillPaint(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer8.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition16, false);
        boolean boolean19 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseOutlinePaint(paint22);
        boolean boolean24 = statisticalBarRenderer21.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = null;
        statisticalBarRenderer21.setBaseURLGenerator(categoryURLGenerator25);
        java.awt.Paint paint29 = statisticalBarRenderer21.getItemLabelPaint(1, 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((int) (byte) -1, paint29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(shape6);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setItemMargin(3.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint17 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 10, paint17);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 0);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        java.awt.Paint paint9 = statisticalBarRenderer5.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) '4', paint9, false);
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        java.awt.Paint paint8 = statisticalBarRenderer0.getSeriesOutlinePaint((int) '#');
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(paint8);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getBase();
        int int4 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D5, categoryPlot6, rectangle2D7, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemFillPaint(1, (int) ' ');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        statisticalBarRenderer13.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer13.getSeriesToolTipGenerator((-1));
        boolean boolean21 = statisticalBarRenderer13.getIncludeBaseInRange();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseOutlinePaint(paint23);
        statisticalBarRenderer13.setBaseFillPaint(paint23, true);
        statisticalBarRenderer0.setBasePaint(paint23);
        org.jfree.chart.LegendItem legendItem30 = statisticalBarRenderer0.getLegendItem(0, (int) (short) 1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(legendItem30);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        boolean boolean3 = statisticalBarRenderer0.getItemCreateEntity(100, (int) (short) 0);
        org.jfree.data.category.CategoryDataset categoryDataset4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.data.Range range5 = statisticalBarRenderer0.findRangeBounds(categoryDataset4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'dataset' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint14 = statisticalBarRenderer11.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint14, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator20 = statisticalBarRenderer0.getURLGenerator((int) (short) 1, (int) (short) 100);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertNull(categoryURLGenerator20);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        boolean boolean27 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = null;
        statisticalBarRenderer28.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition30, false);
        java.util.EventListener eventListener33 = null;
        boolean boolean34 = statisticalBarRenderer28.hasListener(eventListener33);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator36);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator39 = statisticalBarRenderer28.getSeriesItemLabelGenerator(0);
        java.awt.Font font40 = statisticalBarRenderer28.getBaseItemLabelFont();
        statisticalBarRenderer24.setBaseItemLabelFont(font40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = null;
        statisticalBarRenderer24.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator43);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer45.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer45.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer24.setNegativeItemLabelPositionFallback(itemLabelPosition48);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition48);
        boolean boolean53 = statisticalBarRenderer0.getItemCreateEntity(100, (int) '#');
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator54 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator39);
        org.junit.Assert.assertNotNull(font40);
        org.junit.Assert.assertNull(itemLabelPosition46);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator54);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        java.awt.Shape shape10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 1, shape10, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        statisticalBarRenderer13.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer13.getSeriesToolTipGenerator((-1));
        double double21 = statisticalBarRenderer13.getMinimumBarLength();
        java.awt.Paint paint24 = statisticalBarRenderer13.getItemOutlinePaint((int) 'a', 10);
        statisticalBarRenderer0.setBaseOutlinePaint(paint24, true);
        java.awt.Graphics2D graphics2D27 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = null;
        org.jfree.chart.axis.ValueAxis valueAxis29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D27, categoryPlot28, valueAxis29, rectangle2D30, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        boolean boolean11 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        int int12 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer14.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer14.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer14.setSeriesShape((int) ' ', shape21, false);
        statisticalBarRenderer14.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer14.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke30 = statisticalBarRenderer14.lookupSeriesOutlineStroke((int) (byte) 0);
        java.awt.Paint paint32 = statisticalBarRenderer14.lookupSeriesOutlinePaint((int) (short) 10);
        java.awt.Paint paint35 = statisticalBarRenderer14.getItemFillPaint((int) ' ', 100);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) -1, paint35, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNotNull(stroke30);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        statisticalBarRenderer0.setDrawBarOutline(false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 1L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator16 = statisticalBarRenderer11.getLegendItemToolTipGenerator();
        double double17 = statisticalBarRenderer11.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer18 = null;
        statisticalBarRenderer11.setGradientPaintTransformer(gradientPaintTransformer18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer21.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean25 = statisticalBarRenderer21.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer21.getSeriesPositiveItemLabelPosition(10);
        statisticalBarRenderer11.setSeriesNegativeItemLabelPosition(0, itemLabelPosition29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = null;
        statisticalBarRenderer31.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition33, false);
        java.awt.Paint paint36 = statisticalBarRenderer31.getBaseItemLabelPaint();
        statisticalBarRenderer11.setBaseFillPaint(paint36);
        statisticalBarRenderer0.setSeriesItemLabelPaint(10, paint36, false);
        java.awt.Stroke stroke41 = statisticalBarRenderer0.getSeriesOutlineStroke(0);
        boolean boolean44 = statisticalBarRenderer0.getItemVisible((int) 'a', (int) ' ');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.2d + "'", double17 == 0.2d);
        org.junit.Assert.assertNull(itemLabelPosition22);
        org.junit.Assert.assertNotNull(itemLabelPosition24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(itemLabelPosition26);
        org.junit.Assert.assertNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertNull(stroke41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        java.awt.Paint paint24 = statisticalBarRenderer0.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer25.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = statisticalBarRenderer25.getPlot();
        java.awt.Stroke stroke32 = statisticalBarRenderer25.getItemOutlineStroke(1, 100);
        double double33 = statisticalBarRenderer25.getMinimumBarLength();
        statisticalBarRenderer25.setMaximumBarWidth(10.0d);
        statisticalBarRenderer25.setBaseCreateEntities(true, false);
        java.awt.Font font40 = statisticalBarRenderer25.getSeriesItemLabelFont((int) (short) 10);
        statisticalBarRenderer25.setSeriesVisible(10, (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = statisticalBarRenderer25.getSeriesPositiveItemLabelPosition((int) (short) 100);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition45);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition49 = null;
        statisticalBarRenderer47.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition49, false);
        java.awt.Stroke stroke54 = statisticalBarRenderer47.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Font font56 = null;
        statisticalBarRenderer47.setSeriesItemLabelFont((int) (short) 1, font56);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer58 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint59 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer58.setBaseOutlinePaint(paint59);
        boolean boolean61 = statisticalBarRenderer58.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = null;
        statisticalBarRenderer62.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition64, false);
        java.util.EventListener eventListener67 = null;
        boolean boolean68 = statisticalBarRenderer62.hasListener(eventListener67);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator70 = null;
        statisticalBarRenderer62.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator70);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator73 = statisticalBarRenderer62.getSeriesItemLabelGenerator(0);
        java.awt.Font font74 = statisticalBarRenderer62.getBaseItemLabelFont();
        statisticalBarRenderer58.setBaseItemLabelFont(font74);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator77 = null;
        statisticalBarRenderer58.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator77);
        java.awt.Shape shape80 = statisticalBarRenderer58.lookupSeriesShape((int) (short) 0);
        statisticalBarRenderer47.setBaseShape(shape80);
        statisticalBarRenderer47.setBaseSeriesVisible(false, false);
        java.awt.Paint paint87 = statisticalBarRenderer47.getItemLabelPaint((-1), (int) ' ');
        statisticalBarRenderer0.setBaseOutlinePaint(paint87);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categoryPlot29);
        org.junit.Assert.assertNotNull(stroke32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertNull(font40);
        org.junit.Assert.assertNotNull(itemLabelPosition45);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator73);
        org.junit.Assert.assertNotNull(font74);
        org.junit.Assert.assertNotNull(shape80);
        org.junit.Assert.assertNotNull(paint87);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        java.awt.Shape shape10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 1, shape10, true);
        java.awt.Paint paint13 = statisticalBarRenderer0.getBaseFillPaint();
        boolean boolean16 = statisticalBarRenderer0.getItemCreateEntity(100, (int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        java.awt.Stroke stroke22 = statisticalBarRenderer18.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean24 = statisticalBarRenderer18.getSeriesCreateEntities((-1));
        java.awt.Paint paint27 = statisticalBarRenderer18.getItemPaint((int) (byte) 100, (int) (byte) 100);
        java.awt.Stroke stroke28 = statisticalBarRenderer18.getBaseOutlineStroke();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) -1, stroke28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNull(stroke22);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(stroke28);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier6 = statisticalBarRenderer0.getDrawingSupplier();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = statisticalBarRenderer8.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer8.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) ' ', shape15, false);
        statisticalBarRenderer8.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer8.setBaseItemLabelsVisible(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setBaseOutlinePaint(paint24);
        boolean boolean26 = statisticalBarRenderer23.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = null;
        statisticalBarRenderer27.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition29, false);
        java.util.EventListener eventListener32 = null;
        boolean boolean33 = statisticalBarRenderer27.hasListener(eventListener32);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator35 = null;
        statisticalBarRenderer27.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator35);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator38 = statisticalBarRenderer27.getSeriesItemLabelGenerator(0);
        java.awt.Font font39 = statisticalBarRenderer27.getBaseItemLabelFont();
        statisticalBarRenderer23.setBaseItemLabelFont(font39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer23.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator42);
        java.awt.Shape shape45 = statisticalBarRenderer23.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape46 = statisticalBarRenderer23.getBaseShape();
        java.awt.Paint paint47 = statisticalBarRenderer23.getBaseItemLabelPaint();
        statisticalBarRenderer8.setBaseFillPaint(paint47);
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint47, false);
        java.util.EventListener eventListener51 = null;
        boolean boolean52 = statisticalBarRenderer0.hasListener(eventListener51);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(drawingSupplier6);
        org.junit.Assert.assertNull(itemLabelPosition9);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator38);
        org.junit.Assert.assertNotNull(font39);
        org.junit.Assert.assertNotNull(shape45);
        org.junit.Assert.assertNotNull(shape46);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28, true);
        java.awt.Shape shape32 = statisticalBarRenderer0.getSeriesShape(1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = statisticalBarRenderer0.getURLGenerator(100, 100);
        org.jfree.chart.plot.CategoryPlot categoryPlot36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(shape32);
        org.junit.Assert.assertNull(categoryURLGenerator35);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        java.awt.Shape shape26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setBaseShape(shape26, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator29 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator29, false);
        java.awt.Paint paint32 = null;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint32);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer35 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition37 = null;
        statisticalBarRenderer35.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition37, false);
        double double40 = statisticalBarRenderer35.getBase();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer41.setBaseOutlinePaint(paint42);
        boolean boolean44 = statisticalBarRenderer41.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer45.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer45.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer41.setBasePositiveItemLabelPosition(itemLabelPosition48);
        statisticalBarRenderer35.setBasePositiveItemLabelPosition(itemLabelPosition48);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 100, itemLabelPosition48);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(itemLabelPosition46);
        org.junit.Assert.assertNotNull(itemLabelPosition48);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        java.awt.Paint paint9 = statisticalBarRenderer0.getItemPaint((int) (byte) 100, (int) (byte) 100);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator10 = statisticalBarRenderer0.getBaseURLGenerator();
        boolean boolean11 = statisticalBarRenderer0.getBaseSeriesVisible();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) true, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNull(categoryURLGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.LegendItem legendItem7 = statisticalBarRenderer0.getLegendItem(0, (int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        java.awt.Paint paint14 = statisticalBarRenderer9.getBaseItemLabelPaint();
        statisticalBarRenderer9.setBaseCreateEntities(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setBaseOutlinePaint(paint20);
        java.awt.Stroke stroke23 = statisticalBarRenderer19.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean25 = statisticalBarRenderer19.getSeriesCreateEntities((-1));
        double double26 = statisticalBarRenderer19.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = null;
        statisticalBarRenderer27.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition29, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer27.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer27.setSeriesShape((int) (short) 1, shape36);
        java.lang.Boolean boolean39 = statisticalBarRenderer27.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer40 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint41 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer40.setBaseOutlinePaint(paint41);
        boolean boolean43 = statisticalBarRenderer40.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition45 = statisticalBarRenderer44.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = statisticalBarRenderer44.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer40.setBasePositiveItemLabelPosition(itemLabelPosition47);
        statisticalBarRenderer27.setBaseNegativeItemLabelPosition(itemLabelPosition47);
        statisticalBarRenderer19.setNegativeItemLabelPositionFallback(itemLabelPosition47);
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition47);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition53 = statisticalBarRenderer9.getSeriesPositiveItemLabelPosition((int) (byte) 1);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(1, itemLabelPosition53);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(legendItem7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(stroke23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNotNull(shape36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(paint41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(itemLabelPosition45);
        org.junit.Assert.assertNotNull(itemLabelPosition47);
        org.junit.Assert.assertNotNull(itemLabelPosition53);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
        java.awt.Graphics2D graphics2D6 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot7 = null;
        java.awt.geom.Rectangle2D rectangle2D8 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainGridline(graphics2D6, categoryPlot7, rectangle2D8, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        int int6 = statisticalBarRenderer0.getRowCount();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator8 = statisticalBarRenderer0.getLegendItemURLGenerator();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator7);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator8);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        double double5 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) ' ');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.2d + "'", double5 == 0.2d);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer11.setSeriesPaint(10, paint26);
        statisticalBarRenderer11.setBaseSeriesVisible(true);
        statisticalBarRenderer11.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = statisticalBarRenderer33.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        boolean boolean43 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        double double44 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener45 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryPlot37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        double double15 = statisticalBarRenderer9.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator16 = null;
        statisticalBarRenderer9.setBaseToolTipGenerator(categoryToolTipGenerator16);
        boolean boolean18 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer9);
        boolean boolean19 = statisticalBarRenderer9.getIncludeBaseInRange();
        boolean boolean20 = statisticalBarRenderer9.getAutoPopulateSeriesFillPaint();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.2d + "'", double15 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        boolean boolean7 = statisticalBarRenderer0.isDrawBarOutline();
        java.util.EventListener eventListener8 = null;
        boolean boolean9 = statisticalBarRenderer0.hasListener(eventListener8);
        java.awt.Paint paint11 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) 1, paint11, true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setSeriesPaint(0, paint13);
        java.lang.Object obj15 = null;
        boolean boolean16 = statisticalBarRenderer9.equals(obj15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer18.getLegendItemToolTipGenerator();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer18.setErrorIndicatorPaint(paint24);
        statisticalBarRenderer9.setSeriesPaint(10, paint24);
        boolean boolean27 = statisticalBarRenderer9.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        boolean boolean31 = statisticalBarRenderer28.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer32.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer32.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer28.setBasePositiveItemLabelPosition(itemLabelPosition35);
        statisticalBarRenderer9.setNegativeItemLabelPositionFallback(itemLabelPosition35);
        boolean boolean38 = statisticalBarRenderer9.getIncludeBaseInRange();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = statisticalBarRenderer9.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator39);
        boolean boolean42 = statisticalBarRenderer0.isSeriesItemLabelsVisible(0);
        boolean boolean45 = statisticalBarRenderer0.getItemCreateEntity((int) (short) 1, 10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer9.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot13 = statisticalBarRenderer9.getPlot();
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke16);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        boolean boolean21 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNull(categoryPlot13);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 100, (int) (short) 100);
        boolean boolean27 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.event.RendererChangeListener rendererChangeListener28 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        statisticalBarRenderer7.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition9, false);
        java.awt.Stroke stroke14 = statisticalBarRenderer7.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = statisticalBarRenderer7.getPlot();
        double double16 = statisticalBarRenderer7.getMinimumBarLength();
        java.lang.Boolean boolean18 = statisticalBarRenderer7.getSeriesCreateEntities((int) 'a');
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer7.getSeriesNegativeItemLabelPosition((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((-1), itemLabelPosition20, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNull(categoryPlot15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        double double9 = statisticalBarRenderer0.getItemMargin();
        statisticalBarRenderer0.setSeriesCreateEntities(10, (java.lang.Boolean) true, true);
        java.awt.Font font16 = statisticalBarRenderer0.getItemLabelFont((int) '#', 1);
        boolean boolean17 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator18 = statisticalBarRenderer0.getBaseURLGenerator();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(categoryURLGenerator18);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        java.awt.Paint paint13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setSeriesPaint(0, paint13);
        java.lang.Object obj15 = null;
        boolean boolean16 = statisticalBarRenderer9.equals(obj15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator23 = statisticalBarRenderer18.getLegendItemToolTipGenerator();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer18.setErrorIndicatorPaint(paint24);
        statisticalBarRenderer9.setSeriesPaint(10, paint24);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = null;
        statisticalBarRenderer9.setLegendItemToolTipGenerator(categorySeriesLabelGenerator27);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer30.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot34 = statisticalBarRenderer30.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = statisticalBarRenderer30.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer30.getSeriesNegativeItemLabelPosition((int) 'a');
        statisticalBarRenderer9.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition38);
        java.lang.Boolean boolean41 = statisticalBarRenderer9.getSeriesVisible(0);
        java.awt.Stroke stroke42 = statisticalBarRenderer9.getBaseStroke();
        java.awt.Stroke stroke44 = statisticalBarRenderer9.lookupSeriesStroke((int) (byte) 1);
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 1, stroke44, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator47 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator23);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categoryPlot34);
        org.junit.Assert.assertNotNull(itemLabelPosition36);
        org.junit.Assert.assertNotNull(itemLabelPosition38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertNull(categoryItemLabelGenerator47);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer5.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = statisticalBarRenderer5.getPlot();
        java.awt.Stroke stroke12 = statisticalBarRenderer5.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke12, false);
        statisticalBarRenderer0.setItemMargin((double) (-1.0f));
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(categoryPlot9);
        org.junit.Assert.assertNotNull(stroke12);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        double double7 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = statisticalBarRenderer9.getNegativeItemLabelPositionFallback();
        boolean boolean13 = statisticalBarRenderer9.getItemVisible((int) (byte) 100, (int) (byte) 1);
        statisticalBarRenderer9.setMinimumBarLength(0.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer17.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer17.setSeriesShape((int) ' ', shape24, false);
        statisticalBarRenderer17.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint31 = statisticalBarRenderer17.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer17.getSeriesNegativeItemLabelPosition((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setBaseOutlinePaint(paint35);
        double double37 = statisticalBarRenderer34.getItemLabelAnchorOffset();
        statisticalBarRenderer34.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint41 = statisticalBarRenderer34.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer17.setBaseFillPaint(paint41);
        statisticalBarRenderer9.setSeriesFillPaint((int) ' ', paint41);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) (short) 0, paint41, true);
        statisticalBarRenderer0.setSeriesItemLabelsVisible((int) '#', true);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 2.0d + "'", double7 == 2.0d);
        org.junit.Assert.assertNull(itemLabelPosition10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0d + "'", double37 == 2.0d);
        org.junit.Assert.assertNotNull(paint41);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28, true);
        java.awt.Shape shape32 = statisticalBarRenderer0.getSeriesShape(1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator35 = statisticalBarRenderer0.getURLGenerator(100, 100);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(shape32);
        org.junit.Assert.assertNull(categoryURLGenerator35);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.LegendItem legendItem7 = statisticalBarRenderer0.getLegendItem(0, (int) (byte) -1);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator8 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator8);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(legendItem7);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        java.awt.Paint paint11 = statisticalBarRenderer0.getSeriesFillPaint((int) ' ');
        java.awt.Paint paint12 = statisticalBarRenderer0.getBaseFillPaint();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(paint11);
        org.junit.Assert.assertNotNull(paint12);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape9 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 10);
        double double10 = statisticalBarRenderer0.getMaximumBarWidth();
        double double11 = statisticalBarRenderer0.getUpperClip();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer9.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        java.awt.Stroke stroke27 = statisticalBarRenderer20.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer20.setSeriesShape((int) (short) 1, shape29);
        java.lang.Boolean boolean32 = statisticalBarRenderer20.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setBaseOutlinePaint(paint34);
        boolean boolean36 = statisticalBarRenderer33.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer37.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer37.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer33.setBasePositiveItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer20.setBaseNegativeItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer9.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition40);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition40);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer46 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer46.setBaseOutlinePaint(paint47);
        boolean boolean49 = statisticalBarRenderer46.isDrawBarOutline();
        statisticalBarRenderer46.setDrawBarOutline(false);
        java.awt.Stroke stroke53 = null;
        statisticalBarRenderer46.setSeriesOutlineStroke((int) (short) 0, stroke53, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint57 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer56.setBaseOutlinePaint(paint57);
        boolean boolean59 = statisticalBarRenderer56.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition61 = statisticalBarRenderer60.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = statisticalBarRenderer60.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer56.setBasePositiveItemLabelPosition(itemLabelPosition63);
        statisticalBarRenderer46.setBaseNegativeItemLabelPosition(itemLabelPosition63, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer68 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition70 = null;
        statisticalBarRenderer68.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition70, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator74 = statisticalBarRenderer68.getSeriesToolTipGenerator((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer75 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition77 = null;
        statisticalBarRenderer75.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition77, false);
        java.awt.Paint paint81 = statisticalBarRenderer75.getSeriesFillPaint((int) (byte) 0);
        boolean boolean84 = statisticalBarRenderer75.getItemCreateEntity((int) '4', (int) 'a');
        java.awt.Paint paint87 = statisticalBarRenderer75.getItemPaint(1, (int) (short) -1);
        statisticalBarRenderer68.setBasePaint(paint87);
        java.awt.Paint paint91 = statisticalBarRenderer68.getItemLabelPaint(100, (int) (short) 0);
        statisticalBarRenderer46.setSeriesPaint((int) (short) 1, paint91);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesFillPaint((-1), paint91, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(paint57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(itemLabelPosition61);
        org.junit.Assert.assertNotNull(itemLabelPosition63);
        org.junit.Assert.assertNull(categoryToolTipGenerator74);
        org.junit.Assert.assertNull(paint81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(paint87);
        org.junit.Assert.assertNotNull(paint91);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(false);
        statisticalBarRenderer0.setBaseCreateEntities(false);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.lookupSeriesStroke((int) '#');
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent19 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent19);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(stroke18);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint18 = statisticalBarRenderer0.getSeriesOutlinePaint((int) 'a');
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) false, false);
        java.awt.Font font24 = statisticalBarRenderer0.getSeriesItemLabelFont(0);
        java.awt.Paint paint25 = statisticalBarRenderer0.getBaseFillPaint();
        java.awt.Shape shape26 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.LegendItem legendItem29 = statisticalBarRenderer0.getLegendItem((int) '#', (-1));
        java.awt.Graphics2D graphics2D30 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot31 = null;
        org.jfree.chart.axis.ValueAxis valueAxis32 = null;
        java.awt.geom.Rectangle2D rectangle2D33 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D30, categoryPlot31, valueAxis32, rectangle2D33, 0.2d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNull(paint18);
        org.junit.Assert.assertNull(font24);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertNull(legendItem29);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        boolean boolean7 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.LegendItem legendItem10 = statisticalBarRenderer0.getLegendItem((-1), (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer11.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = statisticalBarRenderer11.getPlot();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer11.setSeriesOutlinePaint(10, paint17, true);
        java.awt.Shape shape21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer11.setSeriesShape((int) (byte) 1, shape21, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator25 = statisticalBarRenderer11.getSeriesURLGenerator((int) 'a');
        statisticalBarRenderer11.setSeriesCreateEntities(10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator34 = statisticalBarRenderer29.getLegendItemToolTipGenerator();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer29.setErrorIndicatorPaint(paint35);
        statisticalBarRenderer11.setBaseItemLabelPaint(paint35);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint35, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator41 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) 'a', categoryURLGenerator41, true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(legendItem10);
        org.junit.Assert.assertNull(categoryPlot15);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNull(categoryURLGenerator25);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator34);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Font font8 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer22 = null;
        statisticalBarRenderer10.setGradientPaintTransformer(gradientPaintTransformer22);
        java.awt.Paint paint25 = statisticalBarRenderer10.lookupSeriesPaint((int) ' ');
        java.awt.Paint paint28 = statisticalBarRenderer10.getItemPaint(0, (int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) '#', paint28, true);
        boolean boolean31 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = statisticalBarRenderer0.getNegativeItemLabelPosition(1, (int) (short) 1);
        java.awt.Stroke stroke36 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 10);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(font8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition34);
        org.junit.Assert.assertNull(stroke36);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        java.awt.Paint paint17 = statisticalBarRenderer0.lookupSeriesFillPaint((int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Graphics2D graphics2D19 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = null;
        java.awt.geom.Rectangle2D rectangle2D21 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D19, categoryPlot20, rectangle2D21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(itemLabelPosition18);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        java.awt.Paint paint24 = statisticalBarRenderer19.getBaseItemLabelPaint();
        statisticalBarRenderer19.setBaseCreateEntities(false, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer29.setBaseOutlinePaint(paint30);
        java.awt.Stroke stroke33 = statisticalBarRenderer29.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean35 = statisticalBarRenderer29.getSeriesCreateEntities((-1));
        double double36 = statisticalBarRenderer29.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = null;
        statisticalBarRenderer37.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition39, false);
        java.awt.Stroke stroke44 = statisticalBarRenderer37.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape46 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer37.setSeriesShape((int) (short) 1, shape46);
        java.lang.Boolean boolean49 = statisticalBarRenderer37.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer50 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint51 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer50.setBaseOutlinePaint(paint51);
        boolean boolean53 = statisticalBarRenderer50.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer54 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition55 = statisticalBarRenderer54.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = statisticalBarRenderer54.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer50.setBasePositiveItemLabelPosition(itemLabelPosition57);
        statisticalBarRenderer37.setBaseNegativeItemLabelPosition(itemLabelPosition57);
        statisticalBarRenderer29.setNegativeItemLabelPositionFallback(itemLabelPosition57);
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) '4', itemLabelPosition57);
        java.awt.Paint paint62 = statisticalBarRenderer19.getBaseOutlinePaint();
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint62, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNull(stroke33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1.0d + "'", double36 == 1.0d);
        org.junit.Assert.assertNotNull(stroke44);
        org.junit.Assert.assertNotNull(shape46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(paint51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(itemLabelPosition55);
        org.junit.Assert.assertNotNull(itemLabelPosition57);
        org.junit.Assert.assertNotNull(paint62);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseOutlinePaint(paint21);
        double double23 = statisticalBarRenderer20.getItemLabelAnchorOffset();
        statisticalBarRenderer20.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint27 = statisticalBarRenderer20.lookupSeriesOutlinePaint(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer28.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean32 = statisticalBarRenderer28.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint34 = statisticalBarRenderer28.getBaseFillPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator35 = statisticalBarRenderer28.getBaseToolTipGenerator();
        java.awt.Stroke stroke37 = statisticalBarRenderer28.lookupSeriesStroke((int) 'a');
        statisticalBarRenderer20.setBaseOutlineStroke(stroke37, true);
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke37);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2.0d + "'", double23 == 2.0d);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertNull(categoryToolTipGenerator35);
        org.junit.Assert.assertNotNull(stroke37);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(100, (java.lang.Boolean) false);
        java.lang.Boolean boolean15 = statisticalBarRenderer0.getSeriesVisible(0);
        statisticalBarRenderer0.setDrawBarOutline(true);
        java.awt.Paint paint19 = statisticalBarRenderer0.getSeriesPaint((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseOutlinePaint(paint21);
        boolean boolean23 = statisticalBarRenderer20.isDrawBarOutline();
        boolean boolean24 = statisticalBarRenderer20.getBaseItemLabelsVisible();
        int int25 = statisticalBarRenderer20.getColumnCount();
        double double26 = statisticalBarRenderer20.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer27.setBaseOutlinePaint(paint28);
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer27.setSeriesPaint(0, paint31);
        java.lang.Object obj33 = null;
        boolean boolean34 = statisticalBarRenderer27.equals(obj33);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = null;
        statisticalBarRenderer36.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition38, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator41 = statisticalBarRenderer36.getLegendItemToolTipGenerator();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer36.setErrorIndicatorPaint(paint42);
        statisticalBarRenderer27.setSeriesPaint(10, paint42);
        statisticalBarRenderer27.setBaseSeriesVisible(true);
        statisticalBarRenderer27.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer49 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer49.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot53 = statisticalBarRenderer49.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition55 = statisticalBarRenderer49.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer27.setBaseNegativeItemLabelPosition(itemLabelPosition55, true);
        statisticalBarRenderer20.setBasePositiveItemLabelPosition(itemLabelPosition55);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition55);
        boolean boolean60 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(paint19);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.2d + "'", double26 == 0.2d);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator41);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNull(categoryPlot53);
        org.junit.Assert.assertNotNull(itemLabelPosition55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.awt.Paint paint7 = statisticalBarRenderer0.getSeriesPaint((-1));
        java.lang.Object obj8 = statisticalBarRenderer0.clone();
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(paint7);
        org.junit.Assert.assertNotNull(obj8);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer14.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot18 = statisticalBarRenderer14.getPlot();
        java.awt.Font font19 = statisticalBarRenderer14.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (byte) 10, font19);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 1);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNull(categoryPlot18);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNull(categoryItemLabelGenerator25);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator17 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) 10, categoryItemLabelGenerator17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer19.hasListener(eventListener24);
        boolean boolean26 = statisticalBarRenderer19.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = null;
        statisticalBarRenderer27.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition29, false);
        java.util.EventListener eventListener32 = null;
        boolean boolean33 = statisticalBarRenderer27.hasListener(eventListener32);
        boolean boolean34 = statisticalBarRenderer27.getAutoPopulateSeriesFillPaint();
        double double35 = statisticalBarRenderer27.getItemLabelAnchorOffset();
        java.awt.Paint paint36 = statisticalBarRenderer27.getErrorIndicatorPaint();
        statisticalBarRenderer19.setBasePaint(paint36, true);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint36, false);
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesShape(true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2.0d + "'", double35 == 2.0d);
        org.junit.Assert.assertNotNull(paint36);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        java.awt.Paint paint32 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Boolean boolean34 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) (byte) 100);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertNotNull(paint32);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier6 = statisticalBarRenderer0.getDrawingSupplier();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Paint paint13 = statisticalBarRenderer0.getItemOutlinePaint(0, (-1));
        org.junit.Assert.assertNotNull(itemLabelPosition5);
        org.junit.Assert.assertNull(drawingSupplier6);
        org.junit.Assert.assertNotNull(paint13);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        statisticalBarRenderer0.setBaseCreateEntities(true, true);
        java.awt.Font font11 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(font11);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Shape shape7 = statisticalBarRenderer0.getItemShape((int) (short) -1, (int) (short) -1);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis10 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D8, categoryPlot9, categoryAxis10, categoryMarker11, rectangle2D12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(shape7);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer14 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Stroke stroke16 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) 'a');
        java.awt.Font font17 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.lang.Boolean boolean19 = statisticalBarRenderer0.getSeriesItemLabelsVisible((int) '4');
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(gradientPaintTransformer14);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(font17);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        statisticalBarRenderer0.setMaximumBarWidth(10.0d);
        statisticalBarRenderer0.setBaseCreateEntities(true, false);
        java.awt.Font font15 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (short) 10);
        statisticalBarRenderer0.setSeriesVisible(10, (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) (short) 100);
        java.lang.Boolean boolean22 = statisticalBarRenderer0.getSeriesVisibleInLegend(1);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(font15);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = statisticalBarRenderer0.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator17 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator24 = statisticalBarRenderer19.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer19.setSeriesStroke((int) (short) 100, stroke26);
        statisticalBarRenderer19.setBaseItemLabelsVisible(false);
        boolean boolean32 = statisticalBarRenderer19.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer19.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer36.setBaseOutlinePaint(paint37);
        boolean boolean39 = statisticalBarRenderer36.isDrawBarOutline();
        statisticalBarRenderer36.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator43 = statisticalBarRenderer36.getSeriesToolTipGenerator((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = statisticalBarRenderer36.getNegativeItemLabelPosition(100, (int) (short) -1);
        statisticalBarRenderer19.setBasePositiveItemLabelPosition(itemLabelPosition46);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer48 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint49 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer48.setBaseOutlinePaint(paint49);
        java.awt.Paint paint52 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer48.setSeriesPaint(0, paint52);
        java.lang.Object obj54 = null;
        boolean boolean55 = statisticalBarRenderer48.equals(obj54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition59 = null;
        statisticalBarRenderer57.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition59, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator62 = statisticalBarRenderer57.getLegendItemToolTipGenerator();
        java.awt.Paint paint63 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer57.setErrorIndicatorPaint(paint63);
        statisticalBarRenderer48.setSeriesPaint(10, paint63);
        statisticalBarRenderer19.setBasePaint(paint63, true);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 100, paint63, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(categoryURLGenerator15);
        org.junit.Assert.assertNull(categoryToolTipGenerator17);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator24);
        org.junit.Assert.assertNotNull(stroke26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator43);
        org.junit.Assert.assertNotNull(itemLabelPosition46);
        org.junit.Assert.assertNotNull(paint49);
        org.junit.Assert.assertNotNull(paint52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator62);
        org.junit.Assert.assertNotNull(paint63);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        boolean boolean9 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint14 = statisticalBarRenderer11.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint14, true);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator17 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Shape shape19 = statisticalBarRenderer0.lookupSeriesShape((int) ' ');
        java.awt.Font font21 = statisticalBarRenderer0.getSeriesItemLabelFont((-1));
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator17);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNull(font21);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer0.getBaseItemLabelGenerator();
        java.awt.Paint paint23 = null;
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint23);
        statisticalBarRenderer0.setItemMargin((double) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = null;
        statisticalBarRenderer27.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition29, false);
        java.awt.Stroke stroke34 = statisticalBarRenderer27.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot35 = statisticalBarRenderer27.getPlot();
        java.awt.Paint paint36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer27.setBaseItemLabelPaint(paint36);
        statisticalBarRenderer0.setBaseFillPaint(paint36);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertNull(categoryPlot35);
        org.junit.Assert.assertNotNull(paint36);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Paint paint18 = statisticalBarRenderer0.getBaseOutlinePaint();
        boolean boolean19 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) '4', (java.lang.Boolean) false, true);
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Graphics2D graphics2D26 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState27 = null;
        java.awt.geom.Rectangle2D rectangle2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis30 = null;
        org.jfree.chart.axis.ValueAxis valueAxis31 = null;
        org.jfree.data.category.CategoryDataset categoryDataset32 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D26, categoryItemRendererState27, rectangle2D28, categoryPlot29, categoryAxis30, valueAxis31, categoryDataset32, 1, (int) 'a', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) -1);
        java.awt.Paint paint8 = statisticalBarRenderer0.getBaseItemLabelPaint();
        java.lang.Class<?> wildcardClass9 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean14 = statisticalBarRenderer10.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer10.getSeriesPositiveItemLabelPosition(10);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition(0, itemLabelPosition18);
        java.awt.Stroke stroke22 = statisticalBarRenderer0.getItemStroke(0, (-1));
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(itemLabelPosition13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(itemLabelPosition15);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(stroke22);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        boolean boolean5 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) -1);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 10);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator11 = statisticalBarRenderer0.getSeriesURLGenerator(100);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(categoryURLGenerator11);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        boolean boolean11 = statisticalBarRenderer0.getItemVisible((int) (short) 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((-1), true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setItemMargin(3.0d);
        java.awt.Font font10 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (short) 0);
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 0);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(font10);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer0.getItemLabelGenerator((int) (short) 100, (int) (short) 100);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener33 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addChangeListener(rendererChangeListener33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer21.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition29);
        java.lang.Boolean boolean32 = statisticalBarRenderer0.getSeriesVisible(0);
        statisticalBarRenderer0.setBaseSeriesVisible(false, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer36 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = null;
        statisticalBarRenderer36.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition38, false);
        java.awt.Stroke stroke43 = statisticalBarRenderer36.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape45 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer36.setSeriesShape((int) (short) 1, shape45);
        statisticalBarRenderer0.setBaseShape(shape45);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(stroke43);
        org.junit.Assert.assertNotNull(shape45);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        statisticalBarRenderer0.setSeriesVisible(0, (java.lang.Boolean) true, true);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        java.awt.Stroke stroke17 = statisticalBarRenderer9.getBaseOutlineStroke();
        statisticalBarRenderer9.setSeriesVisible(1, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setBaseOutlinePaint(paint24);
        java.util.EventListener eventListener26 = null;
        boolean boolean27 = statisticalBarRenderer23.hasListener(eventListener26);
        boolean boolean28 = statisticalBarRenderer23.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer29.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer29.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape36 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer29.setSeriesShape((int) ' ', shape36, false);
        statisticalBarRenderer29.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer29.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke45 = statisticalBarRenderer29.lookupSeriesOutlineStroke((int) (byte) 0);
        statisticalBarRenderer23.setBaseStroke(stroke45);
        statisticalBarRenderer9.setSeriesOutlineStroke((int) (byte) 10, stroke45);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesStroke((int) (short) -1, stroke45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(itemLabelPosition30);
        org.junit.Assert.assertNotNull(shape36);
        org.junit.Assert.assertNotNull(stroke45);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer18.getNegativeItemLabelPositionFallback();
        boolean boolean22 = statisticalBarRenderer18.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.LegendItem legendItem25 = statisticalBarRenderer18.getLegendItem(0, (int) (byte) -1);
        statisticalBarRenderer18.setBaseSeriesVisibleInLegend(false);
        statisticalBarRenderer18.setSeriesCreateEntities(0, (java.lang.Boolean) true);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer31 = statisticalBarRenderer18.getGradientPaintTransformer();
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer31);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(10, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNull(itemLabelPosition19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(legendItem25);
        org.junit.Assert.assertNotNull(gradientPaintTransformer31);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        double double9 = statisticalBarRenderer0.getItemMargin();
        java.awt.Font font10 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.2d + "'", double9 == 0.2d);
        org.junit.Assert.assertNotNull(font10);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        java.awt.Paint paint8 = null;
        statisticalBarRenderer0.setSeriesPaint((int) '#', paint8, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) -1, categoryItemLabelGenerator12, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation4 = null;
        org.jfree.chart.util.Layer layer5 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation4, layer5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        boolean boolean18 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer19.setBaseOutlinePaint(paint20);
        boolean boolean22 = statisticalBarRenderer19.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = statisticalBarRenderer23.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer23.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer19.setBasePositiveItemLabelPosition(itemLabelPosition26);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition26);
        boolean boolean29 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Font font31 = statisticalBarRenderer0.getSeriesItemLabelFont((int) (byte) 0);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(itemLabelPosition24);
        org.junit.Assert.assertNotNull(itemLabelPosition26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(font31);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        java.awt.Font font12 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Stroke stroke13 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(stroke13);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        statisticalBarRenderer0.setSeriesVisible((int) 'a', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(100);
        java.awt.Font font18 = null;
        statisticalBarRenderer0.setSeriesItemLabelFont((int) '#', font18);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 100);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setBase((double) '4');
        java.awt.Graphics2D graphics2D14 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot15 = null;
        java.awt.geom.Rectangle2D rectangle2D16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D14, categoryPlot15, rectangle2D16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Stroke stroke11 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 0);
        java.awt.Font font12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer0.setBaseItemLabelFont(font12, false);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        java.awt.Stroke stroke18 = statisticalBarRenderer0.getSeriesStroke((int) (byte) 10);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(stroke11);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNull(stroke18);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        statisticalBarRenderer0.setMinimumBarLength(0.0d);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator7 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setLegendItemLabelGenerator(categorySeriesLabelGenerator7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'generator' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.util.EventListener eventListener9 = null;
        boolean boolean10 = statisticalBarRenderer4.hasListener(eventListener9);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer4.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator12);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator15 = statisticalBarRenderer4.getSeriesItemLabelGenerator(0);
        java.awt.Font font16 = statisticalBarRenderer4.getBaseItemLabelFont();
        statisticalBarRenderer0.setBaseItemLabelFont(font16);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator19);
        java.awt.Shape shape22 = statisticalBarRenderer0.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape23 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        boolean boolean31 = statisticalBarRenderer28.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        java.util.EventListener eventListener37 = null;
        boolean boolean38 = statisticalBarRenderer32.hasListener(eventListener37);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator40 = null;
        statisticalBarRenderer32.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator40);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator43 = statisticalBarRenderer32.getSeriesItemLabelGenerator(0);
        java.awt.Font font44 = statisticalBarRenderer32.getBaseItemLabelFont();
        statisticalBarRenderer28.setBaseItemLabelFont(font44);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator47 = null;
        statisticalBarRenderer28.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator47);
        java.awt.Shape shape50 = statisticalBarRenderer28.lookupSeriesShape((int) (short) 0);
        java.awt.Font font53 = statisticalBarRenderer28.getItemLabelFont((int) '#', (int) '4');
        statisticalBarRenderer0.setSeriesItemLabelFont((int) 'a', font53);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer55 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition57 = null;
        statisticalBarRenderer55.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition57, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition60 = statisticalBarRenderer55.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = null;
        statisticalBarRenderer61.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition63, false);
        java.awt.Stroke stroke68 = statisticalBarRenderer61.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot69 = statisticalBarRenderer61.getPlot();
        java.awt.Paint paint70 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer61.setBaseItemLabelPaint(paint70);
        statisticalBarRenderer55.setBaseOutlinePaint(paint70, true);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator74 = statisticalBarRenderer55.getBaseToolTipGenerator();
        java.awt.Paint paint77 = statisticalBarRenderer55.getItemFillPaint((int) '4', (int) (byte) 1);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint77);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator15);
        org.junit.Assert.assertNotNull(font16);
        org.junit.Assert.assertNotNull(shape22);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator43);
        org.junit.Assert.assertNotNull(font44);
        org.junit.Assert.assertNotNull(shape50);
        org.junit.Assert.assertNotNull(font53);
        org.junit.Assert.assertNotNull(itemLabelPosition60);
        org.junit.Assert.assertNotNull(stroke68);
        org.junit.Assert.assertNull(categoryPlot69);
        org.junit.Assert.assertNotNull(paint70);
        org.junit.Assert.assertNull(categoryToolTipGenerator74);
        org.junit.Assert.assertNotNull(paint77);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setMinimumBarLength((double) (-1L));
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer0.hasListener(eventListener15);
        statisticalBarRenderer0.setItemMargin(0.2d);
        java.awt.Paint paint19 = statisticalBarRenderer0.getBasePaint();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryPlot12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(paint19);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setDrawBarOutline(false);
        java.awt.Stroke stroke7 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (short) 0, stroke7, true);
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(10, (-1));
        java.awt.Shape shape14 = statisticalBarRenderer0.getSeriesShape((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = null;
        statisticalBarRenderer15.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition17, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator20 = statisticalBarRenderer15.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer15.setSeriesStroke((int) (short) 100, stroke22);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent24 = null;
        statisticalBarRenderer15.notifyListeners(rendererChangeEvent24);
        statisticalBarRenderer15.setSeriesVisible((int) 'a', (java.lang.Boolean) false, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer15.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition31, true);
        java.lang.Object obj34 = statisticalBarRenderer0.clone();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNull(shape14);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator20);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        statisticalBarRenderer0.setBase((double) 10L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        java.util.EventListener eventListener34 = null;
        boolean boolean35 = statisticalBarRenderer29.hasListener(eventListener34);
        boolean boolean36 = statisticalBarRenderer29.getAutoPopulateSeriesFillPaint();
        double double37 = statisticalBarRenderer29.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition43 = statisticalBarRenderer38.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition46 = null;
        statisticalBarRenderer44.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition46, false);
        java.awt.Stroke stroke51 = statisticalBarRenderer44.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot52 = statisticalBarRenderer44.getPlot();
        java.awt.Paint paint53 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer44.setBaseItemLabelPaint(paint53);
        statisticalBarRenderer38.setBaseOutlinePaint(paint53, true);
        statisticalBarRenderer29.setBasePaint(paint53);
        statisticalBarRenderer0.setSeriesOutlinePaint(0, paint53, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer60 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint61 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer60.setBaseOutlinePaint(paint61);
        boolean boolean63 = statisticalBarRenderer60.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer64 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition66 = null;
        statisticalBarRenderer64.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition66, false);
        java.util.EventListener eventListener69 = null;
        boolean boolean70 = statisticalBarRenderer64.hasListener(eventListener69);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator72 = null;
        statisticalBarRenderer64.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator72);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator75 = statisticalBarRenderer64.getSeriesItemLabelGenerator(0);
        java.awt.Font font76 = statisticalBarRenderer64.getBaseItemLabelFont();
        statisticalBarRenderer60.setBaseItemLabelFont(font76);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator79 = null;
        statisticalBarRenderer60.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator79);
        java.awt.Shape shape82 = statisticalBarRenderer60.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape83 = statisticalBarRenderer60.getBaseShape();
        statisticalBarRenderer0.setBaseShape(shape83);
        java.awt.Paint paint87 = statisticalBarRenderer0.getItemLabelPaint((int) (short) 100, (int) (short) -1);
        statisticalBarRenderer0.setItemMargin((double) 0L);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0d + "'", double37 == 2.0d);
        org.junit.Assert.assertNotNull(itemLabelPosition43);
        org.junit.Assert.assertNotNull(stroke51);
        org.junit.Assert.assertNull(categoryPlot52);
        org.junit.Assert.assertNotNull(paint53);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator75);
        org.junit.Assert.assertNotNull(font76);
        org.junit.Assert.assertNotNull(shape82);
        org.junit.Assert.assertNotNull(shape83);
        org.junit.Assert.assertNotNull(paint87);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer8.hasListener(eventListener13);
        boolean boolean15 = statisticalBarRenderer8.getAutoPopulateSeriesFillPaint();
        double double16 = statisticalBarRenderer8.getItemLabelAnchorOffset();
        java.awt.Paint paint17 = statisticalBarRenderer8.getErrorIndicatorPaint();
        statisticalBarRenderer0.setBasePaint(paint17, true);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2.0d + "'", double16 == 2.0d);
        org.junit.Assert.assertNotNull(paint17);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        int int6 = statisticalBarRenderer0.getColumnCount();
        boolean boolean8 = statisticalBarRenderer0.isSeriesVisibleInLegend(0);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getBase();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator5 = statisticalBarRenderer0.getSeriesItemLabelGenerator(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        statisticalBarRenderer6.setMaximumBarWidth((double) (short) 100);
        statisticalBarRenderer6.setDrawBarOutline(false);
        statisticalBarRenderer6.setMaximumBarWidth((double) 1L);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = null;
        statisticalBarRenderer17.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition19, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator22 = statisticalBarRenderer17.getLegendItemToolTipGenerator();
        double double23 = statisticalBarRenderer17.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer24 = null;
        statisticalBarRenderer17.setGradientPaintTransformer(gradientPaintTransformer24);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer27 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer27.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer27.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean31 = statisticalBarRenderer27.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition32 = statisticalBarRenderer27.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer27.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer27.getSeriesPositiveItemLabelPosition(10);
        statisticalBarRenderer17.setSeriesNegativeItemLabelPosition(0, itemLabelPosition35);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = null;
        statisticalBarRenderer37.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition39, false);
        java.awt.Paint paint42 = statisticalBarRenderer37.getBaseItemLabelPaint();
        statisticalBarRenderer17.setBaseFillPaint(paint42);
        statisticalBarRenderer6.setSeriesItemLabelPaint(10, paint42, false);
        statisticalBarRenderer0.setBaseFillPaint(paint42);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNull(categoryItemLabelGenerator5);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
        org.junit.Assert.assertNull(itemLabelPosition28);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(itemLabelPosition32);
        org.junit.Assert.assertNull(itemLabelPosition33);
        org.junit.Assert.assertNotNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint42);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        statisticalBarRenderer6.setSeriesPaint((int) 'a', paint16, false);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint16);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer21 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer21);
        statisticalBarRenderer0.setMinimumBarLength((double) 10.0f);
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker28 = null;
        java.awt.geom.Rectangle2D rectangle2D29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D25, categoryPlot26, categoryAxis27, categoryMarker28, rectangle2D29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Shape shape12 = statisticalBarRenderer0.getBaseShape();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(shape12);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        statisticalBarRenderer6.setSeriesPaint((int) 'a', paint16, false);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint16);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer21 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer21);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false, true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(paint16);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator10 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator10, false);
        org.jfree.chart.LegendItemCollection legendItemCollection13 = statisticalBarRenderer0.getLegendItems();
        java.lang.Class<?> wildcardClass14 = legendItemCollection13.getClass();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(legendItemCollection13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.awt.Graphics2D graphics2D5 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState6 = null;
        java.awt.geom.Rectangle2D rectangle2D7 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis9 = null;
        org.jfree.chart.axis.ValueAxis valueAxis10 = null;
        org.jfree.data.category.CategoryDataset categoryDataset11 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D5, categoryItemRendererState6, rectangle2D7, categoryPlot8, categoryAxis9, valueAxis10, categoryDataset11, (int) (byte) 0, (int) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint14 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        double double20 = statisticalBarRenderer17.getItemLabelAnchorOffset();
        statisticalBarRenderer17.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint24 = statisticalBarRenderer17.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer0.setBaseFillPaint(paint24);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2.0d + "'", double20 == 2.0d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(itemLabelPosition26);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer9.setSeriesStroke((int) (short) 100, stroke16);
        statisticalBarRenderer0.setBaseOutlineStroke(stroke16, false);
        java.awt.Paint paint21 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (byte) 100);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(paint21);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 0, (java.lang.Boolean) true);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesOutlineStroke((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (byte) 0);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(itemLabelPosition15);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) 'a');
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer11.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = statisticalBarRenderer11.getPlot();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer11.setBaseItemLabelPaint(paint20);
        boolean boolean22 = statisticalBarRenderer11.getAutoPopulateSeriesOutlineStroke();
        statisticalBarRenderer11.setBaseSeriesVisible(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer11.getPositiveItemLabelPosition((int) 'a', (int) (byte) 10);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27, false);
        java.awt.Paint paint30 = statisticalBarRenderer0.getBaseFillPaint();
        double double31 = statisticalBarRenderer0.getMinimumBarLength();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categoryPlot19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator58 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator58);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((int) (byte) -1, (java.lang.Boolean) false, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        boolean boolean9 = statisticalBarRenderer0.getItemCreateEntity((int) '4', (int) 'a');
        boolean boolean11 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (byte) 10);
        boolean boolean12 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer5.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition7, false);
        java.awt.Shape shape11 = statisticalBarRenderer5.getSeriesShape((int) (short) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = null;
        statisticalBarRenderer13.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition15, false);
        java.awt.Paint paint19 = statisticalBarRenderer13.lookupSeriesFillPaint(0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer13.getSeriesPositiveItemLabelPosition((int) (byte) -1);
        statisticalBarRenderer5.setSeriesNegativeItemLabelPosition((int) (byte) 1, itemLabelPosition21, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) -1, itemLabelPosition21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(shape11);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        int int9 = statisticalBarRenderer0.getColumnCount();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        java.awt.Shape shape5 = statisticalBarRenderer0.lookupSeriesShape(0);
        statisticalBarRenderer0.setDrawBarOutline(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.LegendItem legendItem11 = statisticalBarRenderer0.getLegendItem((-1), (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) -1, (java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertNotNull(shape5);
        org.junit.Assert.assertNull(itemLabelPosition8);
        org.junit.Assert.assertNull(legendItem11);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean11 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = null;
        statisticalBarRenderer14.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition16, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator19 = statisticalBarRenderer14.getLegendItemToolTipGenerator();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer14.setErrorIndicatorPaint(paint20);
        statisticalBarRenderer0.setErrorIndicatorPaint(paint20);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer24.getLegendItemToolTipGenerator();
        double double30 = statisticalBarRenderer24.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator31 = null;
        statisticalBarRenderer24.setBaseToolTipGenerator(categoryToolTipGenerator31);
        java.awt.Stroke stroke34 = statisticalBarRenderer24.lookupSeriesOutlineStroke((int) 'a');
        statisticalBarRenderer0.setSeriesStroke((int) (short) 10, stroke34, true);
        boolean boolean37 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        java.util.EventListener eventListener43 = null;
        boolean boolean44 = statisticalBarRenderer38.hasListener(eventListener43);
        java.awt.Paint paint46 = statisticalBarRenderer38.getSeriesOutlinePaint((int) '#');
        java.awt.Stroke stroke48 = statisticalBarRenderer38.lookupSeriesOutlineStroke((int) '4');
        statisticalBarRenderer0.setBaseOutlineStroke(stroke48, true);
        java.awt.Paint paint52 = statisticalBarRenderer0.getSeriesOutlinePaint((int) '4');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.2d + "'", double30 == 0.2d);
        org.junit.Assert.assertNotNull(stroke34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(paint46);
        org.junit.Assert.assertNotNull(stroke48);
        org.junit.Assert.assertNull(paint52);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        boolean boolean15 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer16.setBaseOutlinePaint(paint17);
        boolean boolean19 = statisticalBarRenderer16.isDrawBarOutline();
        boolean boolean20 = statisticalBarRenderer16.getBaseItemLabelsVisible();
        int int21 = statisticalBarRenderer16.getColumnCount();
        double double22 = statisticalBarRenderer16.getItemMargin();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer23.setBaseOutlinePaint(paint24);
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer23.setSeriesPaint(0, paint27);
        java.lang.Object obj29 = null;
        boolean boolean30 = statisticalBarRenderer23.equals(obj29);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer32 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition34 = null;
        statisticalBarRenderer32.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition34, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator37 = statisticalBarRenderer32.getLegendItemToolTipGenerator();
        java.awt.Paint paint38 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer32.setErrorIndicatorPaint(paint38);
        statisticalBarRenderer23.setSeriesPaint(10, paint38);
        statisticalBarRenderer23.setBaseSeriesVisible(true);
        statisticalBarRenderer23.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer45.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot49 = statisticalBarRenderer45.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition51 = statisticalBarRenderer45.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer23.setBaseNegativeItemLabelPosition(itemLabelPosition51, true);
        statisticalBarRenderer16.setBasePositiveItemLabelPosition(itemLabelPosition51);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition51, true);
        java.awt.Paint paint59 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 1);
        boolean boolean60 = statisticalBarRenderer0.getAutoPopulateSeriesPaint();
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 1);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.2d + "'", double22 == 0.2d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator37);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(categoryPlot49);
        org.junit.Assert.assertNotNull(itemLabelPosition51);
        org.junit.Assert.assertNotNull(paint59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        boolean boolean7 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer8.setBaseOutlinePaint(paint9);
        boolean boolean11 = statisticalBarRenderer8.isDrawBarOutline();
        boolean boolean12 = statisticalBarRenderer8.getBaseItemLabelsVisible();
        int int13 = statisticalBarRenderer8.getColumnCount();
        double double14 = statisticalBarRenderer8.getItemMargin();
        java.awt.Shape shape17 = statisticalBarRenderer8.getItemShape(1, (int) (byte) 10);
        boolean boolean18 = statisticalBarRenderer0.equals((java.lang.Object) shape17);
        statisticalBarRenderer0.setSeriesVisible((int) (short) 0, (java.lang.Boolean) true);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.2d + "'", double14 == 0.2d);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        java.awt.Font font12 = statisticalBarRenderer0.getBaseItemLabelFont();
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        java.awt.Stroke stroke21 = statisticalBarRenderer17.getSeriesOutlineStroke((int) (short) 1);
        java.awt.Shape shape23 = statisticalBarRenderer17.lookupSeriesShape((int) '#');
        java.awt.Paint paint24 = statisticalBarRenderer17.getBaseItemLabelPaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) 'a', paint24, false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertNotNull(font12);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke21);
        org.junit.Assert.assertNotNull(shape23);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        boolean boolean17 = statisticalBarRenderer0.getBaseCreateEntities();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator19 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (byte) 0);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(categoryItemLabelGenerator19);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        boolean boolean13 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        boolean boolean20 = statisticalBarRenderer17.isDrawBarOutline();
        statisticalBarRenderer17.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator24 = statisticalBarRenderer17.getSeriesToolTipGenerator((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer17.getNegativeItemLabelPosition(100, (int) (short) -1);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Graphics2D graphics2D31 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis33 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker34 = null;
        java.awt.geom.Rectangle2D rectangle2D35 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D31, categoryPlot32, categoryAxis33, categoryMarker34, rectangle2D35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator24);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        statisticalBarRenderer0.setDrawBarOutline(true);
        boolean boolean34 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) -1, categoryToolTipGenerator36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape9 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 10);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) -1);
        java.awt.Paint paint13 = statisticalBarRenderer0.getSeriesPaint((int) 'a');
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setPlot(categoryPlot14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNotNull(itemLabelPosition11);
        org.junit.Assert.assertNull(paint13);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer5.setBaseOutlinePaint(paint6);
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer5.setSeriesPaint(0, paint9);
        java.lang.Object obj11 = null;
        boolean boolean12 = statisticalBarRenderer5.equals(obj11);
        java.awt.Shape shape15 = statisticalBarRenderer5.getItemShape((int) (byte) 1, (int) (short) -1);
        statisticalBarRenderer0.setBaseShape(shape15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer18.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        java.awt.Stroke stroke31 = statisticalBarRenderer24.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot32 = statisticalBarRenderer24.getPlot();
        java.awt.Paint paint33 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer24.setBaseItemLabelPaint(paint33);
        statisticalBarRenderer18.setBaseOutlinePaint(paint33, true);
        statisticalBarRenderer0.setSeriesPaint(100, paint33);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(categoryPlot32);
        org.junit.Assert.assertNotNull(paint33);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        statisticalBarRenderer6.setSeriesPaint((int) 'a', paint16, false);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint16);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer22.setSeriesOutlinePaint(10, paint28, true);
        java.awt.Shape shape32 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer22.setSeriesShape((int) (byte) 1, shape32, true);
        statisticalBarRenderer0.setSeriesShape((int) (byte) 1, shape32);
        java.awt.Graphics2D graphics2D36 = null;
        java.awt.geom.Rectangle2D rectangle2D37 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = null;
        org.jfree.chart.plot.PlotRenderingInfo plotRenderingInfo40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState41 = statisticalBarRenderer0.initialise(graphics2D36, rectangle2D37, categoryPlot38, (int) (byte) 10, plotRenderingInfo40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'plot' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(shape32);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator24 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator24);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        java.awt.Graphics2D graphics2D28 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot29 = null;
        java.awt.geom.Rectangle2D rectangle2D30 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D28, categoryPlot29, rectangle2D30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNull(categoryPlot23);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator(10);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.getItemStroke((int) 'a', (int) ' ');
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        boolean boolean17 = statisticalBarRenderer13.getBaseItemLabelsVisible();
        int int18 = statisticalBarRenderer13.getColumnCount();
        double double19 = statisticalBarRenderer13.getItemMargin();
        boolean boolean20 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.LegendItem legendItem23 = statisticalBarRenderer13.getLegendItem((-1), (-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer24.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot28 = statisticalBarRenderer24.getPlot();
        java.awt.Paint paint30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer24.setSeriesOutlinePaint(10, paint30, true);
        java.awt.Shape shape34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer24.setSeriesShape((int) (byte) 1, shape34, true);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator38 = statisticalBarRenderer24.getSeriesURLGenerator((int) 'a');
        statisticalBarRenderer24.setSeriesCreateEntities(10, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer42 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition44 = null;
        statisticalBarRenderer42.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition44, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator47 = statisticalBarRenderer42.getLegendItemToolTipGenerator();
        java.awt.Paint paint48 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer42.setErrorIndicatorPaint(paint48);
        statisticalBarRenderer24.setBaseItemLabelPaint(paint48);
        statisticalBarRenderer13.setBaseItemLabelPaint(paint48, false);
        statisticalBarRenderer0.setBaseOutlinePaint(paint48, false);
        boolean boolean55 = statisticalBarRenderer0.getIncludeBaseInRange();
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.2d + "'", double19 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(legendItem23);
        org.junit.Assert.assertNull(categoryPlot28);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNotNull(shape34);
        org.junit.Assert.assertNull(categoryURLGenerator38);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator47);
        org.junit.Assert.assertNotNull(paint48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        org.jfree.chart.plot.CategoryPlot categoryPlot6 = statisticalBarRenderer0.getPlot();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(categoryPlot6);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        statisticalBarRenderer7.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition9, false);
        java.awt.Stroke stroke14 = statisticalBarRenderer7.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke16 = statisticalBarRenderer7.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Stroke stroke18 = statisticalBarRenderer7.getSeriesOutlineStroke((int) (byte) 0);
        java.awt.Font font19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT;
        statisticalBarRenderer7.setBaseItemLabelFont(font19, false);
        statisticalBarRenderer0.setBaseItemLabelFont(font19);
        java.awt.Stroke stroke24 = statisticalBarRenderer0.getSeriesStroke((int) ' ');
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke14);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNull(stroke18);
        org.junit.Assert.assertNotNull(font19);
        org.junit.Assert.assertNull(stroke24);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        double double6 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer7 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer7);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer9.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        java.awt.Stroke stroke27 = statisticalBarRenderer20.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer20.setSeriesShape((int) (short) 1, shape29);
        java.lang.Boolean boolean32 = statisticalBarRenderer20.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setBaseOutlinePaint(paint34);
        boolean boolean36 = statisticalBarRenderer33.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer37 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition38 = statisticalBarRenderer37.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer37.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer33.setBasePositiveItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer20.setBaseNegativeItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer9.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition40);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition40);
        statisticalBarRenderer0.setSeriesVisible(1, (java.lang.Boolean) false, false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(stroke27);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(itemLabelPosition38);
        org.junit.Assert.assertNotNull(itemLabelPosition40);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator7 = statisticalBarRenderer0.getItemLabelGenerator((int) (byte) 10, (int) '4');
        java.awt.Paint paint9 = statisticalBarRenderer0.getSeriesFillPaint((int) (short) 1);
        java.awt.Paint paint11 = statisticalBarRenderer0.lookupSeriesFillPaint((int) 'a');
        java.awt.Shape shape13 = statisticalBarRenderer0.getSeriesShape((int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer14 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer14.setBaseOutlinePaint(paint15);
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer14.setSeriesPaint(0, paint18);
        java.lang.Object obj20 = null;
        boolean boolean21 = statisticalBarRenderer14.equals(obj20);
        java.awt.Paint paint23 = statisticalBarRenderer14.lookupSeriesPaint(0);
        java.lang.Boolean boolean25 = statisticalBarRenderer14.getSeriesVisible(0);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator28 = statisticalBarRenderer14.getURLGenerator((int) (short) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        java.awt.Stroke stroke36 = statisticalBarRenderer29.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint39 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer38.setBaseOutlinePaint(paint39);
        statisticalBarRenderer29.setSeriesPaint((int) 'a', paint39, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot43 = statisticalBarRenderer29.getPlot();
        statisticalBarRenderer29.setAutoPopulateSeriesOutlineStroke(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer47.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot51 = statisticalBarRenderer47.getPlot();
        java.awt.Stroke stroke54 = statisticalBarRenderer47.getItemOutlineStroke(1, 100);
        double double55 = statisticalBarRenderer47.getMinimumBarLength();
        statisticalBarRenderer47.setMaximumBarWidth(10.0d);
        statisticalBarRenderer47.setBaseCreateEntities(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer61 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition62 = statisticalBarRenderer61.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer61.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape68 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer61.setSeriesShape((int) ' ', shape68, false);
        statisticalBarRenderer61.setMaximumBarWidth((double) 10.0f);
        java.awt.Font font73 = statisticalBarRenderer61.getBaseItemLabelFont();
        statisticalBarRenderer47.setBaseItemLabelFont(font73, true);
        statisticalBarRenderer29.setSeriesItemLabelFont((int) (byte) 10, font73, true);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition78 = statisticalBarRenderer29.getBasePositiveItemLabelPosition();
        statisticalBarRenderer14.setBaseNegativeItemLabelPosition(itemLabelPosition78, false);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition78);
        org.junit.Assert.assertNull(categoryItemLabelGenerator7);
        org.junit.Assert.assertNull(paint9);
        org.junit.Assert.assertNotNull(paint11);
        org.junit.Assert.assertNull(shape13);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(categoryURLGenerator28);
        org.junit.Assert.assertNotNull(stroke36);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertNull(categoryPlot43);
        org.junit.Assert.assertNull(categoryPlot51);
        org.junit.Assert.assertNotNull(stroke54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNull(itemLabelPosition62);
        org.junit.Assert.assertNotNull(shape68);
        org.junit.Assert.assertNotNull(font73);
        org.junit.Assert.assertNotNull(itemLabelPosition78);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint17 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        statisticalBarRenderer18.setDrawBarOutline(false);
        java.awt.Stroke stroke25 = null;
        statisticalBarRenderer18.setSeriesOutlineStroke((int) (short) 0, stroke25, true);
        java.awt.Paint paint30 = statisticalBarRenderer18.getItemPaint(10, (-1));
        statisticalBarRenderer0.setErrorIndicatorPaint(paint30);
        java.awt.Paint paint33 = statisticalBarRenderer0.getSeriesFillPaint((int) 'a');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator39 = statisticalBarRenderer34.getLegendItemToolTipGenerator();
        java.awt.Paint paint40 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer34.setErrorIndicatorPaint(paint40);
        java.awt.Stroke stroke42 = statisticalBarRenderer34.getBaseOutlineStroke();
        statisticalBarRenderer34.setBaseSeriesVisibleInLegend(false, true);
        statisticalBarRenderer34.setSeriesCreateEntities(0, (java.lang.Boolean) false);
        boolean boolean49 = statisticalBarRenderer0.equals((java.lang.Object) statisticalBarRenderer34);
        statisticalBarRenderer34.setMaximumBarWidth((double) 100L);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(paint30);
        org.junit.Assert.assertNull(paint33);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator39);
        org.junit.Assert.assertNotNull(paint40);
        org.junit.Assert.assertNotNull(stroke42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        statisticalBarRenderer6.setSeriesPaint((int) 'a', paint16, false);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint16);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer21 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer21);
        double double23 = statisticalBarRenderer0.getItemMargin();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelGenerator((int) (short) -1, categoryItemLabelGenerator25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.2d + "'", double23 == 0.2d);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke6 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) 1);
        double double7 = statisticalBarRenderer0.getUpperClip();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer8.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = statisticalBarRenderer8.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer8.getSeriesNegativeItemLabelPosition(100);
        java.awt.Shape shape17 = statisticalBarRenderer8.getItemShape((int) (byte) 1, 10);
        statisticalBarRenderer0.setBaseShape(shape17);
        java.lang.Class<?> wildcardClass19 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNull(stroke6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(categoryPlot12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.awt.Stroke stroke17 = statisticalBarRenderer10.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer10.setSeriesShape((int) (short) 1, shape19);
        java.lang.Boolean boolean22 = statisticalBarRenderer10.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = null;
        statisticalBarRenderer24.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition26, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator29 = statisticalBarRenderer24.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer24.setSeriesStroke((int) (short) 100, stroke31);
        statisticalBarRenderer10.setSeriesOutlineStroke((int) (byte) 10, stroke31);
        statisticalBarRenderer0.setBaseStroke(stroke31);
        statisticalBarRenderer0.setBaseCreateEntities(true);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier37 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(stroke17);
        org.junit.Assert.assertNotNull(shape19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator29);
        org.junit.Assert.assertNotNull(stroke31);
        org.junit.Assert.assertNull(drawingSupplier37);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Stroke stroke11 = statisticalBarRenderer0.lookupSeriesOutlineStroke(0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator12);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = null;
        statisticalBarRenderer15.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition17, false);
        java.awt.Stroke stroke22 = statisticalBarRenderer15.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Stroke stroke24 = statisticalBarRenderer15.lookupSeriesOutlineStroke((int) (byte) -1);
        java.awt.Font font27 = statisticalBarRenderer15.getItemLabelFont((int) (short) 0, 10);
        statisticalBarRenderer0.setSeriesItemLabelFont((int) (short) 1, font27, false);
        java.awt.Font font31 = statisticalBarRenderer0.getSeriesItemLabelFont((-1));
        boolean boolean34 = statisticalBarRenderer0.getItemVisible((int) (short) 10, (int) (short) 1);
        org.jfree.chart.LegendItemCollection legendItemCollection35 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(stroke24);
        org.junit.Assert.assertNotNull(font27);
        org.junit.Assert.assertNull(font31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(legendItemCollection35);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint7 = statisticalBarRenderer0.lookupSeriesOutlinePaint(0);
        boolean boolean8 = statisticalBarRenderer0.getIncludeBaseInRange();
        statisticalBarRenderer0.setAutoPopulateSeriesPaint(false);
        boolean boolean13 = statisticalBarRenderer0.isItemLabelVisible((-1), 0);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        statisticalBarRenderer0.setSeriesCreateEntities(0, (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition17 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (short) 100, 100);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelsVisible((int) (byte) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertNotNull(itemLabelPosition17);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        boolean boolean5 = statisticalBarRenderer0.getBaseCreateEntities();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getBasePositiveItemLabelPosition();
        java.awt.Graphics2D graphics2D9 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = null;
        org.jfree.chart.axis.ValueAxis valueAxis11 = null;
        java.awt.geom.Rectangle2D rectangle2D12 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D9, categoryPlot10, valueAxis11, rectangle2D12, (double) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        java.awt.Stroke stroke8 = statisticalBarRenderer0.getBaseOutlineStroke();
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false, true);
        boolean boolean13 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) '#');
        java.awt.Shape shape14 = statisticalBarRenderer0.getBaseShape();
        statisticalBarRenderer0.setSeriesVisible((int) '#', (java.lang.Boolean) true, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getSeriesToolTipGenerator(10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint8 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer7.setBaseOutlinePaint(paint8);
        boolean boolean10 = statisticalBarRenderer7.isDrawBarOutline();
        boolean boolean11 = statisticalBarRenderer7.getBaseItemLabelsVisible();
        int int12 = statisticalBarRenderer7.getColumnCount();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = null;
        statisticalBarRenderer7.setBaseToolTipGenerator(categoryToolTipGenerator13, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer16 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer16.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot20 = statisticalBarRenderer16.getPlot();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer16.setSeriesOutlinePaint(10, paint22, true);
        java.awt.Shape shape26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer16.setSeriesShape((int) (byte) 1, shape26, true);
        statisticalBarRenderer7.setBaseShape(shape26, false);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesShape((int) (short) -1, shape26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(categoryPlot20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertNotNull(shape26);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator6 = statisticalBarRenderer0.getSeriesURLGenerator((int) (short) 0);
        statisticalBarRenderer0.removeAnnotations();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        boolean boolean12 = statisticalBarRenderer9.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition15 = null;
        statisticalBarRenderer13.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition15, false);
        java.util.EventListener eventListener18 = null;
        boolean boolean19 = statisticalBarRenderer13.hasListener(eventListener18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = null;
        statisticalBarRenderer13.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator21);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator24 = statisticalBarRenderer13.getSeriesItemLabelGenerator(0);
        java.awt.Font font25 = statisticalBarRenderer13.getBaseItemLabelFont();
        statisticalBarRenderer9.setBaseItemLabelFont(font25);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator28 = null;
        statisticalBarRenderer9.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator28);
        java.awt.Shape shape31 = statisticalBarRenderer9.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape32 = statisticalBarRenderer9.getBaseShape();
        java.awt.Paint paint33 = statisticalBarRenderer9.getBaseItemLabelPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer34.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot38 = statisticalBarRenderer34.getPlot();
        java.awt.Stroke stroke41 = statisticalBarRenderer34.getItemOutlineStroke(1, 100);
        double double42 = statisticalBarRenderer34.getMinimumBarLength();
        statisticalBarRenderer34.setMaximumBarWidth(10.0d);
        statisticalBarRenderer34.setBaseCreateEntities(true, false);
        java.awt.Font font49 = statisticalBarRenderer34.getSeriesItemLabelFont((int) (short) 10);
        statisticalBarRenderer34.setSeriesVisible(10, (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer34.getSeriesPositiveItemLabelPosition((int) (short) 100);
        statisticalBarRenderer9.setBasePositiveItemLabelPosition(itemLabelPosition54);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer56 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition58 = null;
        statisticalBarRenderer56.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition58, false);
        java.awt.Paint paint61 = statisticalBarRenderer56.getBaseItemLabelPaint();
        statisticalBarRenderer56.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator65 = statisticalBarRenderer56.getLegendItemURLGenerator();
        java.awt.Stroke stroke67 = statisticalBarRenderer56.lookupSeriesOutlineStroke(0);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator68 = null;
        statisticalBarRenderer56.setBaseItemLabelGenerator(categoryItemLabelGenerator68);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer71 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition73 = null;
        statisticalBarRenderer71.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition73, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator76 = statisticalBarRenderer71.getLegendItemToolTipGenerator();
        java.awt.Paint paint77 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer71.setErrorIndicatorPaint(paint77);
        java.awt.Stroke stroke79 = statisticalBarRenderer71.getBaseOutlineStroke();
        statisticalBarRenderer56.setSeriesOutlineStroke((int) (short) 0, stroke79, false);
        statisticalBarRenderer9.setBaseStroke(stroke79, true);
        statisticalBarRenderer0.setSeriesStroke((int) (byte) 100, stroke79);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator85 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(categoryURLGenerator6);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator24);
        org.junit.Assert.assertNotNull(font25);
        org.junit.Assert.assertNotNull(shape31);
        org.junit.Assert.assertNotNull(shape32);
        org.junit.Assert.assertNotNull(paint33);
        org.junit.Assert.assertNull(categoryPlot38);
        org.junit.Assert.assertNotNull(stroke41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(font49);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator65);
        org.junit.Assert.assertNotNull(stroke67);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator76);
        org.junit.Assert.assertNotNull(paint77);
        org.junit.Assert.assertNotNull(stroke79);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator85);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint5 = statisticalBarRenderer0.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseCreateEntities(false, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisibleInLegend((int) (short) 1);
        java.awt.Stroke stroke13 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer14 = statisticalBarRenderer0.getGradientPaintTransformer();
        java.awt.Stroke stroke16 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) 'a');
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation17 = null;
        org.jfree.chart.util.Layer layer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.addAnnotation(categoryAnnotation17, layer18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'annotation' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint5);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(gradientPaintTransformer14);
        org.junit.Assert.assertNotNull(stroke16);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        boolean boolean18 = statisticalBarRenderer15.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = null;
        statisticalBarRenderer19.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition21, false);
        java.util.EventListener eventListener24 = null;
        boolean boolean25 = statisticalBarRenderer19.hasListener(eventListener24);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator27 = null;
        statisticalBarRenderer19.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator27);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator30 = statisticalBarRenderer19.getSeriesItemLabelGenerator(0);
        java.awt.Font font31 = statisticalBarRenderer19.getBaseItemLabelFont();
        statisticalBarRenderer15.setBaseItemLabelFont(font31);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator34 = null;
        statisticalBarRenderer15.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator34);
        java.awt.Shape shape37 = statisticalBarRenderer15.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape38 = statisticalBarRenderer15.getBaseShape();
        java.awt.Paint paint39 = statisticalBarRenderer15.getBaseItemLabelPaint();
        statisticalBarRenderer0.setBaseFillPaint(paint39);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation43 = null;
        boolean boolean44 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation43);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator30);
        org.junit.Assert.assertNotNull(font31);
        org.junit.Assert.assertNotNull(shape37);
        org.junit.Assert.assertNotNull(shape38);
        org.junit.Assert.assertNotNull(paint39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        double double8 = statisticalBarRenderer0.getMinimumBarLength();
        statisticalBarRenderer0.setMaximumBarWidth(10.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        java.awt.Shape shape21 = statisticalBarRenderer11.getItemShape((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint23 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer22.setBaseOutlinePaint(paint23);
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer22.setSeriesPaint(0, paint26);
        java.lang.Object obj28 = null;
        boolean boolean29 = statisticalBarRenderer22.equals(obj28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer31 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = null;
        statisticalBarRenderer31.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition33, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator36 = statisticalBarRenderer31.getLegendItemToolTipGenerator();
        java.awt.Paint paint37 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer31.setErrorIndicatorPaint(paint37);
        statisticalBarRenderer22.setSeriesPaint(10, paint37);
        statisticalBarRenderer22.setBaseSeriesVisible(true);
        statisticalBarRenderer22.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer44 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer44.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot48 = statisticalBarRenderer44.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition50 = statisticalBarRenderer44.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer22.setBaseNegativeItemLabelPosition(itemLabelPosition50, true);
        statisticalBarRenderer11.setNegativeItemLabelPositionFallback(itemLabelPosition50);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition50);
        statisticalBarRenderer0.setItemMargin((double) (short) 100);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shape21);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator36);
        org.junit.Assert.assertNotNull(paint37);
        org.junit.Assert.assertNull(categoryPlot48);
        org.junit.Assert.assertNotNull(itemLabelPosition50);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.plot.DrawingSupplier drawingSupplier6 = statisticalBarRenderer0.getDrawingSupplier();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesCreateEntities((int) (byte) -1);
        java.util.EventListener eventListener13 = null;
        boolean boolean14 = statisticalBarRenderer0.hasListener(eventListener13);
        org.junit.Assert.assertNotNull(itemLabelPosition5);
        org.junit.Assert.assertNull(drawingSupplier6);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint6);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10.0f);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer11.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer11.setSeriesShape((int) (short) 1, shape20);
        java.lang.Boolean boolean23 = statisticalBarRenderer11.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer24 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer24.setBaseOutlinePaint(paint25);
        boolean boolean27 = statisticalBarRenderer24.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer28.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer24.setBasePositiveItemLabelPosition(itemLabelPosition31);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition31);
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 10, itemLabelPosition31);
        boolean boolean36 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 10);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNotNull(shape20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(itemLabelPosition31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        java.awt.Paint paint8 = null;
        statisticalBarRenderer0.setSeriesPaint((int) '#', paint8, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.util.EventListener eventListener14 = null;
        boolean boolean15 = statisticalBarRenderer11.hasListener(eventListener14);
        boolean boolean16 = statisticalBarRenderer11.getAutoPopulateSeriesStroke();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer17.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer17.setSeriesShape((int) ' ', shape24, false);
        statisticalBarRenderer17.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer17.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke33 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (byte) 0);
        statisticalBarRenderer11.setBaseStroke(stroke33);
        statisticalBarRenderer0.setBaseStroke(stroke33);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener36 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNotNull(stroke33);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape9 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint14 = statisticalBarRenderer11.lookupSeriesPaint((int) (short) 0);
        statisticalBarRenderer0.setSeriesItemLabelPaint(0, paint14);
        java.awt.Graphics2D graphics2D16 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot17 = null;
        org.jfree.chart.axis.ValueAxis valueAxis18 = null;
        org.jfree.chart.plot.Marker marker19 = null;
        java.awt.geom.Rectangle2D rectangle2D20 = null;
        statisticalBarRenderer0.drawRangeMarker(graphics2D16, categoryPlot17, valueAxis18, marker19, rectangle2D20);
        org.jfree.chart.LegendItemCollection legendItemCollection22 = statisticalBarRenderer0.getLegendItems();
        java.awt.Paint paint24 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) 'a');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(legendItemCollection22);
        org.junit.Assert.assertNull(paint24);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        boolean boolean4 = statisticalBarRenderer0.getItemVisible((int) (byte) 100, (int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer5 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = null;
        statisticalBarRenderer5.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition7, false);
        java.awt.Stroke stroke12 = statisticalBarRenderer5.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer5.setSeriesShape((int) (short) 1, shape14);
        java.lang.Boolean boolean17 = statisticalBarRenderer5.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = statisticalBarRenderer22.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = statisticalBarRenderer22.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer18.setBasePositiveItemLabelPosition(itemLabelPosition25);
        statisticalBarRenderer5.setBaseNegativeItemLabelPosition(itemLabelPosition25);
        java.awt.Paint paint30 = statisticalBarRenderer5.getItemPaint(10, (int) (short) -1);
        statisticalBarRenderer0.setBasePaint(paint30);
        java.awt.Graphics2D graphics2D32 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot33 = null;
        org.jfree.chart.axis.ValueAxis valueAxis34 = null;
        java.awt.geom.Rectangle2D rectangle2D35 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawRangeGridline(graphics2D32, categoryPlot33, valueAxis34, rectangle2D35, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(stroke12);
        org.junit.Assert.assertNotNull(shape14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(itemLabelPosition23);
        org.junit.Assert.assertNotNull(itemLabelPosition25);
        org.junit.Assert.assertNotNull(paint30);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.LegendItem legendItem17 = statisticalBarRenderer0.getLegendItem((int) (short) -1, (int) (byte) 10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = null;
        statisticalBarRenderer18.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition20, false);
        java.awt.Stroke stroke25 = statisticalBarRenderer18.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint27 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer18.setBaseItemLabelPaint(paint27);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = statisticalBarRenderer18.getSeriesNegativeItemLabelPosition((int) (short) -1);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition30);
        statisticalBarRenderer0.setDrawBarOutline(true);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener34 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(legendItem17);
        org.junit.Assert.assertNotNull(stroke25);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint27);
        org.junit.Assert.assertNotNull(itemLabelPosition30);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.util.EventListener eventListener5 = null;
        boolean boolean6 = statisticalBarRenderer0.hasListener(eventListener5);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator8 = null;
        statisticalBarRenderer0.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator8);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator11 = statisticalBarRenderer0.getSeriesItemLabelGenerator(0);
        boolean boolean12 = statisticalBarRenderer0.getAutoPopulateSeriesOutlinePaint();
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesCreateEntities((-1), (java.lang.Boolean) false, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint6 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setSeriesOutlinePaint(10, paint6, true);
        java.awt.Shape shape10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (byte) 1, shape10, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        statisticalBarRenderer13.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer13.getSeriesToolTipGenerator((-1));
        double double21 = statisticalBarRenderer13.getMinimumBarLength();
        java.awt.Paint paint24 = statisticalBarRenderer13.getItemOutlinePaint((int) 'a', 10);
        statisticalBarRenderer0.setBaseOutlinePaint(paint24, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition30 = null;
        statisticalBarRenderer28.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition30, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator33 = statisticalBarRenderer28.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer28.setSeriesStroke((int) (short) 100, stroke35);
        statisticalBarRenderer28.setBaseItemLabelsVisible(false);
        boolean boolean41 = statisticalBarRenderer28.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer28.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint46 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer45.setBaseOutlinePaint(paint46);
        boolean boolean48 = statisticalBarRenderer45.isDrawBarOutline();
        statisticalBarRenderer45.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator52 = statisticalBarRenderer45.getSeriesToolTipGenerator((-1));
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition55 = statisticalBarRenderer45.getNegativeItemLabelPosition(100, (int) (short) -1);
        statisticalBarRenderer28.setBasePositiveItemLabelPosition(itemLabelPosition55);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer57 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint58 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer57.setBaseOutlinePaint(paint58);
        java.awt.Paint paint61 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer57.setSeriesPaint(0, paint61);
        java.lang.Object obj63 = null;
        boolean boolean64 = statisticalBarRenderer57.equals(obj63);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer66 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition68 = null;
        statisticalBarRenderer66.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition68, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator71 = statisticalBarRenderer66.getLegendItemToolTipGenerator();
        java.awt.Paint paint72 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer66.setErrorIndicatorPaint(paint72);
        statisticalBarRenderer57.setSeriesPaint(10, paint72);
        statisticalBarRenderer28.setBasePaint(paint72, true);
        java.awt.Paint paint77 = statisticalBarRenderer28.getBaseOutlinePaint();
        statisticalBarRenderer0.setSeriesFillPaint(10, paint77, false);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator81 = null;
        statisticalBarRenderer0.setSeriesURLGenerator((int) (short) 10, categoryURLGenerator81);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator33);
        org.junit.Assert.assertNotNull(stroke35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(paint46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator52);
        org.junit.Assert.assertNotNull(itemLabelPosition55);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator71);
        org.junit.Assert.assertNotNull(paint72);
        org.junit.Assert.assertNotNull(paint77);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer0.getLegendItemURLGenerator();
        boolean boolean21 = statisticalBarRenderer0.isItemLabelVisible((int) '4', 0);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener22 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Shape shape7 = statisticalBarRenderer0.getItemShape((int) (short) -1, (int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, (java.lang.Boolean) false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer11.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer11.setSeriesShape((int) ' ', shape18, false);
        statisticalBarRenderer11.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint25 = statisticalBarRenderer11.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer11.getSeriesNegativeItemLabelPosition((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint29 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer28.setBaseOutlinePaint(paint29);
        double double31 = statisticalBarRenderer28.getItemLabelAnchorOffset();
        statisticalBarRenderer28.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint35 = statisticalBarRenderer28.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer11.setBaseFillPaint(paint35);
        statisticalBarRenderer0.setBaseFillPaint(paint35, false);
        statisticalBarRenderer0.removeAnnotations();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(paint29);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2.0d + "'", double31 == 2.0d);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator4 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator4);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        java.awt.Font font22 = statisticalBarRenderer10.getBaseItemLabelFont();
        statisticalBarRenderer6.setBaseItemLabelFont(font22);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator25 = null;
        statisticalBarRenderer6.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator25);
        java.awt.Shape shape28 = statisticalBarRenderer6.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape29 = statisticalBarRenderer6.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint31 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer30.setBaseOutlinePaint(paint31);
        boolean boolean33 = statisticalBarRenderer30.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition36 = null;
        statisticalBarRenderer34.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition36, false);
        java.util.EventListener eventListener39 = null;
        boolean boolean40 = statisticalBarRenderer34.hasListener(eventListener39);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator42 = null;
        statisticalBarRenderer34.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator42);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator45 = statisticalBarRenderer34.getSeriesItemLabelGenerator(0);
        java.awt.Font font46 = statisticalBarRenderer34.getBaseItemLabelFont();
        statisticalBarRenderer30.setBaseItemLabelFont(font46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = null;
        statisticalBarRenderer30.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer51 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition52 = statisticalBarRenderer51.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = statisticalBarRenderer51.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer30.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer6.setNegativeItemLabelPositionFallback(itemLabelPosition54);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition54);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator58 = null;
        statisticalBarRenderer0.setBaseItemLabelGenerator(categoryItemLabelGenerator58);
        java.awt.Paint paint61 = statisticalBarRenderer0.getSeriesPaint((int) (short) -1);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(font22);
        org.junit.Assert.assertNotNull(shape28);
        org.junit.Assert.assertNotNull(shape29);
        org.junit.Assert.assertNotNull(paint31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator45);
        org.junit.Assert.assertNotNull(font46);
        org.junit.Assert.assertNull(itemLabelPosition52);
        org.junit.Assert.assertNotNull(itemLabelPosition54);
        org.junit.Assert.assertNull(paint61);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer4.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition7 = statisticalBarRenderer4.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition7);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator9 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = statisticalBarRenderer10.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint13 = statisticalBarRenderer10.lookupSeriesPaint((int) (short) 0);
        java.awt.Shape shape15 = statisticalBarRenderer10.lookupSeriesShape(0);
        statisticalBarRenderer10.setDrawBarOutline(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        boolean boolean22 = statisticalBarRenderer18.getBaseItemLabelsVisible();
        int int23 = statisticalBarRenderer18.getColumnCount();
        double double24 = statisticalBarRenderer18.getItemMargin();
        boolean boolean25 = statisticalBarRenderer18.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer18.getPlot();
        java.awt.Paint paint29 = statisticalBarRenderer18.getItemOutlinePaint((int) (short) 1, 1);
        statisticalBarRenderer10.setErrorIndicatorPaint(paint29);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint29);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator32 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator32);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(itemLabelPosition7);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator9);
        org.junit.Assert.assertNull(itemLabelPosition11);
        org.junit.Assert.assertNotNull(paint13);
        org.junit.Assert.assertNotNull(shape15);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(paint29);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Shape shape4 = statisticalBarRenderer0.getSeriesShape((int) (short) 100);
        statisticalBarRenderer0.setItemLabelAnchorOffset((double) 10L);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent7 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent7);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(shape4);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        boolean boolean22 = statisticalBarRenderer18.getBaseItemLabelsVisible();
        int int23 = statisticalBarRenderer18.getColumnCount();
        double double24 = statisticalBarRenderer18.getItemMargin();
        java.awt.Shape shape27 = statisticalBarRenderer18.getItemShape(1, (int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape27, false);
        boolean boolean30 = statisticalBarRenderer0.getBaseCreateEntities();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getItemLabelPaint(1, (int) ' ');
        java.awt.Paint paint24 = statisticalBarRenderer0.getItemLabelPaint((int) '4', (int) (short) 100);
        org.jfree.chart.event.RendererChangeListener rendererChangeListener25 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.removeChangeListener(rendererChangeListener25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'listener' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(paint24);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent4 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent4);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) '#', categoryToolTipGenerator7, true);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator12 = statisticalBarRenderer0.getItemLabelGenerator((int) ' ', (int) (short) 1);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNull(categoryItemLabelGenerator12);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = null;
        statisticalBarRenderer6.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition8, false);
        java.awt.Stroke stroke13 = statisticalBarRenderer6.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint16 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer15.setBaseOutlinePaint(paint16);
        statisticalBarRenderer6.setSeriesPaint((int) 'a', paint16, false);
        statisticalBarRenderer0.setSeriesFillPaint((int) (short) 100, paint16);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer21 = null;
        statisticalBarRenderer0.setGradientPaintTransformer(gradientPaintTransformer21);
        statisticalBarRenderer0.setMinimumBarLength((double) 10.0f);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer0.getPositiveItemLabelPosition((int) (byte) 100, (int) '#');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(stroke13);
        org.junit.Assert.assertNotNull(paint16);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition8 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) 'a');
        org.jfree.chart.event.RendererChangeEvent rendererChangeEvent9 = null;
        statisticalBarRenderer0.notifyListeners(rendererChangeEvent9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition13 = null;
        statisticalBarRenderer11.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition13, false);
        java.awt.Stroke stroke18 = statisticalBarRenderer11.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = statisticalBarRenderer11.getPlot();
        java.awt.Paint paint20 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer11.setBaseItemLabelPaint(paint20);
        boolean boolean22 = statisticalBarRenderer11.getAutoPopulateSeriesOutlineStroke();
        statisticalBarRenderer11.setBaseSeriesVisible(false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer11.getPositiveItemLabelPosition((int) 'a', (int) (byte) 10);
        statisticalBarRenderer0.setBasePositiveItemLabelPosition(itemLabelPosition27, false);
        java.awt.Stroke stroke32 = statisticalBarRenderer0.getItemOutlineStroke(10, (int) (byte) 10);
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNotNull(itemLabelPosition8);
        org.junit.Assert.assertNotNull(stroke18);
        org.junit.Assert.assertNull(categoryPlot19);
        org.junit.Assert.assertNotNull(paint20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(stroke32);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer15.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer15.getSeriesPositiveItemLabelPosition((int) '#');
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint21 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer20.setBaseOutlinePaint(paint21);
        java.awt.Paint paint24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setSeriesPaint(0, paint24);
        java.lang.Object obj26 = null;
        boolean boolean27 = statisticalBarRenderer20.equals(obj26);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer29 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = null;
        statisticalBarRenderer29.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition31, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator34 = statisticalBarRenderer29.getLegendItemToolTipGenerator();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer29.setErrorIndicatorPaint(paint35);
        statisticalBarRenderer20.setSeriesPaint(10, paint35);
        statisticalBarRenderer15.setSeriesPaint((int) (byte) 10, paint35);
        statisticalBarRenderer0.setBaseItemLabelPaint(paint35);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator40 = null;
        statisticalBarRenderer0.setBaseURLGenerator(categoryURLGenerator40, true);
        java.awt.Stroke stroke44 = null;
        statisticalBarRenderer0.setSeriesOutlineStroke((int) (byte) 0, stroke44);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(paint21);
        org.junit.Assert.assertNotNull(paint24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator34);
        org.junit.Assert.assertNotNull(paint35);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = statisticalBarRenderer0.getLegendItemURLGenerator();
        java.awt.Paint paint21 = statisticalBarRenderer0.getItemLabelPaint(1, (int) ' ');
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator22 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator22, true);
        java.awt.Graphics2D graphics2D25 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis27 = null;
        org.jfree.chart.plot.CategoryMarker categoryMarker28 = null;
        java.awt.geom.Rectangle2D rectangle2D29 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawDomainMarker(graphics2D25, categoryPlot26, categoryAxis27, categoryMarker28, rectangle2D29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator18);
        org.junit.Assert.assertNotNull(paint21);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint3 = statisticalBarRenderer0.lookupSeriesPaint((int) (short) 0);
        boolean boolean4 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        boolean boolean6 = statisticalBarRenderer0.isSeriesVisibleInLegend((int) (short) 0);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(paint3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) ' ', shape7, false);
        statisticalBarRenderer0.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer0.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer0.lookupSeriesOutlineStroke((int) (byte) 0);
        boolean boolean17 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator19 = null;
        statisticalBarRenderer0.setSeriesURLGenerator(0, categoryURLGenerator19, false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(shape7);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = statisticalBarRenderer0.getPlot();
        boolean boolean24 = statisticalBarRenderer0.getAutoPopulateSeriesShape();
        java.awt.Shape shape27 = statisticalBarRenderer0.getItemShape(10, (int) (short) 1);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNull(categoryPlot23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(shape27);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        java.awt.Shape shape10 = statisticalBarRenderer0.getItemShape((int) (byte) 1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer11.setSeriesPaint(0, paint15);
        java.lang.Object obj17 = null;
        boolean boolean18 = statisticalBarRenderer11.equals(obj17);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer20 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition22 = null;
        statisticalBarRenderer20.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition22, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator25 = statisticalBarRenderer20.getLegendItemToolTipGenerator();
        java.awt.Paint paint26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer20.setErrorIndicatorPaint(paint26);
        statisticalBarRenderer11.setSeriesPaint(10, paint26);
        statisticalBarRenderer11.setBaseSeriesVisible(true);
        statisticalBarRenderer11.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer33.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = statisticalBarRenderer33.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition39 = statisticalBarRenderer33.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer11.setBaseNegativeItemLabelPosition(itemLabelPosition39, true);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition39);
        boolean boolean43 = statisticalBarRenderer0.getAutoPopulateSeriesOutlineStroke();
        double double44 = statisticalBarRenderer0.getMinimumBarLength();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator45 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        java.awt.Paint paint46 = null;
        statisticalBarRenderer0.setBasePaint(paint46, false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shape10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator25);
        org.junit.Assert.assertNotNull(paint26);
        org.junit.Assert.assertNull(categoryPlot37);
        org.junit.Assert.assertNotNull(itemLabelPosition39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator45);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Stroke stroke4 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (short) 1);
        java.lang.Boolean boolean6 = statisticalBarRenderer0.getSeriesCreateEntities((-1));
        double double7 = statisticalBarRenderer0.getMaximumBarWidth();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        java.lang.Boolean boolean20 = statisticalBarRenderer8.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseOutlinePaint(paint22);
        boolean boolean24 = statisticalBarRenderer21.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer25 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition26 = statisticalBarRenderer25.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer25.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer21.setBasePositiveItemLabelPosition(itemLabelPosition28);
        statisticalBarRenderer8.setBaseNegativeItemLabelPosition(itemLabelPosition28);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition28);
        java.awt.Font font34 = statisticalBarRenderer0.getItemLabelFont(100, (int) (short) 10);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNull(stroke4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(itemLabelPosition26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNotNull(font34);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28, true);
        java.awt.Shape shape32 = statisticalBarRenderer0.getSeriesShape(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setBaseOutlinePaint(paint35);
        boolean boolean37 = statisticalBarRenderer34.isDrawBarOutline();
        statisticalBarRenderer34.setDrawBarOutline(false);
        java.awt.Stroke stroke41 = null;
        statisticalBarRenderer34.setSeriesOutlineStroke((int) (short) 0, stroke41, true);
        java.awt.Paint paint46 = statisticalBarRenderer34.getItemPaint(10, (-1));
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPaint((-1), paint46, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(shape32);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(paint46);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Font font5 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesStroke(1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        boolean boolean12 = statisticalBarRenderer9.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer13.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer13.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer9.setBasePositiveItemLabelPosition(itemLabelPosition16);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (byte) -1, itemLabelPosition16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(font5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(itemLabelPosition14);
        org.junit.Assert.assertNotNull(itemLabelPosition16);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Font font8 = statisticalBarRenderer0.getBaseItemLabelFont();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer10 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = null;
        statisticalBarRenderer10.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition12, false);
        java.util.EventListener eventListener15 = null;
        boolean boolean16 = statisticalBarRenderer10.hasListener(eventListener15);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator18 = null;
        statisticalBarRenderer10.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator18);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator21 = statisticalBarRenderer10.getSeriesItemLabelGenerator(0);
        org.jfree.chart.util.GradientPaintTransformer gradientPaintTransformer22 = null;
        statisticalBarRenderer10.setGradientPaintTransformer(gradientPaintTransformer22);
        java.awt.Paint paint25 = statisticalBarRenderer10.lookupSeriesPaint((int) ' ');
        java.awt.Paint paint28 = statisticalBarRenderer10.getItemPaint(0, (int) (short) -1);
        statisticalBarRenderer0.setSeriesItemLabelPaint((int) '#', paint28, true);
        boolean boolean31 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(font8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator21);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setItemMargin(3.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition12 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = statisticalBarRenderer11.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean15 = statisticalBarRenderer11.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition16 = statisticalBarRenderer11.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint17 = statisticalBarRenderer11.getBaseFillPaint();
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (byte) 10, paint17);
        statisticalBarRenderer0.setSeriesItemLabelsVisible(1, (java.lang.Boolean) false, false);
        org.jfree.chart.plot.DrawingSupplier drawingSupplier23 = statisticalBarRenderer0.getDrawingSupplier();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(itemLabelPosition12);
        org.junit.Assert.assertNotNull(itemLabelPosition14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(itemLabelPosition16);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertNull(drawingSupplier23);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator5 = statisticalBarRenderer0.getSeriesURLGenerator((int) (byte) -1);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.lookupSeriesOutlineStroke(100);
        java.awt.Graphics2D graphics2D8 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot9 = null;
        java.awt.geom.Rectangle2D rectangle2D10 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawOutline(graphics2D8, categoryPlot9, rectangle2D10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryURLGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Paint paint9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer0.setBaseItemLabelPaint(paint9);
        java.awt.Shape shape11 = statisticalBarRenderer0.getBaseShape();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator14 = statisticalBarRenderer0.getURLGenerator((int) (byte) 1, (int) (short) -1);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(paint9);
        org.junit.Assert.assertNotNull(shape11);
        org.junit.Assert.assertNull(categoryURLGenerator14);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator18 = null;
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator18);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer21.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot25 = statisticalBarRenderer21.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition27 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition(100);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer21.getSeriesNegativeItemLabelPosition((int) 'a');
        statisticalBarRenderer0.setSeriesNegativeItemLabelPosition((int) (short) 100, itemLabelPosition29);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(true);
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        statisticalBarRenderer0.setSeriesVisibleInLegend(1, (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot25);
        org.junit.Assert.assertNotNull(itemLabelPosition27);
        org.junit.Assert.assertNotNull(itemLabelPosition29);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        statisticalBarRenderer0.setItemMargin(3.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        boolean boolean14 = statisticalBarRenderer11.isDrawBarOutline();
        statisticalBarRenderer11.setDrawBarOutline(false);
        java.awt.Stroke stroke18 = null;
        statisticalBarRenderer11.setSeriesOutlineStroke((int) (short) 0, stroke18, true);
        java.awt.Paint paint23 = statisticalBarRenderer11.getItemPaint(10, (-1));
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator26 = statisticalBarRenderer11.getURLGenerator((int) (short) -1, 10);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator28 = null;
        statisticalBarRenderer11.setSeriesItemLabelGenerator((int) (short) 10, categoryItemLabelGenerator28);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer30 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition31 = statisticalBarRenderer30.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition33 = statisticalBarRenderer30.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean34 = statisticalBarRenderer30.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition35 = statisticalBarRenderer30.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint36 = statisticalBarRenderer30.getBaseFillPaint();
        double double37 = statisticalBarRenderer30.getItemLabelAnchorOffset();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer39 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = statisticalBarRenderer39.getNegativeItemLabelPositionFallback();
        boolean boolean43 = statisticalBarRenderer39.getItemVisible((int) (byte) 100, (int) (byte) 1);
        statisticalBarRenderer39.setMinimumBarLength(0.0d);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer47 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition48 = statisticalBarRenderer47.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer47.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape54 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer47.setSeriesShape((int) ' ', shape54, false);
        statisticalBarRenderer47.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint61 = statisticalBarRenderer47.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = statisticalBarRenderer47.getSeriesNegativeItemLabelPosition((int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer64 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint65 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer64.setBaseOutlinePaint(paint65);
        double double67 = statisticalBarRenderer64.getItemLabelAnchorOffset();
        statisticalBarRenderer64.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Paint paint71 = statisticalBarRenderer64.lookupSeriesOutlinePaint(0);
        statisticalBarRenderer47.setBaseFillPaint(paint71);
        statisticalBarRenderer39.setSeriesFillPaint((int) ' ', paint71);
        statisticalBarRenderer30.setSeriesItemLabelPaint((int) (short) 0, paint71, true);
        boolean boolean76 = statisticalBarRenderer11.equals((java.lang.Object) paint71);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesItemLabelPaint((int) (byte) -1, paint71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint23);
        org.junit.Assert.assertNull(categoryURLGenerator26);
        org.junit.Assert.assertNull(itemLabelPosition31);
        org.junit.Assert.assertNotNull(itemLabelPosition33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(itemLabelPosition35);
        org.junit.Assert.assertNotNull(paint36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2.0d + "'", double37 == 2.0d);
        org.junit.Assert.assertNull(itemLabelPosition40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(itemLabelPosition48);
        org.junit.Assert.assertNotNull(shape54);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertNotNull(itemLabelPosition63);
        org.junit.Assert.assertNotNull(paint65);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2.0d + "'", double67 == 2.0d);
        org.junit.Assert.assertNotNull(paint71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer4 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = null;
        statisticalBarRenderer4.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition6, false);
        java.awt.Stroke stroke11 = statisticalBarRenderer4.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape13 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer4.setSeriesShape((int) (short) 1, shape13);
        boolean boolean15 = statisticalBarRenderer4.isDrawBarOutline();
        org.jfree.chart.plot.CategoryPlot categoryPlot16 = statisticalBarRenderer4.getPlot();
        statisticalBarRenderer4.setBaseItemLabelsVisible(false, false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition21 = statisticalBarRenderer4.getSeriesNegativeItemLabelPosition((int) (byte) 100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition21);
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator23 = statisticalBarRenderer0.getBaseURLGenerator();
        java.awt.Paint paint25 = statisticalBarRenderer0.getSeriesItemLabelPaint(1);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNotNull(shape13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(categoryPlot16);
        org.junit.Assert.assertNotNull(itemLabelPosition21);
        org.junit.Assert.assertNull(categoryURLGenerator23);
        org.junit.Assert.assertNull(paint25);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke9);
        java.awt.Graphics2D graphics2D11 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot12 = null;
        java.awt.geom.Rectangle2D rectangle2D13 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawBackground(graphics2D11, categoryPlot12, rectangle2D13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(stroke9);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition1 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition3 = statisticalBarRenderer0.getSeriesPositiveItemLabelPosition((int) '#');
        boolean boolean4 = statisticalBarRenderer0.getBaseSeriesVisible();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition5 = statisticalBarRenderer0.getNegativeItemLabelPositionFallback();
        java.awt.Paint paint6 = statisticalBarRenderer0.getBaseFillPaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getBaseToolTipGenerator();
        java.awt.Stroke stroke9 = statisticalBarRenderer0.lookupSeriesStroke((int) 'a');
        java.awt.Font font12 = statisticalBarRenderer0.getItemLabelFont((int) (byte) 0, (int) (byte) 10);
        statisticalBarRenderer0.setBaseSeriesVisible(false);
        org.junit.Assert.assertNull(itemLabelPosition1);
        org.junit.Assert.assertNotNull(itemLabelPosition3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(itemLabelPosition5);
        org.junit.Assert.assertNotNull(paint6);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNotNull(font12);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.util.EventListener eventListener3 = null;
        boolean boolean4 = statisticalBarRenderer0.hasListener(eventListener3);
        boolean boolean5 = statisticalBarRenderer0.getAutoPopulateSeriesStroke();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition6 = statisticalBarRenderer0.getBaseNegativeItemLabelPosition();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer7 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition9 = null;
        statisticalBarRenderer7.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition9, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator12 = statisticalBarRenderer7.getLegendItemToolTipGenerator();
        double double13 = statisticalBarRenderer7.getItemMargin();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator14 = null;
        statisticalBarRenderer7.setBaseToolTipGenerator(categoryToolTipGenerator14);
        java.awt.Stroke stroke17 = statisticalBarRenderer7.lookupSeriesOutlineStroke((int) 'a');
        statisticalBarRenderer0.setErrorIndicatorStroke(stroke17);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition6);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.2d + "'", double13 == 0.2d);
        org.junit.Assert.assertNotNull(stroke17);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot8 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setBaseOutlineStroke(stroke9);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer12 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition14 = null;
        statisticalBarRenderer12.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition14, false);
        boolean boolean17 = statisticalBarRenderer12.getBaseCreateEntities();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer19 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer19.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot23 = statisticalBarRenderer19.getPlot();
        java.awt.Paint paint25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT;
        statisticalBarRenderer19.setSeriesOutlinePaint(10, paint25, true);
        statisticalBarRenderer12.setSeriesPaint((int) '#', paint25, true);
        statisticalBarRenderer0.setSeriesOutlinePaint((int) (short) 100, paint25);
        java.awt.Paint paint31 = statisticalBarRenderer0.getErrorIndicatorPaint();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(categoryPlot8);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(categoryPlot23);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(paint31);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        boolean boolean8 = statisticalBarRenderer0.getIncludeBaseInRange();
        java.awt.Paint paint10 = statisticalBarRenderer0.getSeriesPaint(0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer11 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint12 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer11.setBaseOutlinePaint(paint12);
        boolean boolean14 = statisticalBarRenderer11.isDrawBarOutline();
        org.jfree.chart.urls.CategoryURLGenerator categoryURLGenerator15 = null;
        statisticalBarRenderer11.setBaseURLGenerator(categoryURLGenerator15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer17.setBaseOutlinePaint(paint18);
        boolean boolean20 = statisticalBarRenderer17.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition23 = null;
        statisticalBarRenderer21.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition23, false);
        java.util.EventListener eventListener26 = null;
        boolean boolean27 = statisticalBarRenderer21.hasListener(eventListener26);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator29 = null;
        statisticalBarRenderer21.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator29);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator32 = statisticalBarRenderer21.getSeriesItemLabelGenerator(0);
        java.awt.Font font33 = statisticalBarRenderer21.getBaseItemLabelFont();
        statisticalBarRenderer17.setBaseItemLabelFont(font33);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator36 = null;
        statisticalBarRenderer17.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator36);
        java.awt.Shape shape39 = statisticalBarRenderer17.lookupSeriesShape((int) (short) 0);
        java.awt.Shape shape40 = statisticalBarRenderer17.getBaseShape();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer41 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint42 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer41.setBaseOutlinePaint(paint42);
        boolean boolean44 = statisticalBarRenderer41.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer45 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition47 = null;
        statisticalBarRenderer45.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition47, false);
        java.util.EventListener eventListener50 = null;
        boolean boolean51 = statisticalBarRenderer45.hasListener(eventListener50);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator53 = null;
        statisticalBarRenderer45.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator53);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator56 = statisticalBarRenderer45.getSeriesItemLabelGenerator(0);
        java.awt.Font font57 = statisticalBarRenderer45.getBaseItemLabelFont();
        statisticalBarRenderer41.setBaseItemLabelFont(font57);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator60 = null;
        statisticalBarRenderer41.setSeriesItemLabelGenerator((int) (byte) 1, categoryItemLabelGenerator60);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer62 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition63 = statisticalBarRenderer62.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition65 = statisticalBarRenderer62.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer41.setNegativeItemLabelPositionFallback(itemLabelPosition65);
        statisticalBarRenderer17.setNegativeItemLabelPositionFallback(itemLabelPosition65);
        statisticalBarRenderer11.setPositiveItemLabelPositionFallback(itemLabelPosition65);
        statisticalBarRenderer0.setPositiveItemLabelPositionFallback(itemLabelPosition65);
        java.awt.Shape shape71 = statisticalBarRenderer0.lookupSeriesShape((int) '#');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(paint10);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator32);
        org.junit.Assert.assertNotNull(font33);
        org.junit.Assert.assertNotNull(shape39);
        org.junit.Assert.assertNotNull(shape40);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator56);
        org.junit.Assert.assertNotNull(font57);
        org.junit.Assert.assertNull(itemLabelPosition63);
        org.junit.Assert.assertNotNull(itemLabelPosition65);
        org.junit.Assert.assertNotNull(shape71);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator1 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer2 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition4 = null;
        statisticalBarRenderer2.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition4, false);
        java.awt.Stroke stroke9 = statisticalBarRenderer2.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.plot.CategoryPlot categoryPlot10 = statisticalBarRenderer2.getPlot();
        java.awt.Stroke stroke11 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer2.setBaseOutlineStroke(stroke11);
        statisticalBarRenderer2.setSeriesCreateEntities(1, (java.lang.Boolean) true, false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition19 = statisticalBarRenderer18.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer18.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape25 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer18.setSeriesShape((int) ' ', shape25, false);
        statisticalBarRenderer18.setMaximumBarWidth((double) 10.0f);
        boolean boolean32 = statisticalBarRenderer18.isItemLabelVisible(100, (int) (byte) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer33 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint34 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer33.setBaseOutlinePaint(paint34);
        statisticalBarRenderer18.setBaseOutlinePaint(paint34, false);
        statisticalBarRenderer2.setSeriesPaint(0, paint34);
        statisticalBarRenderer0.setBaseFillPaint(paint34, false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator1);
        org.junit.Assert.assertNotNull(stroke9);
        org.junit.Assert.assertNull(categoryPlot10);
        org.junit.Assert.assertNotNull(stroke11);
        org.junit.Assert.assertNull(itemLabelPosition19);
        org.junit.Assert.assertNotNull(shape25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(paint34);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        boolean boolean4 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        int int5 = statisticalBarRenderer0.getColumnCount();
        double double6 = statisticalBarRenderer0.getItemMargin();
        java.awt.Shape shape9 = statisticalBarRenderer0.getItemShape(1, (int) (byte) 10);
        java.lang.Boolean boolean11 = statisticalBarRenderer0.getSeriesVisible(1);
        int int12 = statisticalBarRenderer0.getPassCount();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(true);
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) -1, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires index >= 0.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2d + "'", double6 == 0.2d);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        java.lang.Boolean boolean12 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        boolean boolean16 = statisticalBarRenderer13.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition20 = statisticalBarRenderer17.getSeriesPositiveItemLabelPosition((int) '#');
        statisticalBarRenderer13.setBasePositiveItemLabelPosition(itemLabelPosition20);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition20);
        java.awt.Paint paint25 = statisticalBarRenderer0.getItemPaint(10, (int) (short) -1);
        java.awt.Shape shape26 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setBaseShape(shape26, false);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator29 = null;
        statisticalBarRenderer0.setBaseToolTipGenerator(categoryToolTipGenerator29, false);
        java.awt.Paint paint32 = null;
        statisticalBarRenderer0.setErrorIndicatorPaint(paint32);
        java.awt.Paint paint35 = statisticalBarRenderer0.getSeriesPaint((int) ' ');
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(itemLabelPosition20);
        org.junit.Assert.assertNotNull(paint25);
        org.junit.Assert.assertNotNull(shape26);
        org.junit.Assert.assertNull(paint35);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Font font20 = statisticalBarRenderer0.getItemLabelFont((int) (byte) -1, (int) '4');
        statisticalBarRenderer0.setSeriesCreateEntities(100, (java.lang.Boolean) false);
        statisticalBarRenderer0.setBase((double) (byte) 0);
        int int26 = statisticalBarRenderer0.getColumnCount();
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer0.getLegendItemLabelGenerator();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer0.getPositiveItemLabelPositionFallback();
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(font20);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNull(itemLabelPosition28);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer18 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint19 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer18.setBaseOutlinePaint(paint19);
        boolean boolean21 = statisticalBarRenderer18.isDrawBarOutline();
        boolean boolean22 = statisticalBarRenderer18.getBaseItemLabelsVisible();
        int int23 = statisticalBarRenderer18.getColumnCount();
        double double24 = statisticalBarRenderer18.getItemMargin();
        java.awt.Shape shape27 = statisticalBarRenderer18.getItemShape(1, (int) (byte) 10);
        statisticalBarRenderer0.setBaseShape(shape27, false);
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (short) 10, (java.lang.Boolean) false);
        statisticalBarRenderer0.setBaseSeriesVisibleInLegend(true, false);
        java.awt.Paint paint38 = statisticalBarRenderer0.getItemOutlinePaint((int) (short) 100, (int) (byte) 100);
        java.awt.Stroke stroke40 = statisticalBarRenderer0.getSeriesOutlineStroke((int) '4');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.2d + "'", double24 == 0.2d);
        org.junit.Assert.assertNotNull(shape27);
        org.junit.Assert.assertNotNull(paint38);
        org.junit.Assert.assertNull(stroke40);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        statisticalBarRenderer0.setBaseSeriesVisible(true);
        statisticalBarRenderer0.setIncludeBaseInRange(true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition28 = statisticalBarRenderer22.getSeriesNegativeItemLabelPosition(100);
        statisticalBarRenderer0.setBaseNegativeItemLabelPosition(itemLabelPosition28, true);
        java.awt.Shape shape32 = statisticalBarRenderer0.getSeriesShape(1);
        java.awt.Font font34 = statisticalBarRenderer0.getSeriesItemLabelFont(10);
        double double35 = statisticalBarRenderer0.getBase();
        int int36 = statisticalBarRenderer0.getColumnCount();
        boolean boolean38 = statisticalBarRenderer0.isSeriesItemLabelsVisible((int) (byte) 10);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(itemLabelPosition28);
        org.junit.Assert.assertNull(shape32);
        org.junit.Assert.assertNull(font34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Paint paint6 = statisticalBarRenderer0.getSeriesFillPaint((int) (byte) 0);
        boolean boolean9 = statisticalBarRenderer0.getItemCreateEntity((int) '4', (int) 'a');
        java.awt.Paint paint12 = statisticalBarRenderer0.getItemPaint(1, (int) (short) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer13 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint14 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer13.setBaseOutlinePaint(paint14);
        java.awt.Paint paint17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer13.setSeriesPaint(0, paint17);
        java.lang.Object obj19 = null;
        boolean boolean20 = statisticalBarRenderer13.equals(obj19);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition24 = null;
        statisticalBarRenderer22.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition24, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator27 = statisticalBarRenderer22.getLegendItemToolTipGenerator();
        java.awt.Paint paint28 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer22.setErrorIndicatorPaint(paint28);
        statisticalBarRenderer13.setSeriesPaint(10, paint28);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator31 = null;
        statisticalBarRenderer13.setLegendItemToolTipGenerator(categorySeriesLabelGenerator31);
        java.awt.Paint paint34 = statisticalBarRenderer13.lookupSeriesPaint(1);
        statisticalBarRenderer0.setBasePaint(paint34, false);
        boolean boolean39 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) -1, (int) (short) 0);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition41 = statisticalBarRenderer0.getSeriesNegativeItemLabelPosition((int) (short) 1);
        statisticalBarRenderer0.setAutoPopulateSeriesStroke(true);
        int int44 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNull(paint6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(paint12);
        org.junit.Assert.assertNotNull(paint14);
        org.junit.Assert.assertNotNull(paint17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator27);
        org.junit.Assert.assertNotNull(paint28);
        org.junit.Assert.assertNotNull(paint34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(itemLabelPosition41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape9 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer0.setSeriesShape((int) (short) 1, shape9);
        boolean boolean11 = statisticalBarRenderer0.isDrawBarOutline();
        java.awt.Shape shape13 = statisticalBarRenderer0.lookupSeriesShape((int) (byte) 1);
        statisticalBarRenderer0.setMinimumBarLength((double) (byte) 10);
        java.awt.Shape shape16 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.setBaseShape(shape16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null 'shape' argument.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(shape9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shape13);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer6 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer6.setBaseOutlinePaint(paint7);
        boolean boolean9 = statisticalBarRenderer6.isDrawBarOutline();
        statisticalBarRenderer6.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator13 = statisticalBarRenderer6.getSeriesToolTipGenerator((-1));
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer15 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer15.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot19 = statisticalBarRenderer15.getPlot();
        java.awt.Stroke stroke22 = statisticalBarRenderer15.getItemOutlineStroke(1, 100);
        statisticalBarRenderer6.setSeriesOutlineStroke((int) (short) 0, stroke22);
        statisticalBarRenderer0.setBaseStroke(stroke22, true);
        java.awt.Font font26 = statisticalBarRenderer0.getBaseItemLabelFont();
        java.awt.Paint paint28 = statisticalBarRenderer0.getSeriesItemLabelPaint((int) (short) 10);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNotNull(paint7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator13);
        org.junit.Assert.assertNull(categoryPlot19);
        org.junit.Assert.assertNotNull(stroke22);
        org.junit.Assert.assertNotNull(font26);
        org.junit.Assert.assertNull(paint28);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        boolean boolean3 = statisticalBarRenderer0.isDrawBarOutline();
        statisticalBarRenderer0.setMaximumBarWidth((double) (short) 100);
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator7 = statisticalBarRenderer0.getSeriesToolTipGenerator((-1));
        statisticalBarRenderer0.setSeriesVisible((int) (short) 10, (java.lang.Boolean) true);
        boolean boolean11 = statisticalBarRenderer0.getBaseItemLabelsVisible();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator13 = statisticalBarRenderer0.getSeriesItemLabelGenerator((int) (short) 100);
        statisticalBarRenderer0.setMinimumBarLength(100.0d);
        statisticalBarRenderer0.setSeriesVisibleInLegend(0, (java.lang.Boolean) true, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer21 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint22 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer21.setBaseOutlinePaint(paint22);
        double double24 = statisticalBarRenderer21.getBase();
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator26 = statisticalBarRenderer21.getSeriesItemLabelGenerator(10);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer28 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition29 = statisticalBarRenderer28.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer28.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer28.setSeriesShape((int) ' ', shape35, false);
        statisticalBarRenderer28.setMaximumBarWidth((double) 10.0f);
        java.awt.Paint paint42 = statisticalBarRenderer28.getItemOutlinePaint((int) (short) -1, (int) (short) 1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer43 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint44 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer43.setBaseOutlinePaint(paint44);
        java.awt.Paint paint47 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer43.setSeriesPaint(0, paint47);
        java.lang.Object obj49 = null;
        boolean boolean50 = statisticalBarRenderer43.equals(obj49);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer52 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition54 = null;
        statisticalBarRenderer52.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition54, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator57 = statisticalBarRenderer52.getLegendItemToolTipGenerator();
        java.awt.Paint paint58 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer52.setErrorIndicatorPaint(paint58);
        statisticalBarRenderer43.setSeriesPaint(10, paint58);
        java.awt.Paint paint61 = statisticalBarRenderer43.getBaseOutlinePaint();
        statisticalBarRenderer28.setBaseItemLabelPaint(paint61);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition64 = statisticalBarRenderer28.getSeriesNegativeItemLabelPosition((int) (short) 1);
        statisticalBarRenderer21.setSeriesPositiveItemLabelPosition((int) ' ', itemLabelPosition64);
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 1, itemLabelPosition64, true);
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(categoryToolTipGenerator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator13);
        org.junit.Assert.assertNotNull(paint22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNull(categoryItemLabelGenerator26);
        org.junit.Assert.assertNull(itemLabelPosition29);
        org.junit.Assert.assertNotNull(shape35);
        org.junit.Assert.assertNotNull(paint42);
        org.junit.Assert.assertNotNull(paint44);
        org.junit.Assert.assertNotNull(paint47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator57);
        org.junit.Assert.assertNotNull(paint58);
        org.junit.Assert.assertNotNull(paint61);
        org.junit.Assert.assertNotNull(itemLabelPosition64);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer0.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot4 = statisticalBarRenderer0.getPlot();
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke(1, 100);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer8 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition10 = null;
        statisticalBarRenderer8.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition10, false);
        java.awt.Stroke stroke15 = statisticalBarRenderer8.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape17 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer8.setSeriesShape((int) (short) 1, shape17);
        statisticalBarRenderer0.setBaseShape(shape17, false);
        statisticalBarRenderer0.setAutoPopulateSeriesFillPaint(false);
        org.jfree.chart.annotations.CategoryAnnotation categoryAnnotation23 = null;
        boolean boolean24 = statisticalBarRenderer0.removeAnnotation(categoryAnnotation23);
        statisticalBarRenderer0.setBase(1.0d);
        org.jfree.chart.LegendItemCollection legendItemCollection27 = statisticalBarRenderer0.getLegendItems();
        org.junit.Assert.assertNull(categoryPlot4);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(stroke15);
        org.junit.Assert.assertNotNull(shape17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(legendItemCollection27);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        double double3 = statisticalBarRenderer0.getItemLabelAnchorOffset();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlinePaint(false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getSeriesOutlineStroke((int) (byte) -1);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        java.awt.Stroke stroke16 = statisticalBarRenderer9.getItemOutlineStroke((int) (byte) 0, 0);
        java.awt.Shape shape18 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer9.setSeriesShape((int) (short) 1, shape18);
        java.lang.Boolean boolean21 = statisticalBarRenderer9.getSeriesVisible((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer23 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition25 = null;
        statisticalBarRenderer23.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition25, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator28 = statisticalBarRenderer23.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke30 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer23.setSeriesStroke((int) (short) 100, stroke30);
        statisticalBarRenderer9.setSeriesOutlineStroke((int) (byte) 10, stroke30);
        statisticalBarRenderer0.setSeriesOutlineStroke(0, stroke30);
        java.awt.Graphics2D graphics2D34 = null;
        org.jfree.chart.renderer.category.CategoryItemRendererState categoryItemRendererState35 = null;
        java.awt.geom.Rectangle2D rectangle2D36 = null;
        org.jfree.chart.plot.CategoryPlot categoryPlot37 = null;
        org.jfree.chart.axis.CategoryAxis categoryAxis38 = null;
        org.jfree.chart.axis.ValueAxis valueAxis39 = null;
        org.jfree.data.category.CategoryDataset categoryDataset40 = null;
        // The following exception was thrown during execution in test generation
        try {
            statisticalBarRenderer0.drawItem(graphics2D34, categoryItemRendererState35, rectangle2D36, categoryPlot37, categoryAxis38, valueAxis39, categoryDataset40, (int) (short) 10, 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Requires StatisticalCategoryDataset.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.0d + "'", double3 == 2.0d);
        org.junit.Assert.assertNull(stroke7);
        org.junit.Assert.assertNotNull(stroke16);
        org.junit.Assert.assertNotNull(shape18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator28);
        org.junit.Assert.assertNotNull(stroke30);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        java.lang.Boolean boolean9 = statisticalBarRenderer0.getSeriesVisible((int) (byte) 0);
        int int10 = statisticalBarRenderer0.getRowCount();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator5 = statisticalBarRenderer0.getLegendItemToolTipGenerator();
        java.awt.Stroke stroke7 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE;
        statisticalBarRenderer0.setSeriesStroke((int) (short) 100, stroke7);
        statisticalBarRenderer0.setBaseItemLabelsVisible(false);
        boolean boolean13 = statisticalBarRenderer0.isItemLabelVisible((int) (byte) 1, (int) 'a');
        statisticalBarRenderer0.setSeriesItemLabelsVisible(0, true);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer17 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition18 = statisticalBarRenderer17.getNegativeItemLabelPositionFallback();
        statisticalBarRenderer17.setSeriesVisible((int) (short) 1, (java.lang.Boolean) true, true);
        java.awt.Shape shape24 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE;
        statisticalBarRenderer17.setSeriesShape((int) ' ', shape24, false);
        statisticalBarRenderer17.setMaximumBarWidth((double) 10.0f);
        statisticalBarRenderer17.setBaseItemLabelsVisible(true, false);
        java.awt.Stroke stroke33 = statisticalBarRenderer17.lookupSeriesOutlineStroke((int) (byte) 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer34 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint35 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer34.setBaseOutlinePaint(paint35);
        boolean boolean37 = statisticalBarRenderer34.isDrawBarOutline();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer38 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition40 = null;
        statisticalBarRenderer38.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition40, false);
        java.util.EventListener eventListener43 = null;
        boolean boolean44 = statisticalBarRenderer38.hasListener(eventListener43);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator46 = null;
        statisticalBarRenderer38.setSeriesItemLabelGenerator(10, categoryItemLabelGenerator46);
        org.jfree.chart.labels.CategoryItemLabelGenerator categoryItemLabelGenerator49 = statisticalBarRenderer38.getSeriesItemLabelGenerator(0);
        java.awt.Font font50 = statisticalBarRenderer38.getBaseItemLabelFont();
        statisticalBarRenderer34.setBaseItemLabelFont(font50);
        statisticalBarRenderer17.setBaseItemLabelFont(font50);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator53 = statisticalBarRenderer17.getLegendItemLabelGenerator();
        statisticalBarRenderer0.setLegendItemToolTipGenerator(categorySeriesLabelGenerator53);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator5);
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(itemLabelPosition18);
        org.junit.Assert.assertNotNull(shape24);
        org.junit.Assert.assertNotNull(stroke33);
        org.junit.Assert.assertNotNull(paint35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(categoryItemLabelGenerator49);
        org.junit.Assert.assertNotNull(font50);
        org.junit.Assert.assertNotNull(categorySeriesLabelGenerator53);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint1 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer0.setBaseOutlinePaint(paint1);
        java.awt.Paint paint4 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer0.setSeriesPaint(0, paint4);
        java.lang.Object obj6 = null;
        boolean boolean7 = statisticalBarRenderer0.equals(obj6);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition11 = null;
        statisticalBarRenderer9.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition11, false);
        org.jfree.chart.labels.CategorySeriesLabelGenerator categorySeriesLabelGenerator14 = statisticalBarRenderer9.getLegendItemToolTipGenerator();
        java.awt.Paint paint15 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT;
        statisticalBarRenderer9.setErrorIndicatorPaint(paint15);
        statisticalBarRenderer0.setSeriesPaint(10, paint15);
        java.awt.Paint paint18 = statisticalBarRenderer0.getBaseOutlinePaint();
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = null;
        statisticalBarRenderer0.setSeriesToolTipGenerator((int) (short) 10, categoryToolTipGenerator20);
        java.awt.Stroke stroke23 = statisticalBarRenderer0.getSeriesStroke((int) '#');
        org.junit.Assert.assertNotNull(paint1);
        org.junit.Assert.assertNotNull(paint4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(categorySeriesLabelGenerator14);
        org.junit.Assert.assertNotNull(paint15);
        org.junit.Assert.assertNotNull(paint18);
        org.junit.Assert.assertNull(stroke23);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer0 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition2 = null;
        statisticalBarRenderer0.setSeriesPositiveItemLabelPosition((int) (short) 10, itemLabelPosition2, false);
        java.awt.Stroke stroke7 = statisticalBarRenderer0.getItemOutlineStroke((int) (byte) 0, 0);
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer9 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        java.awt.Paint paint10 = org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT;
        statisticalBarRenderer9.setBaseOutlinePaint(paint10);
        statisticalBarRenderer0.setSeriesPaint((int) 'a', paint10, false);
        org.jfree.chart.plot.CategoryPlot categoryPlot14 = statisticalBarRenderer0.getPlot();
        statisticalBarRenderer0.setAutoPopulateSeriesOutlineStroke(false);
        java.lang.Boolean boolean18 = statisticalBarRenderer0.getSeriesVisibleInLegend((-1));
        org.jfree.chart.labels.CategoryToolTipGenerator categoryToolTipGenerator20 = statisticalBarRenderer0.getSeriesToolTipGenerator((int) (byte) 10);
        boolean boolean21 = statisticalBarRenderer0.getAutoPopulateSeriesFillPaint();
        org.jfree.chart.renderer.category.StatisticalBarRenderer statisticalBarRenderer22 = new org.jfree.chart.renderer.category.StatisticalBarRenderer();
        statisticalBarRenderer22.setSeriesVisibleInLegend((int) (byte) 100, (java.lang.Boolean) false);
        org.jfree.chart.plot.CategoryPlot categoryPlot26 = statisticalBarRenderer22.getPlot();
        java.awt.Stroke stroke29 = statisticalBarRenderer22.getItemOutlineStroke(1, 100);
        double double30 = statisticalBarRenderer22.getMinimumBarLength();
        statisticalBarRenderer22.setMaximumBarWidth(10.0d);
        statisticalBarRenderer22.setBaseCreateEntities(true, false);
        java.awt.Font font37 = statisticalBarRenderer22.getSeriesItemLabelFont((int) (short) 10);
        statisticalBarRenderer22.setSeriesVisible(10, (java.lang.Boolean) false);
        org.jfree.chart.labels.ItemLabelPosition itemLabelPosition42 = statisticalBarRenderer22.getSeriesPositiveItemLabelPosition((int) (short) 100);
        statisticalBarRenderer0.setNegativeItemLabelPositionFallback(itemLabelPosition42);
        java.lang.Class<?> wildcardClass44 = statisticalBarRenderer0.getClass();
        org.junit.Assert.assertNotNull(stroke7);
        org.junit.Assert.assertNotNull(paint10);
        org.junit.Assert.assertNull(categoryPlot14);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(categoryToolTipGenerator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(categoryPlot26);
        org.junit.Assert.assertNotNull(stroke29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(font37);
        org.junit.Assert.assertNotNull(itemLabelPosition42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }
}

