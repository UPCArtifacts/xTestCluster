import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        double double4 = fraction0.doubleValue();
        int int5 = fraction0.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        int int12 = fraction10.intValue();
        int int13 = fraction10.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.pow((int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        float float21 = fraction20.floatValue();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean24 = fraction22.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.multiplyBy(fraction25);
        int int27 = fraction25.intValue();
        int int28 = fraction25.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.reduce();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction20.add(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction19.multiplyBy(fraction20);
        double double32 = fraction19.doubleValue();
        long long33 = fraction19.longValue();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction14.add(fraction19);
        int int35 = fraction19.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction0.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction41 = fraction38.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction38.pow(2);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction38.reduce();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        int int50 = fraction48.intValue();
        int int51 = fraction48.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction55 = fraction53.subtract(fraction54);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean57 = fraction53.equals((java.lang.Object) fraction56);
        int int58 = fraction53.intValue();
        org.apache.commons.lang3.math.Fraction fraction59 = fraction52.divideBy(fraction53);
        org.apache.commons.lang3.math.Fraction fraction60 = fraction38.subtract(fraction52);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction60.pow(4);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction19.subtract(fraction62);
        java.lang.Class<?> wildcardClass64 = fraction63.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 1.0f + "'", float21 == 1.0f);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.25d + "'", double32 == 0.25d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        int int8 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction0.add(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = fraction10.invert();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, (-17));
        org.apache.commons.lang3.math.Fraction fraction15 = fraction10.subtract(fraction14);
        java.lang.String str16 = fraction14.toProperString();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "0" + "'", str16, "0");
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        boolean boolean3 = fraction0.equals((java.lang.Object) fraction1);
        long long4 = fraction1.longValue();
        int int5 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction1.pow((-4));
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction7);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction0.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean27 = fraction25.equals((java.lang.Object) '4');
        int int28 = fraction25.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction25.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        float float37 = fraction36.floatValue();
        boolean boolean38 = fraction35.equals((java.lang.Object) fraction36);
        long long39 = fraction36.longValue();
        int int40 = fraction25.compareTo(fraction36);
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int42 = fraction41.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction41.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction36.add(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction24.divideBy(fraction44);
        double double46 = fraction44.doubleValue();
        int int47 = fraction44.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 1.0f + "'", float37 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1.6d + "'", double46 == 1.6d);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean13 = fraction11.equals((java.lang.Object) '4');
        int int14 = fraction11.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction15.invert();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.subtract(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean24 = fraction22.equals((java.lang.Object) '4');
        int int25 = fraction22.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction22.multiplyBy(fraction30);
        java.lang.String str32 = fraction31.toString();
        java.lang.String str33 = fraction31.toString();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction20.add(fraction31);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction9.divideBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        int int41 = fraction40.intValue();
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        int int50 = fraction48.intValue();
        int int51 = fraction48.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction43.add(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction42.multiplyBy(fraction43);
        double double55 = fraction42.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction40.multiplyBy(fraction42);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction40.pow(0);
        int int59 = fraction40.getNumerator();
        boolean boolean60 = fraction9.equals((java.lang.Object) int59);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int62 = fraction61.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction9.subtract(fraction61);
        float float64 = fraction61.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1/3" + "'", str32, "1/3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1/3" + "'", str33, "1/3");
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.25d + "'", double55 == 0.25d);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 0.75f + "'", float64 == 0.75f);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean16 = fraction14.equals((java.lang.Object) '4');
        int int17 = fraction14.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction14.multiplyBy(fraction22);
        java.lang.String str24 = fraction23.toString();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE;
        float float27 = fraction26.floatValue();
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean30 = fraction28.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.multiplyBy(fraction31);
        int int33 = fraction31.intValue();
        int int34 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.reduce();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction26.add(fraction35);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction25.multiplyBy(fraction26);
        double double38 = fraction25.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction23.multiplyBy(fraction25);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean42 = fraction40.equals((java.lang.Object) '4');
        int int43 = fraction40.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.invert();
        int int45 = fraction44.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction23.multiplyBy(fraction44);
        int int47 = fraction13.compareTo(fraction46);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction13.abs();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction12.multiplyBy(fraction48);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.invert();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1/3" + "'", str24, "1/3");
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 1.0f + "'", float27 == 1.0f);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.25d + "'", double38 == 0.25d);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(104, (int) (short) -17, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The numerator must not be negative");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int17 = fraction16.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction11.add(fraction16);
        java.lang.String str20 = fraction19.toString();
        int int21 = fraction19.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "8/5" + "'", str20, "8/5");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int1 = fraction0.getNumerator();
        java.lang.String str2 = fraction0.toString();
        float float3 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) 0.33333334f);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.add(fraction5);
        int int7 = fraction5.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "3/4" + "'", str2, "3/4");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.75f + "'", float3 == 0.75f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (byte) 23, 35);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        java.lang.Class<?> wildcardClass5 = fraction2.getClass();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, (-51));
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction5.abs();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        java.lang.String str3 = fraction0.toString();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1/1" + "'", str3, "1/1");
        org.junit.Assert.assertNotNull(fraction4);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.divideBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        int int17 = fraction15.intValue();
        double double18 = fraction15.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction11.divideBy(fraction15);
        int int20 = fraction15.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction15.abs();
        long long23 = fraction22.longValue();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.reduce();
        java.lang.Object obj25 = null;
        boolean boolean26 = fraction22.equals(obj25);
        int int27 = fraction22.getDenominator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction4.intValue();
        long long6 = fraction4.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(8, 17);
        int int3 = fraction2.getProperWhole();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(10.0d);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((-17), (int) (short) 100, (int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean9 = fraction7.equals((java.lang.Object) '4');
        int int10 = fraction7.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.invert();
        int int12 = fraction11.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction11.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction6.divideBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction5.subtract(fraction11);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction1.add(fraction5);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction17.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        float float21 = fraction20.floatValue();
        boolean boolean22 = fraction19.equals((java.lang.Object) fraction20);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        int int30 = fraction28.intValue();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.pow(1);
        int int33 = fraction28.intValue();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction28.reduce();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction24.divideBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction19.divideBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        float float39 = fraction38.floatValue();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean42 = fraction40.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.multiplyBy(fraction43);
        int int45 = fraction43.intValue();
        int int46 = fraction43.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.reduce();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction38.add(fraction47);
        org.apache.commons.lang3.math.Fraction fraction49 = fraction37.multiplyBy(fraction38);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction37.reduce();
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        float float52 = fraction51.floatValue();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        int int58 = fraction56.intValue();
        int int59 = fraction56.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction51.add(fraction60);
        boolean boolean62 = fraction50.equals((java.lang.Object) fraction60);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction19.multiplyBy(fraction50);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction63.reduce();
        boolean boolean65 = fraction18.equals((java.lang.Object) fraction63);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 1.0f + "'", float21 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 1.0f + "'", float39 == 1.0f);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 1.0f + "'", float52 == 1.0f);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(17, (int) (byte) 52);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.pow((int) (byte) 1);
        int int7 = fraction0.intValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.subtract(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        boolean boolean16 = fraction10.equals((java.lang.Object) fraction14);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction0.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean22 = fraction20.equals((java.lang.Object) '4');
        int int23 = fraction20.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction20.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction29.divideBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction31.reduce();
        boolean boolean33 = fraction19.equals((java.lang.Object) fraction32);
        long long34 = fraction32.longValue();
        java.lang.String str35 = fraction32.toString();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.invert();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction14.multiplyBy(fraction32);
        long long38 = fraction32.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "4/3" + "'", str35, "4/3");
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        float float3 = fraction1.floatValue();
        int int4 = fraction1.getProperNumerator();
        int int5 = fraction1.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction1.abs();
        int int7 = fraction1.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        float float3 = fraction1.floatValue();
        int int4 = fraction1.getProperNumerator();
        int int5 = fraction1.intValue();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction1.pow(0);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction7);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((-34), (int) (byte) 1);
        java.lang.String str3 = fraction2.toProperString();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "-34" + "'", str3, "-34");
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction4.intValue();
        double double6 = fraction4.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 0, 1);
        boolean boolean11 = fraction9.equals((java.lang.Object) 2);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction9.multiplyBy(fraction16);
        int int18 = fraction4.compareTo(fraction9);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int22 = fraction21.getProperWhole();
        java.lang.String str23 = fraction21.toString();
        long long24 = fraction21.longValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.negate();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction9.multiplyBy(fraction21);
        long long27 = fraction21.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.3333333333333333d + "'", double6 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "52/1" + "'", str23, "52/1");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 52L + "'", long24 == 52L);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 52L + "'", long27 == 52L);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        boolean boolean6 = fraction3.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.subtract(fraction8);
        java.lang.String str10 = fraction8.toProperString();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction3.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction11.abs();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction11.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        boolean boolean6 = fraction3.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.subtract(fraction8);
        java.lang.String str10 = fraction8.toProperString();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction3.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean14 = fraction12.equals((java.lang.Object) '4');
        int int15 = fraction12.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction12.multiplyBy(fraction20);
        java.lang.String str22 = fraction21.toString();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        float float25 = fraction24.floatValue();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        int int31 = fraction29.intValue();
        int int32 = fraction29.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.reduce();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction24.add(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction23.multiplyBy(fraction24);
        double double36 = fraction23.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction21.multiplyBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean40 = fraction38.equals((java.lang.Object) '4');
        int int41 = fraction38.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.invert();
        int int43 = fraction42.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction21.multiplyBy(fraction42);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction21.negate();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        float float48 = fraction47.floatValue();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean51 = fraction49.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction53 = fraction49.multiplyBy(fraction52);
        int int54 = fraction52.intValue();
        int int55 = fraction52.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.reduce();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction47.add(fraction56);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction46.multiplyBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction59 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction61 = fraction59.subtract(fraction60);
        boolean boolean62 = fraction58.equals((java.lang.Object) fraction60);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction60.pow(52);
        java.lang.String str65 = fraction60.toProperString();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction60.negate();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction45.subtract(fraction60);
        org.apache.commons.lang3.math.Fraction fraction68 = fraction67.invert();
        org.apache.commons.lang3.math.Fraction fraction69 = fraction11.subtract(fraction67);
        org.apache.commons.lang3.math.Fraction fraction70 = fraction69.abs();
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int72 = fraction71.getNumerator();
        java.lang.String str73 = fraction71.toString();
        float float74 = fraction71.floatValue();
        org.apache.commons.lang3.math.Fraction fraction75 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction76 = org.apache.commons.lang3.math.Fraction.ONE;
        float float77 = fraction76.floatValue();
        org.apache.commons.lang3.math.Fraction fraction78 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean80 = fraction78.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction81 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction82 = fraction78.multiplyBy(fraction81);
        int int83 = fraction81.intValue();
        int int84 = fraction81.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction85 = fraction81.reduce();
        org.apache.commons.lang3.math.Fraction fraction86 = fraction76.add(fraction85);
        org.apache.commons.lang3.math.Fraction fraction87 = fraction75.multiplyBy(fraction76);
        org.apache.commons.lang3.math.Fraction fraction88 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction89 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction90 = fraction88.subtract(fraction89);
        boolean boolean91 = fraction87.equals((java.lang.Object) fraction89);
        org.apache.commons.lang3.math.Fraction fraction93 = fraction89.pow(52);
        int int94 = fraction89.getNumerator();
        boolean boolean95 = fraction71.equals((java.lang.Object) fraction89);
        double double96 = fraction71.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction97 = fraction70.add(fraction71);
        short short98 = fraction70.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1/3" + "'", str22, "1/3");
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 1.0f + "'", float25 == 1.0f);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.25d + "'", double36 == 0.25d);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 1.0f + "'", float48 == 1.0f);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1" + "'", str65, "1");
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "3/4" + "'", str73, "3/4");
        org.junit.Assert.assertTrue("'" + float74 + "' != '" + 0.75f + "'", float74 == 0.75f);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 1.0f + "'", float77 == 1.0f);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.75d + "'", double96 == 0.75d);
        org.junit.Assert.assertNotNull(fraction97);
        org.junit.Assert.assertTrue("'" + short98 + "' != '" + (short) 1 + "'", short98 == (short) 1);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((-17), 35);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        java.lang.String str4 = fraction2.toProperString();
        float float5 = fraction2.floatValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "-17/35" + "'", str4, "-17/35");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + (-0.4857143f) + "'", float5 == (-0.4857143f));
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        boolean boolean6 = fraction3.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.subtract(fraction8);
        java.lang.String str10 = fraction8.toProperString();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction3.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean14 = fraction12.equals((java.lang.Object) '4');
        int int15 = fraction12.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction12.multiplyBy(fraction20);
        java.lang.String str22 = fraction21.toString();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        float float25 = fraction24.floatValue();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        int int31 = fraction29.intValue();
        int int32 = fraction29.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.reduce();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction24.add(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction23.multiplyBy(fraction24);
        double double36 = fraction23.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction21.multiplyBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean40 = fraction38.equals((java.lang.Object) '4');
        int int41 = fraction38.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.invert();
        int int43 = fraction42.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction21.multiplyBy(fraction42);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction21.negate();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        float float48 = fraction47.floatValue();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean51 = fraction49.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction53 = fraction49.multiplyBy(fraction52);
        int int54 = fraction52.intValue();
        int int55 = fraction52.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.reduce();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction47.add(fraction56);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction46.multiplyBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction59 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction61 = fraction59.subtract(fraction60);
        boolean boolean62 = fraction58.equals((java.lang.Object) fraction60);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction60.pow(52);
        java.lang.String str65 = fraction60.toProperString();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction60.negate();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction45.subtract(fraction60);
        org.apache.commons.lang3.math.Fraction fraction68 = fraction67.invert();
        org.apache.commons.lang3.math.Fraction fraction69 = fraction11.subtract(fraction67);
        org.apache.commons.lang3.math.Fraction fraction70 = fraction69.abs();
        float float71 = fraction69.floatValue();
        byte byte72 = fraction69.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1/3" + "'", str22, "1/3");
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 1.0f + "'", float25 == 1.0f);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.25d + "'", double36 == 0.25d);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 1.0f + "'", float48 == 1.0f);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1" + "'", str65, "1");
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + float71 + "' != '" + 1.6666666f + "'", float71 == 1.6666666f);
        org.junit.Assert.assertTrue("'" + byte72 + "' != '" + (byte) 1 + "'", byte72 == (byte) 1);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(5, (int) (byte) 100);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 100L);
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.subtract(fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction2.equals((java.lang.Object) fraction5);
        boolean boolean8 = fraction5.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.subtract(fraction10);
        java.lang.String str12 = fraction10.toProperString();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction5.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction13.abs();
        int int15 = fraction14.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.reduce();
        int int17 = fraction16.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.negate();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction1.divideBy(fraction18);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1" + "'", str12, "1");
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean4 = fraction2.equals((java.lang.Object) '4');
        int int5 = fraction2.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = fraction2.multiplyBy(fraction10);
        java.lang.String str12 = fraction11.toString();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        double double26 = fraction13.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction11.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean30 = fraction28.equals((java.lang.Object) '4');
        int int31 = fraction28.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.invert();
        int int33 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction11.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction1.divideBy(fraction34);
        java.lang.String str36 = fraction1.toProperString();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction1.negate();
        double double38 = fraction37.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean42 = fraction40.equals((java.lang.Object) '4');
        int int43 = fraction40.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.invert();
        int int45 = fraction44.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction44.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction39.divideBy(fraction44);
        java.lang.String str49 = fraction48.toString();
        int int50 = fraction48.getProperWhole();
        long long51 = fraction48.longValue();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction37.multiplyBy(fraction48);
        int int53 = fraction48.getDenominator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1/3" + "'", str12, "1/3");
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.25d + "'", double26 == 0.25d);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4" + "'", str36, "4");
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-4.0d) + "'", double38 == (-4.0d));
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "3/4" + "'", str49, "3/4");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (byte) 10, (int) (byte) 53);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(110, 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean5 = fraction3.equals((java.lang.Object) '4');
        int int6 = fraction3.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction3.multiplyBy(fraction11);
        java.lang.String str13 = fraction12.toString();
        java.lang.String str14 = fraction12.toString();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean19 = fraction17.equals((java.lang.Object) '4');
        int int20 = fraction17.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean23 = fraction21.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.multiplyBy(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction17.multiplyBy(fraction25);
        java.lang.String str27 = fraction26.toString();
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        float float30 = fraction29.floatValue();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        int int36 = fraction34.intValue();
        int int37 = fraction34.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction34.reduce();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction29.add(fraction38);
        org.apache.commons.lang3.math.Fraction fraction40 = fraction28.multiplyBy(fraction29);
        double double41 = fraction28.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction26.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean45 = fraction43.equals((java.lang.Object) '4');
        int int46 = fraction43.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.invert();
        int int48 = fraction47.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction26.multiplyBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction16.multiplyBy(fraction49);
        int int51 = fraction15.compareTo(fraction16);
        double double52 = fraction16.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction2.subtract(fraction16);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1/3" + "'", str13, "1/3");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1/3" + "'", str14, "1/3");
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1/3" + "'", str27, "1/3");
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 1.0f + "'", float30 == 1.0f);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.25d + "'", double41 == 0.25d);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.25d + "'", double52 == 0.25d);
        org.junit.Assert.assertNotNull(fraction53);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        boolean boolean8 = fraction2.equals((java.lang.Object) fraction6);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction2.invert();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean13 = fraction11.equals((java.lang.Object) '4');
        int int14 = fraction11.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction11.multiplyBy(fraction19);
        java.lang.String str21 = fraction20.toString();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        float float24 = fraction23.floatValue();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        int int30 = fraction28.intValue();
        int int31 = fraction28.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.reduce();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction23.add(fraction32);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction22.multiplyBy(fraction23);
        double double35 = fraction22.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction20.multiplyBy(fraction22);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean39 = fraction37.equals((java.lang.Object) '4');
        int int40 = fraction37.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction37.invert();
        int int42 = fraction41.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction20.multiplyBy(fraction41);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction10.multiplyBy(fraction43);
        java.lang.String str45 = fraction44.toProperString();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction44.invert();
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean49 = fraction47.equals((java.lang.Object) '4');
        int int50 = fraction47.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean53 = fraction51.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction55 = fraction51.multiplyBy(fraction54);
        org.apache.commons.lang3.math.Fraction fraction56 = fraction47.multiplyBy(fraction55);
        java.lang.String str57 = fraction56.toString();
        java.lang.String str58 = fraction56.toString();
        org.apache.commons.lang3.math.Fraction fraction59 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE;
        float float61 = fraction60.floatValue();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction60.abs();
        int int63 = fraction62.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction56.add(fraction62);
        int int65 = fraction62.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction46.add(fraction62);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction66.negate();
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction69 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction70 = fraction68.subtract(fraction69);
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean73 = fraction71.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction75 = fraction71.multiplyBy(fraction74);
        boolean boolean76 = fraction70.equals((java.lang.Object) fraction74);
        org.apache.commons.lang3.math.Fraction fraction77 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction79 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction80 = fraction77.add(fraction79);
        org.apache.commons.lang3.math.Fraction fraction82 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction83 = fraction77.divideBy(fraction82);
        org.apache.commons.lang3.math.Fraction fraction85 = org.apache.commons.lang3.math.Fraction.getFraction("1/1");
        org.apache.commons.lang3.math.Fraction fraction86 = fraction82.subtract(fraction85);
        org.apache.commons.lang3.math.Fraction fraction87 = fraction74.divideBy(fraction86);
        org.apache.commons.lang3.math.Fraction fraction88 = fraction74.negate();
        java.lang.String str89 = fraction74.toProperString();
        org.apache.commons.lang3.math.Fraction fraction90 = fraction67.divideBy(fraction74);
        int int91 = fraction2.compareTo(fraction74);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1/3" + "'", str21, "1/3");
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 1.0f + "'", float24 == 1.0f);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.25d + "'", double35 == 0.25d);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1/12" + "'", str45, "1/12");
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1/3" + "'", str57, "1/3");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1/3" + "'", str58, "1/3");
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 1.0f + "'", float61 == 1.0f);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "1" + "'", str89, "1");
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        double double4 = fraction3.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) -1, (int) ' ', 2);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction8.invert();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction9.abs();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction3.add(fraction9);
        double double12 = fraction3.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean15 = fraction13.equals((java.lang.Object) '4');
        int int16 = fraction13.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.invert();
        int int18 = fraction17.getNumerator();
        float float19 = fraction17.floatValue();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int22 = fraction21.getProperNumerator();
        int int23 = fraction17.compareTo(fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction21.invert();
        int int25 = fraction24.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        float float28 = fraction27.floatValue();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        int int34 = fraction32.intValue();
        int int35 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction27.add(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction26.multiplyBy(fraction27);
        float float39 = fraction27.floatValue();
        int int40 = fraction27.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction43 = fraction41.subtract(fraction42);
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean45 = fraction41.equals((java.lang.Object) fraction44);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction41.pow((int) (byte) 1);
        int int48 = fraction41.intValue();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction49.subtract(fraction50);
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean54 = fraction52.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.multiplyBy(fraction55);
        boolean boolean57 = fraction51.equals((java.lang.Object) fraction55);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction41.multiplyBy(fraction55);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction41.negate();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction27.multiplyBy(fraction41);
        org.apache.commons.lang3.math.Fraction fraction61 = fraction24.divideBy(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction3.multiplyBy(fraction61);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.ZERO;
        int int64 = fraction63.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction3.subtract(fraction63);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 1.0f + "'", float19 == 1.0f);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 1.0f + "'", float28 == 1.0f);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 1.0f + "'", float39 == 1.0f);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(fraction65);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.abs();
        int int16 = fraction15.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction9.add(fraction15);
        int int18 = fraction17.getDenominator();
        int int19 = fraction17.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        int int3 = fraction1.intValue();
        float float4 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean7 = fraction5.equals((java.lang.Object) '4');
        int int8 = fraction5.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction5.multiplyBy(fraction13);
        java.lang.String str15 = fraction14.toString();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        float float18 = fraction17.floatValue();
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean21 = fraction19.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.multiplyBy(fraction22);
        int int24 = fraction22.intValue();
        int int25 = fraction22.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction17.add(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction16.multiplyBy(fraction17);
        double double29 = fraction16.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction14.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean33 = fraction31.equals((java.lang.Object) '4');
        int int34 = fraction31.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.invert();
        int int36 = fraction35.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction14.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction1.divideBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction1.abs();
        double double40 = fraction1.doubleValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1/3" + "'", str15, "1/3");
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 1.0f + "'", float18 == 1.0f);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.25d + "'", double29 == 0.25d);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(109, 1100);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 100, 52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction4 = fraction2.pow((int) (byte) -51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: overflow: mulPos");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction4.pow((-109));
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.pow((-51));
        byte byte9 = fraction6.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 1 + "'", byte9 == (byte) 1);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("4/25");
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(10.0d);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((-17), (int) (short) 100, (int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean9 = fraction7.equals((java.lang.Object) '4');
        int int10 = fraction7.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.invert();
        int int12 = fraction11.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction11.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction6.divideBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction5.subtract(fraction11);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction1.add(fraction5);
        long long18 = fraction5.longValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-27L) + "'", long18 == (-27L));
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 0, 3, (int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) (short) 100);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction3.add(fraction5);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean9 = fraction7.equals((java.lang.Object) '4');
        int int10 = fraction7.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction7.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.divideBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean22 = fraction20.equals((java.lang.Object) '4');
        int int23 = fraction20.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction20.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction29.divideBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction31.reduce();
        int int33 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction18.subtract(fraction32);
        boolean boolean35 = fraction5.equals((java.lang.Object) fraction34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction37 = fraction5.pow((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: overflow: mul");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.invert();
        int int41 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction40.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.negate();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction44.negate();
        java.lang.String str46 = fraction44.toString();
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-3));
        org.apache.commons.lang3.math.Fraction fraction49 = fraction44.subtract(fraction48);
        long long50 = fraction44.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1/1" + "'", str46, "-1/1");
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 10, (int) (byte) 100, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) 100.0f);
        int int6 = fraction5.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.divideBy(fraction5);
        long long8 = fraction5.longValue();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.abs();
        int int16 = fraction15.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction9.add(fraction15);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        float float19 = fraction18.floatValue();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction18.negate();
        float float21 = fraction20.floatValue();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction9.divideBy(fraction20);
        java.lang.Class<?> wildcardClass23 = fraction9.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 1.0f + "'", float19 == 1.0f);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + (-1.0f) + "'", float21 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        java.lang.String str35 = fraction34.toProperString();
        int int36 = fraction34.getProperWhole();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1/12" + "'", str35, "1/12");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.pow(1);
        int int8 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        float float11 = fraction10.floatValue();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        int int17 = fraction15.intValue();
        int int18 = fraction15.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.reduce();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction10.add(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction9.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.subtract(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction22.equals((java.lang.Object) fraction25);
        boolean boolean28 = fraction25.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.invert();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction21.divideBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction3.divideBy(fraction21);
        long long32 = fraction31.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 4L + "'", long32 == 4L);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 4, (int) (short) -152, (-109));
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be negative");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction6.intValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction8.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.multiplyBy(fraction11);
        int int13 = fraction11.intValue();
        int int14 = fraction11.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        int int24 = fraction21.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction25.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction27.invert();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction17.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction6.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction17.abs();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction1.multiplyBy(fraction17);
        java.lang.String str33 = fraction1.toProperString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "-1" + "'", str33, "-1");
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        int int1 = fraction0.getNumerator();
        double double2 = fraction0.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean7 = fraction5.equals((java.lang.Object) '4');
        int int8 = fraction5.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction5.multiplyBy(fraction13);
        java.lang.String str15 = fraction14.toString();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        float float18 = fraction17.floatValue();
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean21 = fraction19.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.multiplyBy(fraction22);
        int int24 = fraction22.intValue();
        int int25 = fraction22.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction17.add(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction16.multiplyBy(fraction17);
        double double29 = fraction16.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction14.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean33 = fraction31.equals((java.lang.Object) '4');
        int int34 = fraction31.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.invert();
        int int36 = fraction35.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction14.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction4.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction38.abs();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean42 = fraction40.equals((java.lang.Object) '4');
        int int43 = fraction40.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.invert();
        int int45 = fraction44.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction39.add(fraction44);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean49 = fraction47.equals((java.lang.Object) '4');
        int int50 = fraction47.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.invert();
        int int52 = fraction51.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean55 = fraction53.equals((java.lang.Object) '4');
        int int56 = fraction53.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction57 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean59 = fraction57.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction61 = fraction57.multiplyBy(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction53.multiplyBy(fraction61);
        java.lang.String str63 = fraction62.toString();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction51.multiplyBy(fraction62);
        org.apache.commons.lang3.math.Fraction fraction65 = fraction44.multiplyBy(fraction64);
        org.apache.commons.lang3.math.Fraction fraction66 = fraction3.subtract(fraction64);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.getFraction((-1.0d));
        org.apache.commons.lang3.math.Fraction fraction69 = fraction66.add(fraction68);
        org.apache.commons.lang3.math.Fraction fraction70 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean72 = fraction70.equals((java.lang.Object) '4');
        int int73 = fraction70.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean76 = fraction74.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction77 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction78 = fraction74.multiplyBy(fraction77);
        org.apache.commons.lang3.math.Fraction fraction79 = fraction70.multiplyBy(fraction78);
        org.apache.commons.lang3.math.Fraction fraction80 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction81 = org.apache.commons.lang3.math.Fraction.ONE;
        float float82 = fraction81.floatValue();
        boolean boolean83 = fraction80.equals((java.lang.Object) fraction81);
        long long84 = fraction81.longValue();
        int int85 = fraction70.compareTo(fraction81);
        org.apache.commons.lang3.math.Fraction fraction88 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction89 = fraction70.multiplyBy(fraction88);
        java.lang.String str90 = fraction70.toString();
        int int91 = fraction68.compareTo(fraction70);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.4d + "'", double2 == 0.4d);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1/3" + "'", str15, "1/3");
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 1.0f + "'", float18 == 1.0f);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.25d + "'", double29 == 0.25d);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1/3" + "'", str63, "1/3");
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertTrue("'" + float82 + "' != '" + 1.0f + "'", float82 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 1L + "'", long84 == 1L);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "1/1" + "'", str90, "1/1");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(3.0d);
        float float2 = fraction1.floatValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 3.0f + "'", float2 == 3.0f);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        int int3 = fraction2.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.pow(1);
        int int13 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction27.equals((java.lang.Object) fraction30);
        boolean boolean33 = fraction30.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.invert();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction26.divideBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction8.divideBy(fraction26);
        int int37 = fraction36.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction2.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean45 = fraction43.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE;
        float float47 = fraction46.floatValue();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction46.abs();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction43.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        float float52 = fraction51.floatValue();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        int int58 = fraction56.intValue();
        int int59 = fraction56.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction51.add(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction50.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction65 = fraction63.subtract(fraction64);
        boolean boolean66 = fraction62.equals((java.lang.Object) fraction64);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction43.add(fraction64);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean70 = fraction68.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction72 = fraction68.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction71.negate();
        org.apache.commons.lang3.math.Fraction fraction74 = fraction43.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction75 = fraction71.reduce();
        org.apache.commons.lang3.math.Fraction fraction76 = fraction42.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction77 = fraction36.add(fraction71);
        org.apache.commons.lang3.math.Fraction fraction78 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean80 = fraction78.equals((java.lang.Object) '4');
        int int81 = fraction78.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction82 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean84 = fraction82.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction85 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction86 = fraction82.multiplyBy(fraction85);
        org.apache.commons.lang3.math.Fraction fraction87 = fraction78.multiplyBy(fraction86);
        org.apache.commons.lang3.math.Fraction fraction88 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction89 = org.apache.commons.lang3.math.Fraction.ONE;
        float float90 = fraction89.floatValue();
        boolean boolean91 = fraction88.equals((java.lang.Object) fraction89);
        long long92 = fraction89.longValue();
        org.apache.commons.lang3.math.Fraction fraction93 = fraction89.negate();
        org.apache.commons.lang3.math.Fraction fraction94 = fraction78.divideBy(fraction93);
        org.apache.commons.lang3.math.Fraction fraction95 = fraction36.divideBy(fraction94);
        int int96 = fraction94.getNumerator();
        int int97 = fraction94.intValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 1.0f + "'", float47 == 1.0f);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 1.0f + "'", float52 == 1.0f);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertTrue("'" + float90 + "' != '" + 1.0f + "'", float90 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean4 = fraction2.equals((java.lang.Object) '4');
        int int5 = fraction2.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = fraction2.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction11.divideBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction13.reduce();
        boolean boolean15 = fraction1.equals((java.lang.Object) fraction14);
        long long16 = fraction14.longValue();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction14.abs();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.invert();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        int int3 = fraction1.intValue();
        float float4 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction7 = fraction6.invert();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.subtract(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction1.abs();
        int int10 = fraction1.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction0.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction20.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        float float24 = fraction23.floatValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction23.abs();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction20.divideBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        float float29 = fraction28.floatValue();
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean32 = fraction30.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.multiplyBy(fraction33);
        int int35 = fraction33.intValue();
        int int36 = fraction33.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.reduce();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction28.add(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction27.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.subtract(fraction41);
        boolean boolean43 = fraction39.equals((java.lang.Object) fraction41);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction20.add(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.negate();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction20.subtract(fraction48);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction19.subtract(fraction48);
        java.lang.String str54 = fraction53.toProperString();
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean57 = fraction55.equals((java.lang.Object) '4');
        int int58 = fraction55.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction59 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean61 = fraction59.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction63 = fraction59.multiplyBy(fraction62);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction55.multiplyBy(fraction63);
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean67 = fraction65.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction69 = fraction65.multiplyBy(fraction68);
        int int70 = fraction69.intValue();
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction72 = org.apache.commons.lang3.math.Fraction.ONE;
        float float73 = fraction72.floatValue();
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean76 = fraction74.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction77 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction78 = fraction74.multiplyBy(fraction77);
        int int79 = fraction77.intValue();
        int int80 = fraction77.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction81 = fraction77.reduce();
        org.apache.commons.lang3.math.Fraction fraction82 = fraction72.add(fraction81);
        org.apache.commons.lang3.math.Fraction fraction83 = fraction71.multiplyBy(fraction72);
        double double84 = fraction71.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction85 = fraction69.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction87 = fraction69.pow(0);
        org.apache.commons.lang3.math.Fraction fraction88 = fraction55.divideBy(fraction69);
        org.apache.commons.lang3.math.Fraction fraction89 = fraction53.subtract(fraction55);
        org.apache.commons.lang3.math.Fraction fraction90 = fraction89.reduce();
        java.lang.String str91 = fraction90.toProperString();
        byte byte92 = fraction90.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 1.0f + "'", float24 == 1.0f);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 1.0f + "'", float29 == 1.0f);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "-1" + "'", str54, "-1");
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertTrue("'" + float73 + "' != '" + 1.0f + "'", float73 == 1.0f);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.25d + "'", double84 == 0.25d);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "-2" + "'", str91, "-2");
        org.junit.Assert.assertTrue("'" + byte92 + "' != '" + (byte) -2 + "'", byte92 == (byte) -2);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.invert();
        int int41 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean45 = fraction43.equals((java.lang.Object) '4');
        int int46 = fraction43.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.invert();
        int int48 = fraction47.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean51 = fraction49.equals((java.lang.Object) '4');
        int int52 = fraction49.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction49.multiplyBy(fraction57);
        java.lang.String str59 = fraction58.toString();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction47.multiplyBy(fraction58);
        org.apache.commons.lang3.math.Fraction fraction61 = fraction40.multiplyBy(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean64 = fraction62.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction66 = fraction62.multiplyBy(fraction65);
        int int67 = fraction66.intValue();
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean70 = fraction68.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction72 = fraction68.multiplyBy(fraction71);
        int int73 = fraction71.intValue();
        int int74 = fraction71.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction75 = fraction71.reduce();
        org.apache.commons.lang3.math.Fraction fraction77 = fraction75.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction78 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean80 = fraction78.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction81 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction82 = fraction78.multiplyBy(fraction81);
        int int83 = fraction81.intValue();
        int int84 = fraction81.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction85 = fraction81.reduce();
        org.apache.commons.lang3.math.Fraction fraction87 = fraction85.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction88 = fraction87.invert();
        org.apache.commons.lang3.math.Fraction fraction89 = fraction77.multiplyBy(fraction87);
        org.apache.commons.lang3.math.Fraction fraction90 = fraction66.add(fraction77);
        org.apache.commons.lang3.math.Fraction fraction91 = fraction40.add(fraction90);
        java.lang.String str92 = fraction90.toString();
        long long93 = fraction90.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1/3" + "'", str59, "1/3");
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction87);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fraction91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "4/3" + "'", str92, "4/3");
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 1L + "'", long93 == 1L);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction4.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        int int14 = fraction12.intValue();
        int int15 = fraction12.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction7.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction6.multiplyBy(fraction7);
        double double19 = fraction6.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction4.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction20.negate();
        int int22 = fraction21.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.25d + "'", double19 == 0.25d);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 0, 2, (int) (byte) 100);
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean6 = fraction4.equals((java.lang.Object) '4');
        int int7 = fraction4.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction8.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = fraction4.multiplyBy(fraction12);
        java.lang.String str14 = fraction13.toString();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        float float17 = fraction16.floatValue();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        int int24 = fraction21.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction16.add(fraction25);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction15.multiplyBy(fraction16);
        double double28 = fraction15.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction13.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE;
        float float31 = fraction30.floatValue();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean34 = fraction32.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.multiplyBy(fraction35);
        int int37 = fraction35.intValue();
        int int38 = fraction35.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.reduce();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction30.add(fraction39);
        int int41 = fraction39.getProperWhole();
        boolean boolean42 = fraction29.equals((java.lang.Object) fraction39);
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 0, (int) (byte) 10);
        java.lang.String str46 = fraction45.toString();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction29.multiplyBy(fraction45);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean50 = fraction48.equals((java.lang.Object) '4');
        int int51 = fraction48.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean54 = fraction52.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.multiplyBy(fraction55);
        org.apache.commons.lang3.math.Fraction fraction57 = fraction48.multiplyBy(fraction56);
        java.lang.String str58 = fraction57.toString();
        java.lang.String str59 = fraction57.toString();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction57.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction57.negate();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction45.subtract(fraction61);
        int int63 = fraction45.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction45.reduce();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction3.add(fraction45);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1/3" + "'", str14, "1/3");
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 1.0f + "'", float17 == 1.0f);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.25d + "'", double28 == 0.25d);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 1.0f + "'", float31 == 1.0f);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "0/10" + "'", str46, "0/10");
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1/3" + "'", str58, "1/3");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "1/3" + "'", str59, "1/3");
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        long long5 = fraction0.longValue();
        boolean boolean7 = fraction0.equals((java.lang.Object) "");
        java.lang.String str8 = fraction0.toProperString();
        long long9 = fraction0.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1/3" + "'", str8, "1/3");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        java.lang.String str3 = fraction1.toString();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean6 = fraction4.equals((java.lang.Object) '4');
        int int7 = fraction4.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.invert();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction1.subtract(fraction8);
        java.lang.String str10 = fraction1.toProperString();
        byte byte11 = fraction1.byteValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "52/1" + "'", str3, "52/1");
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "52" + "'", str10, "52");
        org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 52 + "'", byte11 == (byte) 52);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) -1, (int) ' ', 2);
        int int4 = fraction3.intValue();
        int int5 = fraction3.intValue();
        float float6 = fraction3.floatValue();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-17) + "'", int4 == (-17));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-17) + "'", int5 == (-17));
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-17.0f) + "'", float6 == (-17.0f));
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        int int20 = fraction17.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction12.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction11.multiplyBy(fraction12);
        double double24 = fraction11.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction9.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction25.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction26.reduce();
        float float28 = fraction26.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.25d + "'", double24 == 0.25d);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 0.083333336f + "'", float28 == 0.083333336f);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 0, 3, (int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) (short) 100);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction3.add(fraction5);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean9 = fraction7.equals((java.lang.Object) '4');
        int int10 = fraction7.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction7.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.divideBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean22 = fraction20.equals((java.lang.Object) '4');
        int int23 = fraction20.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction20.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction29.divideBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction31.reduce();
        int int33 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction18.subtract(fraction32);
        boolean boolean35 = fraction5.equals((java.lang.Object) fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean42 = fraction40.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.multiplyBy(fraction43);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction36.multiplyBy(fraction44);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction47 = fraction45.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean50 = fraction48.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.multiplyBy(fraction51);
        int int53 = fraction51.intValue();
        double double54 = fraction51.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction55 = fraction47.divideBy(fraction51);
        int int56 = fraction51.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction51.reduce();
        boolean boolean58 = fraction5.equals((java.lang.Object) fraction57);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 1.0d + "'", double54 == 1.0d);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.add(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.abs();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean12 = fraction10.equals((java.lang.Object) '4');
        int int13 = fraction10.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction10.multiplyBy(fraction18);
        java.lang.String str20 = fraction19.toString();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean23 = fraction21.equals((java.lang.Object) '4');
        int int24 = fraction21.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.invert();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction25.invert();
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction25.subtract(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean34 = fraction32.equals((java.lang.Object) '4');
        int int35 = fraction32.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction32.multiplyBy(fraction40);
        java.lang.String str42 = fraction41.toString();
        java.lang.String str43 = fraction41.toString();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction30.add(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction19.divideBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean48 = fraction46.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction50 = fraction46.multiplyBy(fraction49);
        int int51 = fraction50.intValue();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        float float54 = fraction53.floatValue();
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean57 = fraction55.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction59 = fraction55.multiplyBy(fraction58);
        int int60 = fraction58.intValue();
        int int61 = fraction58.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.reduce();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction53.add(fraction62);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction52.multiplyBy(fraction53);
        double double65 = fraction52.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction50.multiplyBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction68 = fraction50.pow(0);
        int int69 = fraction50.getNumerator();
        boolean boolean70 = fraction19.equals((java.lang.Object) int69);
        org.apache.commons.lang3.math.Fraction fraction71 = fraction19.abs();
        org.apache.commons.lang3.math.Fraction fraction72 = fraction7.multiplyBy(fraction19);
        int int73 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction74 = fraction19.abs();
        java.lang.Class<?> wildcardClass75 = fraction19.getClass();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1/3" + "'", str20, "1/3");
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1/3" + "'", str42, "1/3");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1/3" + "'", str43, "1/3");
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 1.0f + "'", float54 == 1.0f);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.25d + "'", double65 == 0.25d);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        long long5 = fraction0.longValue();
        boolean boolean7 = fraction0.equals((java.lang.Object) "");
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.subtract(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction8.equals((java.lang.Object) fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.subtract(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.invert();
        int int17 = fraction8.compareTo(fraction14);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction14.pow(110);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        float float22 = fraction21.floatValue();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean25 = fraction23.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction27 = fraction23.multiplyBy(fraction26);
        int int28 = fraction26.intValue();
        int int29 = fraction26.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.reduce();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction21.add(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction20.multiplyBy(fraction21);
        int int33 = fraction14.compareTo(fraction21);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean37 = fraction35.equals((java.lang.Object) '4');
        int int38 = fraction35.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.invert();
        int int40 = fraction39.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction39.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction34.divideBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction14.divideBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction0.subtract(fraction34);
        org.apache.commons.lang3.math.Fraction fraction46 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction34.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + float22 + "' != '" + 1.0f + "'", float22 == 1.0f);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(1019, (int) (short) 52, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) 'a', (int) '#');
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction6 = fraction3.add(fraction5);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.divideBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction2.add(fraction9);
        int int11 = fraction9.getDenominator();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 4, (int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean5 = fraction3.equals((java.lang.Object) '4');
        int int6 = fraction3.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction3.multiplyBy(fraction11);
        java.lang.String str13 = fraction12.toString();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        double double27 = fraction14.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction12.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction28.reduce();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction29.abs();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        int int36 = fraction35.intValue();
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        float float39 = fraction38.floatValue();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean42 = fraction40.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.multiplyBy(fraction43);
        int int45 = fraction43.intValue();
        int int46 = fraction43.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.reduce();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction38.add(fraction47);
        org.apache.commons.lang3.math.Fraction fraction49 = fraction37.multiplyBy(fraction38);
        double double50 = fraction37.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction35.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction35.abs();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        float float54 = fraction53.floatValue();
        org.apache.commons.lang3.math.Fraction fraction55 = fraction53.abs();
        float float56 = fraction53.floatValue();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction52.add(fraction53);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction30.multiplyBy(fraction53);
        float float59 = fraction53.floatValue();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction2.divideBy(fraction53);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1/3" + "'", str13, "1/3");
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.25d + "'", double27 == 0.25d);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 1.0f + "'", float39 == 1.0f);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.25d + "'", double50 == 0.25d);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 1.0f + "'", float54 == 1.0f);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 1.0f + "'", float56 == 1.0f);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 1.0f + "'", float59 == 1.0f);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(0, 8, 110);
        int int4 = fraction3.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean13 = fraction11.equals((java.lang.Object) '4');
        int int14 = fraction11.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction15.invert();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.subtract(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean24 = fraction22.equals((java.lang.Object) '4');
        int int25 = fraction22.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction22.multiplyBy(fraction30);
        java.lang.String str32 = fraction31.toString();
        java.lang.String str33 = fraction31.toString();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction20.add(fraction31);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction9.divideBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        int int41 = fraction40.intValue();
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        int int50 = fraction48.intValue();
        int int51 = fraction48.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction43.add(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction42.multiplyBy(fraction43);
        double double55 = fraction42.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction40.multiplyBy(fraction42);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction40.pow(0);
        int int59 = fraction40.getNumerator();
        boolean boolean60 = fraction9.equals((java.lang.Object) int59);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction63 = fraction61.subtract(fraction62);
        float float64 = fraction62.floatValue();
        int int65 = fraction62.getProperNumerator();
        int int66 = fraction62.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction9.multiplyBy(fraction62);
        double double68 = fraction9.doubleValue();
        double double69 = fraction9.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction70 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean72 = fraction70.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction73 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction74 = fraction70.multiplyBy(fraction73);
        int int75 = fraction73.intValue();
        int int76 = fraction73.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction77 = fraction73.reduce();
        org.apache.commons.lang3.math.Fraction fraction79 = fraction77.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction80 = fraction79.invert();
        boolean boolean81 = fraction9.equals((java.lang.Object) fraction79);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1/3" + "'", str32, "1/3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1/3" + "'", str33, "1/3");
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.25d + "'", double55 == 0.25d);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 1.0f + "'", float64 == 1.0f);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.3333333333333333d + "'", double68 == 0.3333333333333333d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.3333333333333333d + "'", double69 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        byte byte7 = fraction3.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 1 + "'", byte7 == (byte) 1);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(35, (int) ' ');
        int int3 = fraction2.getProperWhole();
        float float4 = fraction2.floatValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.09375f + "'", float4 == 1.09375f);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction0.negate();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        int int11 = fraction10.intValue();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction10.abs();
        int int28 = fraction0.compareTo(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.invert();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction32 = fraction31.negate();
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.reduce();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction35.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction32.divideBy(fraction36);
        boolean boolean38 = fraction27.equals((java.lang.Object) fraction36);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        float float41 = fraction40.floatValue();
        boolean boolean42 = fraction39.equals((java.lang.Object) fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean45 = fraction43.equals((java.lang.Object) '4');
        int int46 = fraction43.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean49 = fraction47.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.multiplyBy(fraction50);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction43.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE;
        float float55 = fraction54.floatValue();
        boolean boolean56 = fraction53.equals((java.lang.Object) fraction54);
        long long57 = fraction54.longValue();
        int int58 = fraction43.compareTo(fraction54);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction43.multiplyBy(fraction61);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction40.multiplyBy(fraction43);
        int int64 = fraction40.getProperNumerator();
        float float65 = fraction40.floatValue();
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction67 = org.apache.commons.lang3.math.Fraction.ONE;
        float float68 = fraction67.floatValue();
        org.apache.commons.lang3.math.Fraction fraction69 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean71 = fraction69.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction72 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction73 = fraction69.multiplyBy(fraction72);
        int int74 = fraction72.intValue();
        int int75 = fraction72.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction76 = fraction72.reduce();
        org.apache.commons.lang3.math.Fraction fraction77 = fraction67.add(fraction76);
        org.apache.commons.lang3.math.Fraction fraction78 = fraction66.multiplyBy(fraction67);
        org.apache.commons.lang3.math.Fraction fraction79 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction80 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction81 = fraction79.subtract(fraction80);
        boolean boolean82 = fraction78.equals((java.lang.Object) fraction80);
        java.lang.Object obj83 = null;
        boolean boolean84 = fraction78.equals(obj83);
        org.apache.commons.lang3.math.Fraction fraction85 = fraction40.multiplyBy(fraction78);
        org.apache.commons.lang3.math.Fraction fraction86 = fraction27.add(fraction85);
        int int87 = fraction85.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 1.0f + "'", float41 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + float55 + "' != '" + 1.0f + "'", float55 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 1L + "'", long57 == 1L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 1.0f + "'", float65 == 1.0f);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertTrue("'" + float68 + "' != '" + 1.0f + "'", float68 == 1.0f);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.add(fraction7);
        int int9 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.invert();
        org.apache.commons.lang3.math.Fraction fraction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction12 = fraction8.divideBy(fraction11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The fraction must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(fraction10);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (byte) 4, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.invert();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.abs();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction5.divideBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.pow(1);
        int int22 = fraction17.intValue();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction13.divideBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction11.subtract(fraction17);
        boolean boolean26 = fraction4.equals((java.lang.Object) fraction17);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction27.multiplyBy(fraction35);
        java.lang.String str37 = fraction36.toString();
        int int38 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction4.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction40 = fraction4.negate();
        java.lang.Class<?> wildcardClass41 = fraction40.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1/3" + "'", str37, "1/3");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, (int) 'a');
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.negate();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(2, (int) (byte) 100, (int) (short) 10);
        org.apache.commons.lang3.math.Fraction fraction4 = fraction3.negate();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction5.subtract(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction8.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.multiplyBy(fraction11);
        boolean boolean13 = fraction7.equals((java.lang.Object) fraction11);
        java.lang.String str14 = fraction7.toString();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction3.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean18 = fraction16.equals((java.lang.Object) '4');
        int int19 = fraction16.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction20.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.multiplyBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction16.multiplyBy(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = fraction25.divideBy(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction27.reduce();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean31 = fraction29.equals((java.lang.Object) '4');
        int int32 = fraction29.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean35 = fraction33.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.multiplyBy(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction29.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction38.divideBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction40.reduce();
        int int42 = fraction41.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction27.subtract(fraction41);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction((-17), 35);
        int int47 = fraction27.compareTo(fraction46);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction7.add(fraction27);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "-1/4" + "'", str14, "-1/4");
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(fraction48);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((-17), (int) (short) 100, (int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean7 = fraction5.equals((java.lang.Object) '4');
        int int8 = fraction5.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.invert();
        int int10 = fraction9.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction13 = fraction4.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction3.subtract(fraction9);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 100, 52);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.add(fraction18);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        int int11 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction3.add(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction2.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.subtract(fraction16);
        boolean boolean18 = fraction14.equals((java.lang.Object) fraction16);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.pow(52);
        java.lang.String str21 = fraction16.toProperString();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction1.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction22.abs();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        int int29 = fraction28.intValue();
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean32 = fraction30.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.multiplyBy(fraction33);
        int int35 = fraction33.intValue();
        int int36 = fraction33.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.reduce();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction37.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean42 = fraction40.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.multiplyBy(fraction43);
        int int45 = fraction43.intValue();
        int int46 = fraction43.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.reduce();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction47.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction49.invert();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction39.multiplyBy(fraction49);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction28.add(fraction39);
        int int53 = fraction23.compareTo(fraction39);
        java.lang.Class<?> wildcardClass54 = fraction23.getClass();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction1.invert();
        java.lang.String str4 = fraction1.toString();
        int int5 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction1.negate();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction1.invert();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1/1" + "'", str4, "1/1");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.divideBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction11.reduce();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.getFraction((int) 'a', (int) (short) -1);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.subtract(fraction15);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.getReducedFraction(52, (int) '#');
        int int20 = fraction19.getDenominator();
        float float21 = fraction19.floatValue();
        int int22 = fraction12.compareTo(fraction19);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean25 = fraction23.equals((java.lang.Object) '4');
        int int26 = fraction23.getProperNumerator();
        double double27 = fraction23.doubleValue();
        int int28 = fraction23.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction23.abs();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction12.divideBy(fraction23);
        float float31 = fraction30.floatValue();
        java.lang.String str32 = fraction30.toProperString();
        byte byte33 = fraction30.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 35 + "'", int20 == 35);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 1.4857143f + "'", float21 == 1.4857143f);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 1.3333334f + "'", float31 == 1.3333334f);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1 1/3" + "'", str32, "1 1/3");
        org.junit.Assert.assertTrue("'" + byte33 + "' != '" + (byte) 1 + "'", byte33 == (byte) 1);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10);
        java.lang.String str3 = fraction2.toProperString();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1/10" + "'", str3, "1/10");
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.pow((int) (byte) 1);
        int int7 = fraction0.intValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.subtract(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        boolean boolean16 = fraction10.equals((java.lang.Object) fraction14);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction0.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction17.abs();
        java.lang.String str19 = fraction17.toString();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "3/4" + "'", str19, "3/4");
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction4.invert();
        float float6 = fraction5.floatValue();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        int int12 = fraction10.intValue();
        int int13 = fraction10.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        boolean boolean17 = fraction14.equals((java.lang.Object) fraction15);
        long long18 = fraction15.longValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction10.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction22 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction22.invert();
        boolean boolean26 = fraction10.equals((java.lang.Object) fraction22);
        double double27 = fraction10.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction10.invert();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction5.divideBy(fraction28);
        float float30 = fraction29.floatValue();
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (byte) 1, 19);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction29.subtract(fraction33);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 1.0d + "'", double27 == 1.0d);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 1.0f + "'", float30 == 1.0f);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        boolean boolean3 = fraction0.equals((java.lang.Object) fraction1);
        org.apache.commons.lang3.math.Fraction fraction4 = fraction1.negate();
        java.lang.Object obj5 = null;
        boolean boolean6 = fraction4.equals(obj5);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        int int9 = fraction7.intValue();
        int int10 = fraction7.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction11.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction2.add(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction17.subtract(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean21 = fraction17.equals((java.lang.Object) fraction20);
        boolean boolean23 = fraction20.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction26 = fraction24.subtract(fraction25);
        java.lang.String str27 = fraction25.toProperString();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction20.multiplyBy(fraction25);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction2.add(fraction28);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        long long5 = fraction0.longValue();
        java.lang.String str6 = fraction0.toString();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean9 = fraction7.equals((java.lang.Object) '4');
        int int10 = fraction7.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.invert();
        int int12 = fraction11.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean15 = fraction13.equals((java.lang.Object) '4');
        int int16 = fraction13.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = fraction13.multiplyBy(fraction21);
        java.lang.String str23 = fraction22.toString();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction11.multiplyBy(fraction22);
        boolean boolean25 = fraction0.equals((java.lang.Object) fraction11);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        float float28 = fraction27.floatValue();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        int int34 = fraction32.intValue();
        int int35 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction27.add(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction26.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction41 = fraction39.subtract(fraction40);
        boolean boolean42 = fraction38.equals((java.lang.Object) fraction40);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.pow(52);
        int int45 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction40.reduce();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction11.multiplyBy(fraction40);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction47.invert();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction48.invert();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction48.pow((-4));
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "1/3" + "'", str6, "1/3");
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1/3" + "'", str23, "1/3");
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 1.0f + "'", float28 == 1.0f);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction51);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        int int6 = fraction3.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.reduce();
        java.lang.String str8 = fraction7.toProperString();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int12 = fraction11.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean15 = fraction13.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        float float17 = fraction16.floatValue();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction13.divideBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction11.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int23 = fraction22.getProperWhole();
        java.lang.String str24 = fraction22.toString();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction11.divideBy(fraction22);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction9.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction7.subtract(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean30 = fraction28.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.multiplyBy(fraction31);
        int int33 = fraction31.intValue();
        int int34 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.reduce();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction38 = fraction36.subtract(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean40 = fraction36.equals((java.lang.Object) fraction39);
        int int41 = fraction36.intValue();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.divideBy(fraction36);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction36.invert();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction27.subtract(fraction43);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction27.reduce();
        double double46 = fraction27.doubleValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 1.0f + "'", float17 == 1.0f);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "52/1" + "'", str24, "52/1");
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-19.8d) + "'", double46 == (-19.8d));
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        long long5 = fraction4.longValue();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction8.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.multiplyBy(fraction11);
        int int13 = fraction11.intValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.pow(1);
        int int16 = fraction11.intValue();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction11.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction7.divideBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction4.divideBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction11.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 110.0f);
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(100, (int) 'a', (int) ' ');
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        int int11 = fraction9.intValue();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.pow(1);
        int int14 = fraction9.intValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction5.divideBy(fraction9);
        boolean boolean17 = fraction3.equals((java.lang.Object) fraction5);
        java.lang.String str18 = fraction3.toProperString();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "103 1/32" + "'", str18, "103 1/32");
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 0, (int) (byte) 1, 10);
        org.apache.commons.lang3.math.Fraction fraction4 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean9 = fraction7.equals((java.lang.Object) '4');
        int int10 = fraction7.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction7.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.divideBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction18.reduce();
        boolean boolean20 = fraction6.equals((java.lang.Object) fraction19);
        int int21 = fraction19.getProperWhole();
        long long22 = fraction19.longValue();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction3.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean26 = fraction24.equals((java.lang.Object) '4');
        int int27 = fraction24.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.invert();
        int int29 = fraction28.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction28.pow((int) (byte) 4);
        boolean boolean32 = fraction23.equals((java.lang.Object) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction33 = fraction23.negate();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fraction33);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 100, (int) (byte) 4, 2);
        int int4 = fraction3.intValue();
        int int5 = fraction3.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 102 + "'", int4 == 102);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((-2), 152, 32);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_FIFTH;
        int int1 = fraction0.getDenominator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.add(fraction7);
        int int9 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.negate();
        int int11 = fraction8.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.add(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.abs();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean12 = fraction10.equals((java.lang.Object) '4');
        int int13 = fraction10.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction10.multiplyBy(fraction18);
        java.lang.String str20 = fraction19.toString();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean23 = fraction21.equals((java.lang.Object) '4');
        int int24 = fraction21.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.invert();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction25.invert();
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction25.subtract(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean34 = fraction32.equals((java.lang.Object) '4');
        int int35 = fraction32.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction32.multiplyBy(fraction40);
        java.lang.String str42 = fraction41.toString();
        java.lang.String str43 = fraction41.toString();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction30.add(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction19.divideBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean48 = fraction46.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction50 = fraction46.multiplyBy(fraction49);
        int int51 = fraction50.intValue();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        float float54 = fraction53.floatValue();
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean57 = fraction55.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction59 = fraction55.multiplyBy(fraction58);
        int int60 = fraction58.intValue();
        int int61 = fraction58.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.reduce();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction53.add(fraction62);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction52.multiplyBy(fraction53);
        double double65 = fraction52.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction50.multiplyBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction68 = fraction50.pow(0);
        int int69 = fraction50.getNumerator();
        boolean boolean70 = fraction19.equals((java.lang.Object) int69);
        org.apache.commons.lang3.math.Fraction fraction71 = fraction19.abs();
        org.apache.commons.lang3.math.Fraction fraction72 = fraction7.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction72.invert();
        long long74 = fraction72.longValue();
        java.lang.Class<?> wildcardClass75 = fraction72.getClass();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1/3" + "'", str20, "1/3");
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "1/3" + "'", str42, "1/3");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1/3" + "'", str43, "1/3");
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 1.0f + "'", float54 == 1.0f);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.25d + "'", double65 == 0.25d);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.abs();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.subtract(fraction27);
        boolean boolean29 = fraction25.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction6.add(fraction27);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction34.negate();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction6.subtract(fraction34);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction3.divideBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction37.abs();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean42 = fraction40.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction43.abs();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction40.divideBy(fraction43);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        float float49 = fraction48.floatValue();
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean52 = fraction50.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction54 = fraction50.multiplyBy(fraction53);
        int int55 = fraction53.intValue();
        int int56 = fraction53.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.reduce();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction48.add(fraction57);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction47.multiplyBy(fraction48);
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction62 = fraction60.subtract(fraction61);
        boolean boolean63 = fraction59.equals((java.lang.Object) fraction61);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction40.add(fraction61);
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean67 = fraction65.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction69 = fraction65.multiplyBy(fraction68);
        org.apache.commons.lang3.math.Fraction fraction70 = fraction68.negate();
        org.apache.commons.lang3.math.Fraction fraction71 = fraction40.subtract(fraction68);
        int int72 = fraction37.compareTo(fraction68);
        org.apache.commons.lang3.math.Fraction fraction73 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction75 = fraction73.subtract(fraction74);
        org.apache.commons.lang3.math.Fraction fraction76 = fraction74.invert();
        org.apache.commons.lang3.math.Fraction fraction77 = fraction74.invert();
        org.apache.commons.lang3.math.Fraction fraction78 = fraction37.divideBy(fraction74);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 1.0f + "'", float49 == 1.0f);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        double double6 = fraction3.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.abs();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction11.divideBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        float float20 = fraction19.floatValue();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean23 = fraction21.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.multiplyBy(fraction24);
        int int26 = fraction24.intValue();
        int int27 = fraction24.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.reduce();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction19.add(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction18.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction31.subtract(fraction32);
        boolean boolean34 = fraction30.equals((java.lang.Object) fraction32);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction11.add(fraction32);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction39.negate();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction11.subtract(fraction39);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction39.reduce();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction10.subtract(fraction39);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction47 = fraction39.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction3.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.pow((int) (byte) 100);
        int int51 = fraction50.getProperWhole();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 1.0f + "'", float20 == 1.0f);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 10, 35, (int) (short) 100);
        org.apache.commons.lang3.math.Fraction fraction4 = fraction3.reduce();
        short short5 = fraction4.shortValue();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) 10 + "'", short5 == (short) 10);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.pow(4);
        int int10 = fraction3.getDenominator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((-4), (-3), (int) (short) -17);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be negative");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 11);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        int int3 = fraction2.getDenominator();
        int int4 = fraction2.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.pow((int) (byte) 53);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        int int24 = fraction19.intValue();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        int int30 = fraction28.intValue();
        int int31 = fraction28.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.reduce();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction32.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.invert();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction19.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction2.add(fraction19);
        int int38 = fraction37.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction37.invert();
        short short40 = fraction39.shortValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + short40 + "' != '" + (short) 4 + "'", short40 == (short) 4);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        int int8 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction0.add(fraction9);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.pow(0);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean15 = fraction13.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.multiplyBy(fraction16);
        int int18 = fraction16.intValue();
        int int19 = fraction16.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction22.invert();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.invert();
        int int25 = fraction9.compareTo(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean29 = fraction27.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.multiplyBy(fraction30);
        int int32 = fraction30.intValue();
        int int33 = fraction30.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.reduce();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean39 = fraction35.equals((java.lang.Object) fraction38);
        int int40 = fraction35.intValue();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction34.divideBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction35.pow((int) (byte) 1);
        boolean boolean44 = fraction9.equals((java.lang.Object) fraction35);
        long long45 = fraction35.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.invert();
        int int3 = fraction1.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean13 = fraction11.equals((java.lang.Object) '4');
        int int14 = fraction11.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction15.invert();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.subtract(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean24 = fraction22.equals((java.lang.Object) '4');
        int int25 = fraction22.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction22.multiplyBy(fraction30);
        java.lang.String str32 = fraction31.toString();
        java.lang.String str33 = fraction31.toString();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction20.add(fraction31);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction9.divideBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        int int41 = fraction40.intValue();
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        int int50 = fraction48.intValue();
        int int51 = fraction48.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction43.add(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction42.multiplyBy(fraction43);
        double double55 = fraction42.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction40.multiplyBy(fraction42);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction40.pow(0);
        int int59 = fraction40.getNumerator();
        boolean boolean60 = fraction9.equals((java.lang.Object) int59);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction63 = fraction61.subtract(fraction62);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction62.invert();
        java.lang.String str65 = fraction62.toString();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction62.invert();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction62.negate();
        org.apache.commons.lang3.math.Fraction fraction68 = fraction9.divideBy(fraction67);
        org.apache.commons.lang3.math.Fraction fraction72 = org.apache.commons.lang3.math.Fraction.getFraction((int) '#', 32, (int) (byte) 10);
        boolean boolean73 = fraction67.equals((java.lang.Object) fraction72);
        int int74 = fraction67.getProperWhole();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1/3" + "'", str32, "1/3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1/3" + "'", str33, "1/3");
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.25d + "'", double55 == 0.25d);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "1/1" + "'", str65, "1/1");
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        float float3 = fraction2.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.FOUR_FIFTHS;
        double double5 = fraction4.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction4.pow((int) (short) 3);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction2.add(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.subtract(fraction10);
        int int12 = fraction10.intValue();
        java.lang.String str13 = fraction10.toProperString();
        long long14 = fraction10.longValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction8.divideBy(fraction10);
        java.lang.String str16 = fraction8.toProperString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.33333334f + "'", float3 == 0.33333334f);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.8d + "'", double5 == 0.8d);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1" + "'", str13, "1");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "317/375" + "'", str16, "317/375");
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction0.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean22 = fraction20.equals((java.lang.Object) '4');
        int int23 = fraction20.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction20.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction29.divideBy(fraction30);
        int int32 = fraction0.compareTo(fraction31);
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean35 = fraction33.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.multiplyBy(fraction36);
        int int38 = fraction36.intValue();
        int int39 = fraction36.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.reduce();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.pow((int) (byte) -1);
        boolean boolean43 = fraction31.equals((java.lang.Object) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE;
        float float46 = fraction45.floatValue();
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean49 = fraction47.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.multiplyBy(fraction50);
        int int52 = fraction50.intValue();
        int int53 = fraction50.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction54 = fraction50.reduce();
        org.apache.commons.lang3.math.Fraction fraction55 = fraction45.add(fraction54);
        org.apache.commons.lang3.math.Fraction fraction56 = fraction44.multiplyBy(fraction45);
        org.apache.commons.lang3.math.Fraction fraction57 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction59 = fraction57.subtract(fraction58);
        boolean boolean60 = fraction56.equals((java.lang.Object) fraction58);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.pow(52);
        int int63 = fraction31.compareTo(fraction58);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction58.abs();
        int int65 = fraction64.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 1.0f + "'", float46 == 1.0f);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.negate();
        float float3 = fraction2.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.TWO_THIRDS;
        boolean boolean5 = fraction2.equals((java.lang.Object) fraction4);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.subtract(fraction7);
        int int9 = fraction7.intValue();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction2.divideBy(fraction7);
        long long11 = fraction2.longValue();
        double double12 = fraction2.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction2.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + (-1.0f) + "'", float3 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-1.0d) + "'", double12 == (-1.0d));
        org.junit.Assert.assertNotNull(fraction13);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 100.0f);
        int int2 = fraction1.getProperWhole();
        java.lang.String str3 = fraction1.toProperString();
        int int4 = fraction1.getNumerator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "100" + "'", str3, "100");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("35/45");
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction2.invert();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean8 = fraction6.equals((java.lang.Object) '4');
        int int9 = fraction6.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction6.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        float float18 = fraction17.floatValue();
        boolean boolean19 = fraction16.equals((java.lang.Object) fraction17);
        long long20 = fraction17.longValue();
        int int21 = fraction6.compareTo(fraction17);
        org.apache.commons.lang3.math.Fraction fraction22 = fraction17.abs();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.getFraction((-17), 35);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction27.multiplyBy(fraction35);
        java.lang.String str37 = fraction36.toString();
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        float float40 = fraction39.floatValue();
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean43 = fraction41.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction45 = fraction41.multiplyBy(fraction44);
        int int46 = fraction44.intValue();
        int int47 = fraction44.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction44.reduce();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction39.add(fraction48);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction38.multiplyBy(fraction39);
        double double51 = fraction38.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction36.multiplyBy(fraction38);
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean55 = fraction53.equals((java.lang.Object) '4');
        int int56 = fraction53.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.invert();
        int int58 = fraction57.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction59 = fraction36.multiplyBy(fraction57);
        org.apache.commons.lang3.math.Fraction fraction60 = fraction26.multiplyBy(fraction59);
        org.apache.commons.lang3.math.Fraction fraction61 = fraction60.abs();
        java.lang.String str62 = fraction61.toProperString();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction61.negate();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction25.add(fraction63);
        boolean boolean65 = fraction22.equals((java.lang.Object) fraction25);
        boolean boolean66 = fraction2.equals((java.lang.Object) boolean65);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 1.0f + "'", float18 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1/3" + "'", str37, "1/3");
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 1.0f + "'", float40 == 1.0f);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.25d + "'", double51 == 0.25d);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "1/12" + "'", str62, "1/12");
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        int int6 = fraction3.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.reduce();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction9.invert();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.invert();
        int int12 = fraction9.getProperNumerator();
        float float13 = fraction9.floatValue();
        float float14 = fraction9.floatValue();
        double double15 = fraction9.doubleValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.invert();
        int int41 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction40.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.negate();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction44.negate();
        byte byte46 = fraction44.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + byte46 + "' != '" + (byte) -1 + "'", byte46 == (byte) -1);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        java.lang.String str3 = fraction1.toProperString();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.pow(10);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction1.reduce();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "1/3" + "'", str3, "1/3");
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(8, 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(2, (int) (short) 1, 4);
        org.apache.commons.lang3.math.Fraction fraction4 = fraction3.invert();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        int int8 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction0.add(fraction9);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.pow(0);
        float float13 = fraction12.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.invert();
        long long3 = fraction2.longValue();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction4.subtract(fraction5);
        float float7 = fraction5.floatValue();
        int int8 = fraction5.getProperNumerator();
        int int9 = fraction5.intValue();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction5.invert();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction2.subtract(fraction5);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction14 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction14.invert();
        double double18 = fraction17.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction5.subtract(fraction17);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int21 = fraction20.getNumerator();
        java.lang.String str22 = fraction20.toString();
        float float23 = fraction20.floatValue();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        float float26 = fraction25.floatValue();
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean29 = fraction27.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.multiplyBy(fraction30);
        int int32 = fraction30.intValue();
        int int33 = fraction30.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.reduce();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction25.add(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction24.multiplyBy(fraction25);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = fraction37.subtract(fraction38);
        boolean boolean40 = fraction36.equals((java.lang.Object) fraction38);
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.pow(52);
        int int43 = fraction38.getNumerator();
        boolean boolean44 = fraction20.equals((java.lang.Object) fraction38);
        int int45 = fraction38.getProperNumerator();
        java.lang.String str46 = fraction38.toString();
        int int47 = fraction5.compareTo(fraction38);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction5.abs();
        byte byte49 = fraction5.byteValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 4L + "'", long3 == 4L);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 3.0d + "'", double18 == 3.0d);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "3/4" + "'", str22, "3/4");
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 0.75f + "'", float23 == 0.75f);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + 1.0f + "'", float26 == 1.0f);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "1/1" + "'", str46, "1/1");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) 1 + "'", byte49 == (byte) 1);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 43, 52);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction1.invert();
        java.lang.String str4 = fraction1.toString();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.invert();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction1.negate();
        java.lang.String str7 = fraction1.toProperString();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.negate();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction8.abs();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1/1" + "'", str4, "1/1");
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(5, (-1));
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction4.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        int int14 = fraction12.intValue();
        int int15 = fraction12.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction7.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction6.multiplyBy(fraction7);
        double double19 = fraction6.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction4.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction4.abs();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        float float23 = fraction22.floatValue();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.abs();
        float float25 = fraction22.floatValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction21.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.getFraction(52, 3, 110);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction26.subtract(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction26.invert();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.25d + "'", double19 == 0.25d);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 1.0f + "'", float23 == 1.0f);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 1.0f + "'", float25 == 1.0f);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        int int20 = fraction17.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction12.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction11.multiplyBy(fraction12);
        double double24 = fraction11.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction9.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction25.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction26.reduce();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction27.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.25d + "'", double24 == 0.25d);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        int int8 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction0.add(fraction9);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.pow(0);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean15 = fraction13.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.multiplyBy(fraction16);
        int int18 = fraction16.intValue();
        int int19 = fraction16.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction22.invert();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.invert();
        int int25 = fraction9.compareTo(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean29 = fraction27.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.multiplyBy(fraction30);
        int int32 = fraction30.intValue();
        int int33 = fraction30.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.reduce();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean39 = fraction35.equals((java.lang.Object) fraction38);
        int int40 = fraction35.intValue();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction34.divideBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction35.pow((int) (byte) 1);
        boolean boolean44 = fraction9.equals((java.lang.Object) fraction35);
        int int45 = fraction35.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 3 + "'", int45 == 3);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((-17), 35);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        int int4 = fraction3.getProperWhole();
        java.lang.String str5 = fraction3.toProperString();
        int int6 = fraction3.getDenominator();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "-17/35" + "'", str5, "-17/35");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 35 + "'", int6 == 35);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction11.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.getFraction((-17), 35);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean23 = fraction21.equals((java.lang.Object) '4');
        int int24 = fraction21.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction21.multiplyBy(fraction29);
        java.lang.String str31 = fraction30.toString();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        float float34 = fraction33.floatValue();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean37 = fraction35.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.multiplyBy(fraction38);
        int int40 = fraction38.intValue();
        int int41 = fraction38.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.reduce();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction33.add(fraction42);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction32.multiplyBy(fraction33);
        double double45 = fraction32.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction30.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean49 = fraction47.equals((java.lang.Object) '4');
        int int50 = fraction47.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.invert();
        int int52 = fraction51.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction30.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction20.multiplyBy(fraction53);
        org.apache.commons.lang3.math.Fraction fraction55 = fraction54.abs();
        java.lang.String str56 = fraction55.toProperString();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction55.negate();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction19.add(fraction57);
        boolean boolean59 = fraction16.equals((java.lang.Object) fraction19);
        int int60 = fraction16.intValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1/3" + "'", str31, "1/3");
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 1.0f + "'", float34 == 1.0f);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.25d + "'", double45 == 0.25d);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "1/12" + "'", str56, "1/12");
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction4.reduce();
        float float6 = fraction5.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 17, (int) '#', 1019);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int6 = fraction5.getProperWhole();
        java.lang.String str7 = fraction5.toString();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean10 = fraction8.equals((java.lang.Object) '4');
        int int11 = fraction8.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.invert();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction5.subtract(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction5.negate();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction3.divideBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean18 = fraction16.equals((java.lang.Object) '4');
        int int19 = fraction16.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction20.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.multiplyBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction16.multiplyBy(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        float float28 = fraction27.floatValue();
        boolean boolean29 = fraction26.equals((java.lang.Object) fraction27);
        long long30 = fraction27.longValue();
        int int31 = fraction16.compareTo(fraction27);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction27.abs();
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean35 = fraction33.equals((java.lang.Object) '4');
        int int36 = fraction33.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean39 = fraction37.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction41 = fraction37.multiplyBy(fraction40);
        org.apache.commons.lang3.math.Fraction fraction42 = fraction33.multiplyBy(fraction41);
        java.lang.String str43 = fraction42.toString();
        java.lang.String str44 = fraction42.toString();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction42.reduce();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction42.negate();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction46.negate();
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean50 = fraction48.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        float float52 = fraction51.floatValue();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction51.abs();
        org.apache.commons.lang3.math.Fraction fraction54 = fraction48.divideBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        float float57 = fraction56.floatValue();
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean60 = fraction58.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.multiplyBy(fraction61);
        int int63 = fraction61.intValue();
        int int64 = fraction61.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction61.reduce();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction56.add(fraction65);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction55.multiplyBy(fraction56);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction69 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction70 = fraction68.subtract(fraction69);
        boolean boolean71 = fraction67.equals((java.lang.Object) fraction69);
        org.apache.commons.lang3.math.Fraction fraction72 = fraction48.add(fraction69);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction75 = fraction48.pow(3);
        float float76 = fraction48.floatValue();
        org.apache.commons.lang3.math.Fraction fraction77 = fraction46.add(fraction48);
        int int78 = fraction46.getProperWhole();
        int int79 = fraction32.compareTo(fraction46);
        int int80 = fraction15.compareTo(fraction32);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "52/1" + "'", str7, "52/1");
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 1.0f + "'", float28 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 1L + "'", long30 == 1L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1/3" + "'", str43, "1/3");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "1/3" + "'", str44, "1/3");
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 1.0f + "'", float52 == 1.0f);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 1.0f + "'", float57 == 1.0f);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertTrue("'" + float76 + "' != '" + 0.33333334f + "'", float76 == 0.33333334f);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.pow((int) (byte) 1);
        int int7 = fraction0.intValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 52, 330);
        org.apache.commons.lang3.math.Fraction fraction11 = fraction0.divideBy(fraction10);
        int int12 = fraction0.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        float float3 = fraction1.floatValue();
        int int4 = fraction1.getProperNumerator();
        int int5 = fraction1.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction1.invert();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        float float11 = fraction10.floatValue();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction10.abs();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction7.divideBy(fraction10);
        java.lang.String str14 = fraction10.toProperString();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction10.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction19.negate();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction10.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction23.abs();
        boolean boolean26 = fraction1.equals((java.lang.Object) fraction23);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1" + "'", str14, "1");
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/4");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean4 = fraction2.equals((java.lang.Object) '4');
        int int5 = fraction2.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.invert();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction6.invert();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.subtract(fraction11);
        int int13 = fraction1.compareTo(fraction6);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        double double20 = fraction17.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        float float29 = fraction28.floatValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction28.abs();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction25.divideBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        float float34 = fraction33.floatValue();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean37 = fraction35.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.multiplyBy(fraction38);
        int int40 = fraction38.intValue();
        int int41 = fraction38.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.reduce();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction33.add(fraction42);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction32.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction47 = fraction45.subtract(fraction46);
        boolean boolean48 = fraction44.equals((java.lang.Object) fraction46);
        org.apache.commons.lang3.math.Fraction fraction49 = fraction25.add(fraction46);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean52 = fraction50.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction54 = fraction50.multiplyBy(fraction53);
        org.apache.commons.lang3.math.Fraction fraction55 = fraction53.negate();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction25.subtract(fraction53);
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.reduce();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction24.subtract(fraction53);
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction61 = fraction53.divideBy(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction17.divideBy(fraction60);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean65 = fraction63.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction67 = fraction63.multiplyBy(fraction66);
        int int68 = fraction67.intValue();
        double double69 = fraction67.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction67.invert();
        org.apache.commons.lang3.math.Fraction fraction71 = fraction17.add(fraction70);
        org.apache.commons.lang3.math.Fraction fraction72 = fraction1.subtract(fraction70);
        int int73 = fraction72.getDenominator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 1.0f + "'", float29 == 1.0f);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 1.0f + "'", float34 == 1.0f);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.3333333333333333d + "'", double69 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 4 + "'", int73 == 4);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(100.0d);
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.invert();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((-2), (int) (byte) -109);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        int int8 = fraction7.intValue();
        double double9 = fraction7.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction7.invert();
        boolean boolean11 = fraction2.equals((java.lang.Object) fraction10);
        org.apache.commons.lang3.math.Fraction fraction13 = fraction2.pow((-2));
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction27.equals((java.lang.Object) fraction30);
        boolean boolean33 = fraction30.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.invert();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction26.divideBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction35.negate();
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.getFraction((-109), 20);
        boolean boolean40 = fraction36.equals((java.lang.Object) 20);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction13.add(fraction36);
        org.apache.commons.lang3.math.Fraction fraction42 = fraction36.invert();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.3333333333333333d + "'", double9 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        int int2 = fraction1.getDenominator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(3, (int) (short) 100);
        float float3 = fraction2.floatValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.03f + "'", float3 == 0.03f);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        int int6 = fraction3.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.reduce();
        java.lang.String str8 = fraction7.toProperString();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int12 = fraction11.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean15 = fraction13.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        float float17 = fraction16.floatValue();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction13.divideBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction11.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int23 = fraction22.getProperWhole();
        java.lang.String str24 = fraction22.toString();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction11.divideBy(fraction22);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction9.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction7.subtract(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean30 = fraction28.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.multiplyBy(fraction31);
        int int33 = fraction31.intValue();
        int int34 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.reduce();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction38 = fraction36.subtract(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean40 = fraction36.equals((java.lang.Object) fraction39);
        int int41 = fraction36.intValue();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.divideBy(fraction36);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction36.invert();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction27.subtract(fraction43);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction27.reduce();
        java.lang.Class<?> wildcardClass46 = fraction45.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "1" + "'", str8, "1");
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 1.0f + "'", float17 == 1.0f);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "52/1" + "'", str24, "52/1");
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.abs();
        int int16 = fraction15.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction9.add(fraction15);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        float float19 = fraction18.floatValue();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction18.negate();
        float float21 = fraction20.floatValue();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction9.divideBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction9.invert();
        byte byte24 = fraction23.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 1.0f + "'", float19 == 1.0f);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + (-1.0f) + "'", float21 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 3 + "'", byte24 == (byte) 3);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.invert();
        int int41 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction40.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.negate();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction47 = fraction46.negate();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction50 = fraction49.reduce();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction50.reduce();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction47.divideBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction53 = fraction44.divideBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction53.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int1 = fraction0.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int4 = fraction3.getProperWhole();
        java.lang.String str5 = fraction3.toString();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean8 = fraction6.equals((java.lang.Object) '4');
        int int9 = fraction6.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.invert();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction3.subtract(fraction10);
        long long12 = fraction11.longValue();
        boolean boolean13 = fraction0.equals((java.lang.Object) fraction11);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction0.negate();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.pow((int) (short) -1);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "52/1" + "'", str5, "52/1");
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 51L + "'", long12 == 51L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction16);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.add(fraction2);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction5);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.getFraction("1/1");
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.subtract(fraction8);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        int int17 = fraction15.intValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.pow(1);
        int int20 = fraction15.intValue();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction11.divideBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction5.subtract(fraction15);
        int int24 = fraction15.intValue();
        int int25 = fraction15.intValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        long long3 = fraction1.longValue();
        double double4 = fraction1.doubleValue();
        float float5 = fraction1.floatValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 52L + "'", long3 == 52L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 52.0d + "'", double4 == 52.0d);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 52.0f + "'", float5 == 52.0f);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(104, 104);
        int int3 = fraction2.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction2.pow(4);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 104 + "'", int3 == 104);
        org.junit.Assert.assertNotNull(fraction5);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int2 = fraction1.getProperNumerator();
        float float3 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE;
        float float5 = fraction4.floatValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        int int11 = fraction9.intValue();
        int int12 = fraction9.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction4.add(fraction13);
        int int15 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getFraction(2, (int) (byte) 100, (int) (short) 10);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction16.multiplyBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = fraction1.add(fraction20);
        java.lang.String str23 = fraction20.toString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + (-1.0f) + "'", float3 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 1.0f + "'", float5 == 1.0f);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "120/10" + "'", str23, "120/10");
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 10, (int) ' ');
        int int3 = fraction2.getNumerator();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.divideBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        int int17 = fraction15.intValue();
        double double18 = fraction15.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction11.divideBy(fraction15);
        int int20 = fraction15.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction15.abs();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean25 = fraction23.equals((java.lang.Object) '4');
        int int26 = fraction23.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction23.invert();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction23.negate();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        int int34 = fraction33.intValue();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        float float37 = fraction36.floatValue();
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean40 = fraction38.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.multiplyBy(fraction41);
        int int43 = fraction41.intValue();
        int int44 = fraction41.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction41.reduce();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction36.add(fraction45);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction35.multiplyBy(fraction36);
        double double48 = fraction35.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction33.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction33.abs();
        int int51 = fraction23.compareTo(fraction50);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction50.invert();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction22.multiplyBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean56 = fraction54.equals((java.lang.Object) '4');
        int int57 = fraction54.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean60 = fraction58.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.multiplyBy(fraction61);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction54.multiplyBy(fraction62);
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE;
        float float66 = fraction65.floatValue();
        boolean boolean67 = fraction64.equals((java.lang.Object) fraction65);
        long long68 = fraction65.longValue();
        org.apache.commons.lang3.math.Fraction fraction69 = fraction65.negate();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction54.divideBy(fraction69);
        org.apache.commons.lang3.math.Fraction fraction71 = fraction53.add(fraction69);
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 100, 1);
        org.apache.commons.lang3.math.Fraction fraction75 = fraction74.negate();
        org.apache.commons.lang3.math.Fraction fraction76 = fraction53.add(fraction74);
        long long77 = fraction74.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 1.0f + "'", float37 == 1.0f);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.25d + "'", double48 == 0.25d);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 1.0f + "'", float66 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 1L + "'", long68 == 1L);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 100L + "'", long77 == 100L);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        java.lang.String str35 = fraction34.toProperString();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction34.invert();
        short short37 = fraction34.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1/12" + "'", str35, "1/12");
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + short37 + "' != '" + (short) 0 + "'", short37 == (short) 0);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((-2), (int) (byte) -109);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((-34), 1);
        int int6 = fraction2.compareTo(fraction5);
        int int7 = fraction5.getProperWhole();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-34) + "'", int7 == (-34));
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        int int3 = fraction2.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.pow(1);
        int int13 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction27.equals((java.lang.Object) fraction30);
        boolean boolean33 = fraction30.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.invert();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction26.divideBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction8.divideBy(fraction26);
        int int37 = fraction36.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction2.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean45 = fraction43.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE;
        float float47 = fraction46.floatValue();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction46.abs();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction43.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        float float52 = fraction51.floatValue();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        int int58 = fraction56.intValue();
        int int59 = fraction56.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction51.add(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction50.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction65 = fraction63.subtract(fraction64);
        boolean boolean66 = fraction62.equals((java.lang.Object) fraction64);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction43.add(fraction64);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean70 = fraction68.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction72 = fraction68.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction71.negate();
        org.apache.commons.lang3.math.Fraction fraction74 = fraction43.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction75 = fraction71.reduce();
        org.apache.commons.lang3.math.Fraction fraction76 = fraction42.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction77 = fraction36.add(fraction71);
        int int78 = fraction71.getProperNumerator();
        java.lang.String str79 = fraction71.toProperString();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 1.0f + "'", float47 == 1.0f);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 1.0f + "'", float52 == 1.0f);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "1" + "'", str79, "1");
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction0.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction28.negate();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction0.subtract(fraction28);
        java.lang.String str32 = fraction0.toString();
        int int33 = fraction0.getProperWhole();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1/3" + "'", str32, "1/3");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) -17, 100);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.invert();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int5 = fraction4.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.abs();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction13 = fraction4.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, (-17));
        org.apache.commons.lang3.math.Fraction fraction18 = fraction17.negate();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction18.negate();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction13.add(fraction18);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction1.add(fraction20);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 2, 20736, (int) (byte) 43);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("5/3");
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        int int3 = fraction2.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.pow(1);
        int int13 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction27.equals((java.lang.Object) fraction30);
        boolean boolean33 = fraction30.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.invert();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction26.divideBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction8.divideBy(fraction26);
        int int37 = fraction36.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction2.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean45 = fraction43.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE;
        float float47 = fraction46.floatValue();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction46.abs();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction43.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        float float52 = fraction51.floatValue();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        int int58 = fraction56.intValue();
        int int59 = fraction56.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction51.add(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction50.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction65 = fraction63.subtract(fraction64);
        boolean boolean66 = fraction62.equals((java.lang.Object) fraction64);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction43.add(fraction64);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean70 = fraction68.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction72 = fraction68.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction71.negate();
        org.apache.commons.lang3.math.Fraction fraction74 = fraction43.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction75 = fraction71.reduce();
        org.apache.commons.lang3.math.Fraction fraction76 = fraction42.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction77 = fraction36.add(fraction71);
        org.apache.commons.lang3.math.Fraction fraction78 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction79 = org.apache.commons.lang3.math.Fraction.ONE;
        float float80 = fraction79.floatValue();
        org.apache.commons.lang3.math.Fraction fraction81 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean83 = fraction81.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction84 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction85 = fraction81.multiplyBy(fraction84);
        int int86 = fraction84.intValue();
        int int87 = fraction84.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction88 = fraction84.reduce();
        org.apache.commons.lang3.math.Fraction fraction89 = fraction79.add(fraction88);
        org.apache.commons.lang3.math.Fraction fraction90 = fraction78.multiplyBy(fraction79);
        org.apache.commons.lang3.math.Fraction fraction92 = fraction79.pow((int) (short) 1);
        java.lang.String str93 = fraction79.toString();
        org.apache.commons.lang3.math.Fraction fraction94 = fraction79.negate();
        org.apache.commons.lang3.math.Fraction fraction95 = fraction77.divideBy(fraction94);
        double double96 = fraction77.doubleValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + float47 + "' != '" + 1.0f + "'", float47 == 1.0f);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 1.0f + "'", float52 == 1.0f);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertTrue("'" + float80 + "' != '" + 1.0f + "'", float80 == 1.0f);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(fraction84);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fraction92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "1/1" + "'", str93, "1/1");
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 5.0d + "'", double96 == 5.0d);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("120/10");
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        float float7 = fraction6.floatValue();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.divideBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int13 = fraction12.getProperWhole();
        java.lang.String str14 = fraction12.toString();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction1.divideBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean18 = fraction16.equals((java.lang.Object) '4');
        int int19 = fraction16.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.invert();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction20.invert();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction20.subtract(fraction25);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction15.subtract(fraction20);
        int int28 = fraction15.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction15.pow(2);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean37 = fraction35.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        float float39 = fraction38.floatValue();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction38.abs();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction35.divideBy(fraction38);
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        int int50 = fraction48.intValue();
        int int51 = fraction48.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction43.add(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction42.multiplyBy(fraction43);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction55.subtract(fraction56);
        boolean boolean58 = fraction54.equals((java.lang.Object) fraction56);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction35.add(fraction56);
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean62 = fraction60.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction64 = fraction60.multiplyBy(fraction63);
        org.apache.commons.lang3.math.Fraction fraction65 = fraction63.negate();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction35.subtract(fraction63);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction63.reduce();
        org.apache.commons.lang3.math.Fraction fraction68 = fraction34.subtract(fraction63);
        org.apache.commons.lang3.math.Fraction fraction69 = fraction15.subtract(fraction68);
        int int70 = fraction69.getDenominator();
        java.lang.String str71 = fraction69.toProperString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "52/1" + "'", str14, "52/1");
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 1.0f + "'", float39 == 1.0f);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 35 + "'", int70 == 35);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "25/35" + "'", str71, "25/35");
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        float float6 = fraction3.floatValue();
        int int7 = fraction3.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean10 = fraction8.equals((java.lang.Object) '4');
        int int11 = fraction8.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.invert();
        int int13 = fraction12.getNumerator();
        float float14 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int17 = fraction16.getProperNumerator();
        int int18 = fraction12.compareTo(fraction16);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction3.divideBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction19.abs();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.getFraction((double) (short) -1);
        long long23 = fraction22.longValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction22.pow(10);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 10, (int) (byte) 10, 1);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean32 = fraction30.equals((java.lang.Object) '4');
        int int33 = fraction30.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean36 = fraction34.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction38 = fraction34.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction30.multiplyBy(fraction38);
        java.lang.String str40 = fraction39.toString();
        java.lang.String str41 = fraction39.toString();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction39.reduce();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction29.subtract(fraction39);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 4, (int) (byte) 4, (int) 'a');
        org.apache.commons.lang3.math.Fraction fraction48 = fraction43.divideBy(fraction47);
        boolean boolean49 = fraction22.equals((java.lang.Object) fraction47);
        long long50 = fraction22.longValue();
        int int51 = fraction20.compareTo(fraction22);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1/3" + "'", str40, "1/3");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "1/3" + "'", str41, "1/3");
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 110, (int) (short) 2, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (byte) -3, 81);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.pow(1);
        int int10 = fraction5.intValue();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction1.divideBy(fraction5);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction5.pow(8);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction14);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 100.0f);
        int int2 = fraction1.getProperWhole();
        byte byte3 = fraction1.byteValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + byte3 + "' != '" + (byte) 100 + "'", byte3 == (byte) 100);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction12.abs();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction12.abs();
        int int16 = fraction12.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.add(fraction2);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction0.pow(2);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.reduce();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        int int12 = fraction10.intValue();
        int int13 = fraction10.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.reduce();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.subtract(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction15.equals((java.lang.Object) fraction18);
        int int20 = fraction15.intValue();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction14.divideBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction22 = fraction0.subtract(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        int int27 = fraction26.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.invert();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction14.subtract(fraction26);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction29.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 110 + "'", int27 == 110);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        float float6 = fraction3.floatValue();
        short short7 = fraction3.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertTrue("'" + short7 + "' != '" + (short) 1 + "'", short7 == (short) 1);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        int int5 = fraction4.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction4.negate();
        java.lang.String str7 = fraction4.toProperString();
        byte byte8 = fraction4.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 1 + "'", byte8 == (byte) 1);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) 'a', 152);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        int int11 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction3.add(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction2.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.subtract(fraction16);
        boolean boolean18 = fraction14.equals((java.lang.Object) fraction16);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.pow(52);
        java.lang.String str21 = fraction16.toProperString();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction1.multiplyBy(fraction16);
        java.lang.String str23 = fraction16.toProperString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1" + "'", str23, "1");
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        float float2 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.pow(52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        int int11 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.subtract(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction13.equals((java.lang.Object) fraction16);
        int int18 = fraction13.intValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction12.divideBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction4.subtract(fraction13);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        int int3 = fraction2.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.pow(1);
        int int13 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction27.equals((java.lang.Object) fraction30);
        boolean boolean33 = fraction30.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.invert();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction26.divideBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction8.divideBy(fraction26);
        int int37 = fraction36.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction2.subtract(fraction36);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.getFraction((-1.0d));
        org.apache.commons.lang3.math.Fraction fraction41 = fraction40.reduce();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.abs();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 10, (int) (byte) 10, 1);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean49 = fraction47.equals((java.lang.Object) '4');
        int int50 = fraction47.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean53 = fraction51.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction55 = fraction51.multiplyBy(fraction54);
        org.apache.commons.lang3.math.Fraction fraction56 = fraction47.multiplyBy(fraction55);
        java.lang.String str57 = fraction56.toString();
        java.lang.String str58 = fraction56.toString();
        org.apache.commons.lang3.math.Fraction fraction59 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction46.subtract(fraction56);
        int int61 = fraction40.compareTo(fraction46);
        java.lang.String str62 = fraction40.toString();
        int int63 = fraction38.compareTo(fraction40);
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 2, 32);
        int int67 = fraction38.compareTo(fraction66);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "1/3" + "'", str57, "1/3");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "1/3" + "'", str58, "1/3");
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "-1/1" + "'", str62, "-1/1");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.invert();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.abs();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction5.divideBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.pow(1);
        int int22 = fraction17.intValue();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction13.divideBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction11.subtract(fraction17);
        boolean boolean26 = fraction4.equals((java.lang.Object) fraction17);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.getFraction("110");
        org.apache.commons.lang3.math.Fraction fraction29 = fraction28.reduce();
        java.lang.String str30 = fraction28.toString();
        int int31 = fraction17.compareTo(fraction28);
        int int32 = fraction28.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, (int) 'a');
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.subtract(fraction36);
        int int38 = fraction35.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction28.add(fraction35);
        int int40 = fraction39.intValue();
        int int41 = fraction39.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "110/1" + "'", str30, "110/1");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 110 + "'", int32 == 110);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 110 + "'", int40 == 110);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction0.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean22 = fraction20.equals((java.lang.Object) '4');
        int int23 = fraction20.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction20.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction29.divideBy(fraction30);
        int int32 = fraction0.compareTo(fraction31);
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean35 = fraction33.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.multiplyBy(fraction36);
        int int38 = fraction36.intValue();
        int int39 = fraction36.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.reduce();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.pow((int) (byte) -1);
        boolean boolean43 = fraction31.equals((java.lang.Object) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction31.invert();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction46.invert();
        long long48 = fraction47.longValue();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean51 = fraction49.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction53 = fraction49.multiplyBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction52.negate();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction52.pow(4);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction47.divideBy(fraction58);
        org.apache.commons.lang3.math.Fraction fraction60 = fraction31.add(fraction47);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        int int62 = fraction61.getNumerator();
        double double63 = fraction61.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction61.abs();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction61.pow((int) (short) 10);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction47.subtract(fraction66);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 4L + "'", long48 == 4L);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.4d + "'", double63 == 0.4d);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int3 = fraction2.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.abs();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction4.divideBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction11 = fraction2.multiplyBy(fraction4);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int14 = fraction13.getProperWhole();
        java.lang.String str15 = fraction13.toString();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction2.divideBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction0.multiplyBy(fraction2);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction0.negate();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction21 = fraction20.abs();
        int int22 = fraction20.getNumerator();
        int int23 = fraction20.getDenominator();
        int int24 = fraction18.compareTo(fraction20);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "52/1" + "'", str15, "52/1");
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        boolean boolean8 = fraction2.equals((java.lang.Object) fraction6);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.add(fraction11);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction15 = fraction9.divideBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.getFraction("1/1");
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.subtract(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction6.divideBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction6.negate();
        java.lang.String str21 = fraction6.toProperString();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int24 = fraction23.getProperWhole();
        int int25 = fraction23.intValue();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        float float28 = fraction27.floatValue();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        int int34 = fraction32.intValue();
        int int35 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction27.add(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction26.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction26.reduce();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean43 = fraction41.equals((java.lang.Object) '4');
        int int44 = fraction41.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction41.multiplyBy(fraction49);
        java.lang.String str51 = fraction50.toString();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        float float54 = fraction53.floatValue();
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean57 = fraction55.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction59 = fraction55.multiplyBy(fraction58);
        int int60 = fraction58.intValue();
        int int61 = fraction58.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.reduce();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction53.add(fraction62);
        org.apache.commons.lang3.math.Fraction fraction64 = fraction52.multiplyBy(fraction53);
        double double65 = fraction52.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction50.multiplyBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction67 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean69 = fraction67.equals((java.lang.Object) '4');
        int int70 = fraction67.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction71 = fraction67.invert();
        int int72 = fraction71.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction73 = fraction50.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction74 = fraction40.multiplyBy(fraction73);
        org.apache.commons.lang3.math.Fraction fraction75 = fraction74.abs();
        org.apache.commons.lang3.math.Fraction fraction76 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean78 = fraction76.equals((java.lang.Object) '4');
        int int79 = fraction76.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction80 = fraction76.invert();
        int int81 = fraction80.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction82 = fraction75.add(fraction80);
        org.apache.commons.lang3.math.Fraction fraction83 = fraction80.abs();
        org.apache.commons.lang3.math.Fraction fraction84 = fraction80.negate();
        org.apache.commons.lang3.math.Fraction fraction85 = fraction26.add(fraction84);
        boolean boolean86 = fraction23.equals((java.lang.Object) fraction84);
        java.lang.String str87 = fraction23.toProperString();
        double double88 = fraction23.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction89 = fraction6.multiplyBy(fraction23);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 1.0f + "'", float28 == 1.0f);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "1/3" + "'", str51, "1/3");
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + float54 + "' != '" + 1.0f + "'", float54 == 1.0f);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.25d + "'", double65 == 0.25d);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(fraction84);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "52" + "'", str87, "52");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 52.0d + "'", double88 == 52.0d);
        org.junit.Assert.assertNotNull(fraction89);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        int int9 = fraction7.intValue();
        int int10 = fraction7.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction11.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction2.add(fraction15);
        java.lang.String str17 = fraction16.toProperString();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean20 = fraction18.equals((java.lang.Object) '4');
        int int21 = fraction18.getProperNumerator();
        boolean boolean22 = fraction16.equals((java.lang.Object) fraction18);
        double double23 = fraction18.doubleValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1 1/3" + "'", str17, "1 1/3");
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(2, 100);
        java.lang.Class<?> wildcardClass3 = fraction2.getClass();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        int int20 = fraction17.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction12.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction11.multiplyBy(fraction12);
        double double24 = fraction11.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction9.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction25.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction26.abs();
        double double28 = fraction27.doubleValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.25d + "'", double24 == 0.25d);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.08333333333333333d + "'", double28 == 0.08333333333333333d);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        int int34 = fraction0.compareTo(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction0.abs();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        int int3 = fraction2.getDenominator();
        int int4 = fraction2.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.pow((int) (byte) 53);
        java.lang.String str7 = fraction6.toProperString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.abs();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction12.divideBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        float float21 = fraction20.floatValue();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean24 = fraction22.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.multiplyBy(fraction25);
        int int27 = fraction25.intValue();
        int int28 = fraction25.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.reduce();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction20.add(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction19.multiplyBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction34 = fraction32.subtract(fraction33);
        boolean boolean35 = fraction31.equals((java.lang.Object) fraction33);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction12.add(fraction33);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean39 = fraction37.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction41 = fraction37.multiplyBy(fraction40);
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.negate();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction12.subtract(fraction40);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.reduce();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction11.subtract(fraction40);
        int int46 = fraction6.compareTo(fraction45);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "0" + "'", str7, "0");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 1.0f + "'", float21 == 1.0f);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int17 = fraction16.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction11.add(fraction16);
        int int20 = fraction11.getProperNumerator();
        int int21 = fraction11.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, (-1));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.negate();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean8 = fraction6.equals((java.lang.Object) '4');
        int int9 = fraction6.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction6.multiplyBy(fraction14);
        java.lang.String str16 = fraction15.toString();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        float float19 = fraction18.floatValue();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction20.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.multiplyBy(fraction23);
        int int25 = fraction23.intValue();
        int int26 = fraction23.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction23.reduce();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction18.add(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction17.multiplyBy(fraction18);
        double double30 = fraction17.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction15.multiplyBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean34 = fraction32.equals((java.lang.Object) '4');
        int int35 = fraction32.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.invert();
        int int37 = fraction36.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction15.multiplyBy(fraction36);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction5.multiplyBy(fraction38);
        org.apache.commons.lang3.math.Fraction fraction40 = fraction39.abs();
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean43 = fraction41.equals((java.lang.Object) '4');
        int int44 = fraction41.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction41.invert();
        int int46 = fraction45.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction40.add(fraction45);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction45.abs();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.negate();
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction52 = fraction51.negate();
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction55 = fraction54.reduce();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction55.reduce();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction52.divideBy(fraction56);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction49.divideBy(fraction57);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction4.add(fraction49);
        org.apache.commons.lang3.math.Fraction fraction60 = fraction49.invert();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1/3" + "'", str16, "1/3");
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 1.0f + "'", float19 == 1.0f);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.25d + "'", double30 == 0.25d);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        int int6 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction5.pow(2);
        float float9 = fraction5.floatValue();
        java.lang.String str10 = fraction5.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean13 = fraction11.equals((java.lang.Object) '4');
        int int14 = fraction11.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction11.multiplyBy(fraction19);
        int int21 = fraction20.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.negate();
        int int23 = fraction20.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction5.add(fraction20);
        int int25 = fraction20.intValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + (-0.33333334f) + "'", float9 == (-0.33333334f));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "-1/3" + "'", str10, "-1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(4.0d);
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(52.0d);
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        int int8 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction10.subtract(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction10.equals((java.lang.Object) fraction13);
        int int15 = fraction10.intValue();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction9.divideBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction1.subtract(fraction16);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean22 = fraction20.equals((java.lang.Object) '4');
        int int23 = fraction20.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction20.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction31 = fraction29.divideBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction31.reduce();
        boolean boolean33 = fraction19.equals((java.lang.Object) fraction32);
        float float34 = fraction32.floatValue();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction32.invert();
        boolean boolean36 = fraction16.equals((java.lang.Object) fraction35);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.abs();
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        boolean boolean42 = fraction37.equals((java.lang.Object) (byte) 1);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 1.3333334f + "'", float34 == 1.3333334f);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, 32);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 27, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.add(fraction2);
        double double4 = fraction0.doubleValue();
        int int5 = fraction0.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int8 = fraction7.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction7.add(fraction13);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.negate();
        java.lang.String str16 = fraction13.toProperString();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction0.add(fraction13);
        long long18 = fraction0.longValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.4d + "'", double4 == 0.4d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1/3" + "'", str16, "1/3");
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (short) 0);
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        float float3 = fraction2.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction4.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction4.invert();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        float float11 = fraction10.floatValue();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction10.abs();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction7.divideBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.pow(1);
        int int24 = fraction19.intValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction15.divideBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction13.subtract(fraction19);
        boolean boolean28 = fraction6.equals((java.lang.Object) fraction19);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean31 = fraction29.equals((java.lang.Object) '4');
        int int32 = fraction29.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean35 = fraction33.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.multiplyBy(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction29.multiplyBy(fraction37);
        java.lang.String str39 = fraction38.toString();
        int int40 = fraction38.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction6.subtract(fraction38);
        double double42 = fraction41.doubleValue();
        java.lang.String str43 = fraction41.toString();
        java.lang.String str44 = fraction41.toProperString();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean47 = fraction45.equals((java.lang.Object) '4');
        int int48 = fraction45.getProperNumerator();
        double double49 = fraction45.doubleValue();
        int int50 = fraction45.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction45.abs();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean54 = fraction52.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.multiplyBy(fraction55);
        int int57 = fraction55.intValue();
        int int58 = fraction55.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction59 = fraction55.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction59.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction59.pow((int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE;
        float float66 = fraction65.floatValue();
        org.apache.commons.lang3.math.Fraction fraction67 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean69 = fraction67.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction70 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction71 = fraction67.multiplyBy(fraction70);
        int int72 = fraction70.intValue();
        int int73 = fraction70.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction74 = fraction70.reduce();
        org.apache.commons.lang3.math.Fraction fraction75 = fraction65.add(fraction74);
        org.apache.commons.lang3.math.Fraction fraction76 = fraction64.multiplyBy(fraction65);
        double double77 = fraction64.doubleValue();
        long long78 = fraction64.longValue();
        org.apache.commons.lang3.math.Fraction fraction79 = fraction59.add(fraction64);
        int int80 = fraction64.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction81 = fraction45.multiplyBy(fraction64);
        org.apache.commons.lang3.math.Fraction fraction82 = fraction64.reduce();
        int int83 = fraction41.compareTo(fraction64);
        org.apache.commons.lang3.math.Fraction fraction84 = fraction1.divideBy(fraction64);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "1/3" + "'", str39, "1/3");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.6666666666666666d + "'", double42 == 0.6666666666666666d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "2/3" + "'", str43, "2/3");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "2/3" + "'", str44, "2/3");
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 1.0d + "'", double49 == 1.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + float66 + "' != '" + 1.0f + "'", float66 == 1.0f);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.25d + "'", double77 == 0.25d);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(fraction84);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(32, (-4));
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        int int8 = fraction6.intValue();
        int int9 = fraction6.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.reduce();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction1.add(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction0.multiplyBy(fraction1);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.subtract(fraction14);
        boolean boolean16 = fraction12.equals((java.lang.Object) fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.pow(52);
        java.lang.String str19 = fraction14.toProperString();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction14.negate();
        java.lang.String str21 = fraction20.toProperString();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.abs();
        int int23 = fraction22.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1" + "'", str19, "1");
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "-1" + "'", str21, "-1");
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 97, (int) (short) -17);
        java.lang.Class<?> wildcardClass3 = fraction2.getClass();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 0, 1);
        boolean boolean4 = fraction2.equals((java.lang.Object) 2);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction2.multiplyBy(fraction9);
        float float11 = fraction9.floatValue();
        int int12 = fraction9.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.33333334f + "'", float11 == 0.33333334f);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.invert();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.pow((int) (short) 3);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.getFraction((-1.0d));
        org.apache.commons.lang3.math.Fraction fraction7 = fraction6.reduce();
        int int8 = fraction6.intValue();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction6.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction4.add(fraction9);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.abs();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.subtract(fraction27);
        boolean boolean29 = fraction25.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction6.add(fraction27);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction34.negate();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction6.subtract(fraction34);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction3.divideBy(fraction37);
        java.lang.Class<?> wildcardClass39 = fraction38.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        java.lang.String str7 = fraction3.toProperString();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction3.reduce();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction12.negate();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction3.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.pow(1);
        int int26 = fraction21.intValue();
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        float float29 = fraction28.floatValue();
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean32 = fraction30.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.multiplyBy(fraction33);
        int int35 = fraction33.intValue();
        int int36 = fraction33.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.reduce();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction28.add(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction27.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.subtract(fraction41);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean44 = fraction40.equals((java.lang.Object) fraction43);
        boolean boolean46 = fraction43.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.invert();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction39.divideBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction49 = fraction21.divideBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        float float52 = fraction51.floatValue();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        int int58 = fraction56.intValue();
        int int59 = fraction56.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.reduce();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction51.add(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction50.multiplyBy(fraction51);
        float float63 = fraction51.floatValue();
        int int64 = fraction51.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction67 = fraction65.subtract(fraction66);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean69 = fraction65.equals((java.lang.Object) fraction68);
        org.apache.commons.lang3.math.Fraction fraction71 = fraction65.pow((int) (byte) 1);
        int int72 = fraction65.intValue();
        org.apache.commons.lang3.math.Fraction fraction73 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction75 = fraction73.subtract(fraction74);
        org.apache.commons.lang3.math.Fraction fraction76 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean78 = fraction76.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction79 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction80 = fraction76.multiplyBy(fraction79);
        boolean boolean81 = fraction75.equals((java.lang.Object) fraction79);
        org.apache.commons.lang3.math.Fraction fraction82 = fraction65.multiplyBy(fraction79);
        org.apache.commons.lang3.math.Fraction fraction83 = fraction65.negate();
        org.apache.commons.lang3.math.Fraction fraction84 = fraction51.multiplyBy(fraction65);
        org.apache.commons.lang3.math.Fraction fraction85 = fraction49.divideBy(fraction84);
        org.apache.commons.lang3.math.Fraction fraction86 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int87 = fraction86.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction88 = fraction86.abs();
        org.apache.commons.lang3.math.Fraction fraction89 = fraction84.subtract(fraction86);
        org.apache.commons.lang3.math.Fraction fraction90 = fraction3.multiplyBy(fraction89);
        int int91 = fraction89.getProperNumerator();
        float float92 = fraction89.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1" + "'", str7, "1");
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 1.0f + "'", float29 == 1.0f);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + float52 + "' != '" + 1.0f + "'", float52 == 1.0f);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + float63 + "' != '" + 1.0f + "'", float63 == 1.0f);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(fraction84);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3 + "'", int87 == 3);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 3 + "'", int91 == 3);
        org.junit.Assert.assertTrue("'" + float92 + "' != '" + 0.15f + "'", float92 == 0.15f);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        float float7 = fraction6.floatValue();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.divideBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction10.divideBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction12.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction26.negate();
        float float28 = fraction27.floatValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + (-5.7777777f) + "'", float28 == (-5.7777777f));
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-17.0f));
        int int2 = fraction1.getDenominator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        int int4 = fraction3.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.invert();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.subtract(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction6.equals((java.lang.Object) fraction9);
        boolean boolean12 = fraction9.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.subtract(fraction14);
        java.lang.String str16 = fraction14.toProperString();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction9.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction9.negate();
        boolean boolean19 = fraction5.equals((java.lang.Object) fraction18);
        java.lang.String str20 = fraction18.toProperString();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 110 + "'", int4 == 110);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1" + "'", str16, "1");
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "-1/3" + "'", str20, "-1/3");
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int17 = fraction16.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction11.add(fraction16);
        int int20 = fraction11.getProperWhole();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) -51, (int) (byte) 52);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/4");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean4 = fraction2.equals((java.lang.Object) '4');
        int int5 = fraction2.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.invert();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction6.invert();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.subtract(fraction11);
        int int13 = fraction1.compareTo(fraction6);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction6.invert();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction6.invert();
        long long16 = fraction6.longValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        int int4 = fraction3.getNumerator();
        java.lang.String str5 = fraction3.toString();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 110 + "'", int4 == 110);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "110/1" + "'", str5, "110/1");
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean8 = fraction6.equals((java.lang.Object) '4');
        int int9 = fraction6.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction6.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.divideBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        double double24 = fraction21.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction17.divideBy(fraction21);
        int int26 = fraction21.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction21.abs();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.getFraction(10.0d);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.getFraction((-17), (int) (short) 100, (int) (byte) 10);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean39 = fraction37.equals((java.lang.Object) '4');
        int int40 = fraction37.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction37.invert();
        int int42 = fraction41.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction41.pow((int) (byte) 4);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction36.divideBy(fraction41);
        org.apache.commons.lang3.math.Fraction fraction46 = fraction35.subtract(fraction41);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction31.add(fraction35);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction47.abs();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction47.abs();
        org.apache.commons.lang3.math.Fraction fraction50 = fraction29.multiplyBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction51 = fraction5.divideBy(fraction50);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1.0d + "'", double24 == 1.0d);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.negate();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction0.divideBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.pow((int) (short) -51);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction18);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction1.invert();
        int int4 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.abs();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(fraction5);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (short) -1);
        long long2 = fraction1.longValue();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction1.pow(10);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction4.pow(0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction6);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.pow(1);
        int int8 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        int int14 = fraction13.intValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        float float17 = fraction16.floatValue();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        int int24 = fraction21.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction16.add(fraction25);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction15.multiplyBy(fraction16);
        double double28 = fraction15.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction13.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction13.pow(0);
        int int32 = fraction13.getNumerator();
        long long33 = fraction13.longValue();
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean36 = fraction34.equals((java.lang.Object) 52);
        long long37 = fraction34.longValue();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction13.multiplyBy(fraction34);
        int int39 = fraction3.compareTo(fraction34);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 1.0f + "'", float17 == 1.0f);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.25d + "'", double28 == 0.25d);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        java.lang.String str16 = fraction0.toString();
        short short17 = fraction0.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1/1" + "'", str16, "1/1");
        org.junit.Assert.assertTrue("'" + short17 + "' != '" + (short) 1 + "'", short17 == (short) 1);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 10, 11);
        java.lang.String str3 = fraction2.toString();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "10/11" + "'", str3, "10/11");
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.abs();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.subtract(fraction27);
        boolean boolean29 = fraction25.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction6.add(fraction27);
        int int31 = fraction6.intValue();
        int int32 = fraction6.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction3.multiplyBy(fraction6);
        int int34 = fraction33.getProperWhole();
        java.lang.Class<?> wildcardClass35 = fraction33.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(97, 2, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The denominator must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        float float2 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.pow(52);
        double double5 = fraction4.doubleValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction0.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction28.negate();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction0.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.reduce();
        double double33 = fraction28.doubleValue();
        int int34 = fraction28.intValue();
        java.lang.Class<?> wildcardClass35 = fraction28.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("100/1");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        float float3 = fraction2.floatValue();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean10 = fraction8.equals((java.lang.Object) '4');
        int int11 = fraction8.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction8.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction18.subtract(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction18.equals((java.lang.Object) fraction21);
        boolean boolean24 = fraction21.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.abs();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        int int31 = fraction29.intValue();
        int int32 = fraction29.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.reduce();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction33.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        int int41 = fraction39.intValue();
        int int42 = fraction39.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction39.reduce();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction43.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction46 = fraction45.invert();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction35.multiplyBy(fraction45);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction21.divideBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean51 = fraction49.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction53 = fraction49.multiplyBy(fraction52);
        int int54 = fraction52.intValue();
        int int55 = fraction52.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.reduce();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction56.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction48.divideBy(fraction56);
        int int60 = fraction16.compareTo(fraction56);
        org.apache.commons.lang3.math.Fraction fraction61 = fraction7.divideBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction2.add(fraction16);
        boolean boolean63 = fraction1.equals((java.lang.Object) fraction2);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((-34), 11);
        int int3 = fraction2.getDenominator();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 11 + "'", int3 == 11);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        boolean boolean6 = fraction3.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.subtract(fraction8);
        java.lang.String str10 = fraction8.toProperString();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction3.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction3.negate();
        int int13 = fraction12.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1" + "'", str10, "1");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction10.subtract(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction10.equals((java.lang.Object) fraction13);
        boolean boolean16 = fraction13.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.abs();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        int int24 = fraction21.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction25.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean30 = fraction28.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.multiplyBy(fraction31);
        int int33 = fraction31.intValue();
        int int34 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction37.invert();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction27.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction40 = fraction13.divideBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean43 = fraction41.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction45 = fraction41.multiplyBy(fraction44);
        int int46 = fraction44.intValue();
        int int47 = fraction44.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction44.reduce();
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction51 = fraction40.divideBy(fraction48);
        int int52 = fraction8.compareTo(fraction48);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction8.pow((int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean58 = fraction56.equals((java.lang.Object) '4');
        int int59 = fraction56.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean62 = fraction60.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction64 = fraction60.multiplyBy(fraction63);
        org.apache.commons.lang3.math.Fraction fraction65 = fraction56.multiplyBy(fraction64);
        java.lang.String str66 = fraction65.toString();
        org.apache.commons.lang3.math.Fraction fraction67 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE;
        float float69 = fraction68.floatValue();
        org.apache.commons.lang3.math.Fraction fraction70 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean72 = fraction70.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction73 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction74 = fraction70.multiplyBy(fraction73);
        int int75 = fraction73.intValue();
        int int76 = fraction73.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction77 = fraction73.reduce();
        org.apache.commons.lang3.math.Fraction fraction78 = fraction68.add(fraction77);
        org.apache.commons.lang3.math.Fraction fraction79 = fraction67.multiplyBy(fraction68);
        double double80 = fraction67.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction81 = fraction65.multiplyBy(fraction67);
        org.apache.commons.lang3.math.Fraction fraction82 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean84 = fraction82.equals((java.lang.Object) '4');
        int int85 = fraction82.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction86 = fraction82.invert();
        int int87 = fraction86.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction88 = fraction65.multiplyBy(fraction86);
        org.apache.commons.lang3.math.Fraction fraction89 = fraction55.multiplyBy(fraction88);
        org.apache.commons.lang3.math.Fraction fraction90 = fraction89.abs();
        org.apache.commons.lang3.math.Fraction fraction91 = fraction8.subtract(fraction89);
        short short92 = fraction89.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "1/3" + "'", str66, "1/3");
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + float69 + "' != '" + 1.0f + "'", float69 == 1.0f);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.25d + "'", double80 == 0.25d);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fraction91);
        org.junit.Assert.assertTrue("'" + short92 + "' != '" + (short) 0 + "'", short92 == (short) 0);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(12, (int) (byte) 23);
        int int3 = fraction2.intValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((-17.0d));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean4 = fraction2.equals((java.lang.Object) '4');
        int int5 = fraction2.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = fraction2.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        boolean boolean15 = fraction12.equals((java.lang.Object) fraction13);
        long long16 = fraction13.longValue();
        int int17 = fraction2.compareTo(fraction13);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction2.multiplyBy(fraction20);
        java.lang.String str22 = fraction2.toString();
        double double23 = fraction2.doubleValue();
        boolean boolean24 = fraction1.equals((java.lang.Object) fraction2);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1/1" + "'", str22, "1/1");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(19, (int) (short) 110);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.pow((int) (byte) 1);
        int int7 = fraction0.intValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.subtract(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        boolean boolean16 = fraction10.equals((java.lang.Object) fraction14);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction0.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction0.negate();
        byte byte19 = fraction0.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 0 + "'", byte19 == (byte) 0);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.invert();
        long long3 = fraction1.longValue();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.negate();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        int int17 = fraction15.intValue();
        int int18 = fraction15.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.reduce();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction7.multiplyBy(fraction15);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction1.divideBy(fraction15);
        int int22 = fraction1.intValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.negate();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.subtract(fraction4);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction4.invert();
        java.lang.String str7 = fraction4.toString();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.invert();
        double double9 = fraction4.doubleValue();
        int int10 = fraction4.getProperWhole();
        boolean boolean11 = fraction2.equals((java.lang.Object) int10);
        java.lang.Class<?> wildcardClass12 = fraction2.getClass();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "1/1" + "'", str7, "1/1");
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(0, (int) (short) 10);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(53, (int) (short) 1);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction10.subtract(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction10.equals((java.lang.Object) fraction13);
        boolean boolean16 = fraction13.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.abs();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        int int23 = fraction21.intValue();
        int int24 = fraction21.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction25.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean30 = fraction28.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.multiplyBy(fraction31);
        int int33 = fraction31.intValue();
        int int34 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction37.invert();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction27.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction40 = fraction13.divideBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean43 = fraction41.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction45 = fraction41.multiplyBy(fraction44);
        int int46 = fraction44.intValue();
        int int47 = fraction44.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction44.reduce();
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction51 = fraction40.divideBy(fraction48);
        int int52 = fraction8.compareTo(fraction48);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction8.pow((int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean57 = fraction55.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction59 = fraction55.multiplyBy(fraction58);
        int int60 = fraction58.intValue();
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean63 = fraction61.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        float float65 = fraction64.floatValue();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction64.abs();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction61.divideBy(fraction64);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction69 = org.apache.commons.lang3.math.Fraction.ONE;
        float float70 = fraction69.floatValue();
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean73 = fraction71.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction74 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction75 = fraction71.multiplyBy(fraction74);
        int int76 = fraction74.intValue();
        int int77 = fraction74.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction78 = fraction74.reduce();
        org.apache.commons.lang3.math.Fraction fraction79 = fraction69.add(fraction78);
        org.apache.commons.lang3.math.Fraction fraction80 = fraction68.multiplyBy(fraction69);
        org.apache.commons.lang3.math.Fraction fraction81 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction82 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction83 = fraction81.subtract(fraction82);
        boolean boolean84 = fraction80.equals((java.lang.Object) fraction82);
        org.apache.commons.lang3.math.Fraction fraction85 = fraction61.add(fraction82);
        int int86 = fraction61.intValue();
        int int87 = fraction61.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction88 = fraction58.multiplyBy(fraction61);
        int int89 = fraction8.compareTo(fraction58);
        java.lang.String str90 = fraction58.toProperString();
        org.apache.commons.lang3.math.Fraction fraction91 = fraction58.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + float65 + "' != '" + 1.0f + "'", float65 == 1.0f);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertTrue("'" + float70 + "' != '" + 1.0f + "'", float70 == 1.0f);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3 + "'", int87 == 3);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "1" + "'", str90, "1");
        org.junit.Assert.assertNotNull(fraction91);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        boolean boolean6 = fraction3.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.invert();
        int int8 = fraction7.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int10 = fraction9.getNumerator();
        java.lang.String str11 = fraction9.toString();
        float float12 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.subtract(fraction27);
        boolean boolean29 = fraction25.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.pow(52);
        int int32 = fraction27.getNumerator();
        boolean boolean33 = fraction9.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction7.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean37 = fraction35.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.multiplyBy(fraction38);
        int int40 = fraction39.intValue();
        double double41 = fraction39.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 0, 1);
        boolean boolean46 = fraction44.equals((java.lang.Object) 2);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean49 = fraction47.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.multiplyBy(fraction50);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction44.multiplyBy(fraction51);
        int int53 = fraction39.compareTo(fraction44);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction44.reduce();
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int57 = fraction56.getProperWhole();
        java.lang.String str58 = fraction56.toString();
        long long59 = fraction56.longValue();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.negate();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction44.multiplyBy(fraction56);
        int int62 = fraction34.compareTo(fraction56);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction34.reduce();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction34.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "3/4" + "'", str11, "3/4");
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.75f + "'", float12 == 0.75f);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.3333333333333333d + "'", double41 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "52/1" + "'", str58, "52/1");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 52L + "'", long59 == 52L);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 100.0f);
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean5 = fraction3.equals((java.lang.Object) '4');
        int int6 = fraction3.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction3.multiplyBy(fraction11);
        java.lang.String str13 = fraction12.toString();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        float float16 = fraction15.floatValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction20.intValue();
        int int23 = fraction20.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.reduce();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction15.add(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction14.multiplyBy(fraction15);
        double double27 = fraction14.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction12.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean31 = fraction29.equals((java.lang.Object) '4');
        int int32 = fraction29.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.invert();
        int int34 = fraction33.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction12.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction33.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.invert();
        int int38 = fraction33.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean42 = fraction40.equals((java.lang.Object) '4');
        int int43 = fraction40.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean46 = fraction44.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction48 = fraction44.multiplyBy(fraction47);
        org.apache.commons.lang3.math.Fraction fraction49 = fraction40.multiplyBy(fraction48);
        java.lang.String str50 = fraction49.toString();
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE;
        float float53 = fraction52.floatValue();
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean56 = fraction54.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction57 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction58 = fraction54.multiplyBy(fraction57);
        int int59 = fraction57.intValue();
        int int60 = fraction57.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction57.reduce();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction52.add(fraction61);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction51.multiplyBy(fraction52);
        double double64 = fraction51.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction49.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean68 = fraction66.equals((java.lang.Object) '4');
        int int69 = fraction66.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction66.invert();
        int int71 = fraction70.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction72 = fraction49.multiplyBy(fraction70);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction39.multiplyBy(fraction72);
        org.apache.commons.lang3.math.Fraction fraction74 = fraction73.abs();
        org.apache.commons.lang3.math.Fraction fraction75 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean77 = fraction75.equals((java.lang.Object) '4');
        int int78 = fraction75.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction79 = fraction75.invert();
        int int80 = fraction79.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction81 = fraction74.add(fraction79);
        org.apache.commons.lang3.math.Fraction fraction82 = fraction79.abs();
        org.apache.commons.lang3.math.Fraction fraction83 = fraction79.negate();
        org.apache.commons.lang3.math.Fraction fraction85 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction86 = fraction85.negate();
        org.apache.commons.lang3.math.Fraction fraction88 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction89 = fraction88.reduce();
        org.apache.commons.lang3.math.Fraction fraction90 = fraction89.reduce();
        org.apache.commons.lang3.math.Fraction fraction91 = fraction86.divideBy(fraction90);
        org.apache.commons.lang3.math.Fraction fraction92 = fraction83.divideBy(fraction91);
        org.apache.commons.lang3.math.Fraction fraction93 = fraction33.add(fraction83);
        org.apache.commons.lang3.math.Fraction fraction94 = fraction1.add(fraction33);
        org.apache.commons.lang3.math.Fraction fraction96 = org.apache.commons.lang3.math.Fraction.getFraction("1/4");
        long long97 = fraction96.longValue();
        org.apache.commons.lang3.math.Fraction fraction98 = fraction1.multiplyBy(fraction96);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1/3" + "'", str13, "1/3");
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + 1.0f + "'", float16 == 1.0f);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.25d + "'", double27 == 0.25d);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "1/3" + "'", str50, "1/3");
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + float53 + "' != '" + 1.0f + "'", float53 == 1.0f);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.25d + "'", double64 == 0.25d);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fraction91);
        org.junit.Assert.assertNotNull(fraction92);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertNotNull(fraction96);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 0L + "'", long97 == 0L);
        org.junit.Assert.assertNotNull(fraction98);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        float float7 = fraction6.floatValue();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.divideBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int13 = fraction12.getProperWhole();
        java.lang.String str14 = fraction12.toString();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction1.divideBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean18 = fraction16.equals((java.lang.Object) '4');
        int int19 = fraction16.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.invert();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction20.invert();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction26 = fraction20.subtract(fraction25);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction15.subtract(fraction20);
        int int28 = fraction15.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction15.negate();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction29.negate();
        int int31 = fraction30.getProperWhole();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "52/1" + "'", str14, "52/1");
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        int int12 = fraction9.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.subtract(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction13.equals((java.lang.Object) fraction16);
        boolean boolean19 = fraction16.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.invert();
        int int21 = fraction20.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int23 = fraction22.getNumerator();
        java.lang.String str24 = fraction22.toString();
        float float25 = fraction22.floatValue();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        float float28 = fraction27.floatValue();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        int int34 = fraction32.intValue();
        int int35 = fraction32.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.reduce();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction27.add(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction26.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction41 = fraction39.subtract(fraction40);
        boolean boolean42 = fraction38.equals((java.lang.Object) fraction40);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.pow(52);
        int int45 = fraction40.getNumerator();
        boolean boolean46 = fraction22.equals((java.lang.Object) fraction40);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction20.multiplyBy(fraction40);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction9.divideBy(fraction47);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "3/4" + "'", str24, "3/4");
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 0.75f + "'", float25 == 0.75f);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 1.0f + "'", float28 == 1.0f);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (short) -152);
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction1.invert();
        java.lang.String str4 = fraction1.toString();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.invert();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction9.abs();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction6.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.subtract(fraction27);
        boolean boolean29 = fraction25.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction6.add(fraction27);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean33 = fraction31.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.multiplyBy(fraction34);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction34.negate();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction6.subtract(fraction34);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction34.reduce();
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean41 = fraction39.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction43 = fraction39.multiplyBy(fraction42);
        long long44 = fraction39.longValue();
        boolean boolean46 = fraction39.equals((java.lang.Object) "");
        boolean boolean47 = fraction38.equals((java.lang.Object) fraction39);
        int int48 = fraction38.intValue();
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int51 = fraction50.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean54 = fraction52.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE;
        float float56 = fraction55.floatValue();
        org.apache.commons.lang3.math.Fraction fraction57 = fraction55.abs();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction52.divideBy(fraction55);
        org.apache.commons.lang3.math.Fraction fraction59 = fraction50.multiplyBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction60 = fraction38.multiplyBy(fraction59);
        org.apache.commons.lang3.math.Fraction fraction61 = fraction5.multiplyBy(fraction38);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction61.pow(4);
        int int64 = fraction63.getDenominator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1/1" + "'", str4, "1/1");
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + float56 + "' != '" + 1.0f + "'", float56 == 1.0f);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        float float7 = fraction6.floatValue();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.divideBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction3);
        int int11 = fraction10.getNumerator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) -51, 102);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        java.lang.String str3 = fraction1.toString();
        long long4 = fraction1.longValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.negate();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction9 = fraction6.add(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.subtract(fraction8);
        double double11 = fraction10.doubleValue();
        double double12 = fraction10.doubleValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "52/1" + "'", str3, "52/1");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 52L + "'", long4 == 52L);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 53.0d + "'", double11 == 53.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 53.0d + "'", double12 == 53.0d);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        float float3 = fraction2.floatValue();
        short short4 = fraction2.shortValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.33333334f + "'", float3 == 0.33333334f);
        org.junit.Assert.assertTrue("'" + short4 + "' != '" + (short) 0 + "'", short4 == (short) 0);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction5.intValue();
        int int8 = fraction5.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.reduce();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction0.add(fraction9);
        int int11 = fraction9.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.getFraction(2, (int) (byte) 100, (int) (short) 10);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction12.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction17.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(0, (-17));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.negate();
        float float4 = fraction2.floatValue();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction3.intValue();
        double double6 = fraction3.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction14.abs();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction11.divideBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        float float20 = fraction19.floatValue();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean23 = fraction21.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.multiplyBy(fraction24);
        int int26 = fraction24.intValue();
        int int27 = fraction24.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.reduce();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction19.add(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction18.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction31.subtract(fraction32);
        boolean boolean34 = fraction30.equals((java.lang.Object) fraction32);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction11.add(fraction32);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction39.negate();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction11.subtract(fraction39);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction39.reduce();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction10.subtract(fraction39);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction47 = fraction39.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction48 = fraction3.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.pow((int) (byte) 100);
        long long51 = fraction50.longValue();
        int int52 = fraction50.getNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 1.0f + "'", float20 == 1.0f);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        double double2 = fraction1.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        float float6 = fraction5.floatValue();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.TWO_THIRDS;
        boolean boolean8 = fraction5.equals((java.lang.Object) fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction1.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean12 = fraction10.equals((java.lang.Object) '4');
        int int13 = fraction10.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.invert();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction10.negate();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction1.subtract(fraction15);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction16.negate();
        int int18 = fraction16.getDenominator();
        java.lang.String str19 = fraction16.toString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + (-1.0d) + "'", double2 == (-1.0d));
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "0/1" + "'", str19, "0/1");
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction4.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        int int14 = fraction12.intValue();
        int int15 = fraction12.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction7.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction6.multiplyBy(fraction7);
        double double19 = fraction6.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction4.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction22 = fraction4.pow(0);
        int int23 = fraction4.getNumerator();
        long long24 = fraction4.longValue();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        long long28 = fraction25.longValue();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction4.multiplyBy(fraction25);
        int int30 = fraction25.getDenominator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.25d + "'", double19 == 0.25d);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.invert();
        int int41 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction40.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.negate();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction44.negate();
        java.lang.String str46 = fraction44.toString();
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction47.subtract(fraction48);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean51 = fraction47.equals((java.lang.Object) fraction50);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction50.negate();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction44.divideBy(fraction50);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "-1/1" + "'", str46, "-1/1");
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 27, (int) (byte) -17, 20);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The numerator must not be negative");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        java.lang.String str11 = fraction10.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        float float14 = fraction13.floatValue();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction13.add(fraction22);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction12.multiplyBy(fraction13);
        double double25 = fraction12.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction10.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean29 = fraction27.equals((java.lang.Object) '4');
        int int30 = fraction27.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.invert();
        int int32 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction10.multiplyBy(fraction31);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction0.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction34.abs();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean38 = fraction36.equals((java.lang.Object) '4');
        int int39 = fraction36.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.invert();
        int int41 = fraction40.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction35.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = fraction40.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.negate();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction47 = fraction46.negate();
        org.apache.commons.lang3.math.Fraction fraction49 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction50 = fraction49.reduce();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction50.reduce();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction47.divideBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction53 = fraction44.divideBy(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean56 = fraction54.equals((java.lang.Object) '4');
        int int57 = fraction54.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction54.invert();
        int int59 = fraction54.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.ONE;
        float float64 = fraction63.floatValue();
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean67 = fraction65.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction69 = fraction65.multiplyBy(fraction68);
        int int70 = fraction68.intValue();
        int int71 = fraction68.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction72 = fraction68.reduce();
        org.apache.commons.lang3.math.Fraction fraction73 = fraction63.add(fraction72);
        org.apache.commons.lang3.math.Fraction fraction74 = fraction62.multiplyBy(fraction63);
        org.apache.commons.lang3.math.Fraction fraction75 = fraction62.reduce();
        org.apache.commons.lang3.math.Fraction fraction76 = org.apache.commons.lang3.math.Fraction.ONE;
        float float77 = fraction76.floatValue();
        org.apache.commons.lang3.math.Fraction fraction78 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean80 = fraction78.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction81 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction82 = fraction78.multiplyBy(fraction81);
        int int83 = fraction81.intValue();
        int int84 = fraction81.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction85 = fraction81.reduce();
        org.apache.commons.lang3.math.Fraction fraction86 = fraction76.add(fraction85);
        boolean boolean87 = fraction75.equals((java.lang.Object) fraction85);
        org.apache.commons.lang3.math.Fraction fraction88 = fraction61.multiplyBy(fraction85);
        int int89 = fraction88.intValue();
        org.apache.commons.lang3.math.Fraction fraction90 = fraction54.add(fraction88);
        org.apache.commons.lang3.math.Fraction fraction91 = fraction52.multiplyBy(fraction88);
        org.apache.commons.lang3.math.Fraction fraction92 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int93 = fraction92.getNumerator();
        double double94 = fraction92.doubleValue();
        boolean boolean95 = fraction52.equals((java.lang.Object) double94);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.25d + "'", double25 == 0.25d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + float64 + "' != '" + 1.0f + "'", float64 == 1.0f);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + float77 + "' != '" + 1.0f + "'", float77 == 1.0f);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(fraction88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertNotNull(fraction90);
        org.junit.Assert.assertNotNull(fraction91);
        org.junit.Assert.assertNotNull(fraction92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 3 + "'", int93 == 3);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.75d + "'", double94 == 0.75d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        float float7 = fraction6.floatValue();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.divideBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction3);
        java.lang.String str11 = fraction3.toString();
        int int12 = fraction3.getNumerator();
        long long13 = fraction3.longValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction4.invert();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction4.subtract(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        int int12 = fraction11.getNumerator();
        double double13 = fraction11.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction11.abs();
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction18.intValue();
        int int21 = fraction18.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction25 = fraction23.subtract(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction23.equals((java.lang.Object) fraction26);
        int int28 = fraction23.intValue();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction22.divideBy(fraction23);
        boolean boolean30 = fraction14.equals((java.lang.Object) fraction22);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction9.divideBy(fraction14);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.4d + "'", double13 == 0.4d);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.add(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.abs();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 0, 1);
        boolean boolean14 = fraction12.equals((java.lang.Object) 2);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction12.multiplyBy(fraction19);
        float float21 = fraction19.floatValue();
        int int22 = fraction9.compareTo(fraction19);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + float21 + "' != '" + 0.33333334f + "'", float21 == 0.33333334f);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(81, 35);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 100, 208, 3395);
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.abs();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction4.divideBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        int int20 = fraction17.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction12.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction11.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction26 = fraction24.subtract(fraction25);
        boolean boolean27 = fraction23.equals((java.lang.Object) fraction25);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction4.add(fraction25);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE;
        float float31 = fraction30.floatValue();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean34 = fraction32.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.multiplyBy(fraction35);
        int int37 = fraction35.intValue();
        int int38 = fraction35.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.reduce();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction30.add(fraction39);
        org.apache.commons.lang3.math.Fraction fraction41 = fraction29.multiplyBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction44 = fraction42.subtract(fraction43);
        boolean boolean45 = fraction41.equals((java.lang.Object) fraction43);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction43.pow(52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean50 = fraction48.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.multiplyBy(fraction51);
        int int53 = fraction51.intValue();
        org.apache.commons.lang3.math.Fraction fraction55 = fraction51.pow(1);
        int int56 = fraction51.intValue();
        org.apache.commons.lang3.math.Fraction fraction57 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE;
        float float59 = fraction58.floatValue();
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean62 = fraction60.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction63 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction64 = fraction60.multiplyBy(fraction63);
        int int65 = fraction63.intValue();
        int int66 = fraction63.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction63.reduce();
        org.apache.commons.lang3.math.Fraction fraction68 = fraction58.add(fraction67);
        org.apache.commons.lang3.math.Fraction fraction69 = fraction57.multiplyBy(fraction58);
        org.apache.commons.lang3.math.Fraction fraction70 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction72 = fraction70.subtract(fraction71);
        org.apache.commons.lang3.math.Fraction fraction73 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean74 = fraction70.equals((java.lang.Object) fraction73);
        boolean boolean76 = fraction73.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction77 = fraction73.invert();
        org.apache.commons.lang3.math.Fraction fraction78 = fraction69.divideBy(fraction77);
        org.apache.commons.lang3.math.Fraction fraction79 = fraction51.divideBy(fraction69);
        org.apache.commons.lang3.math.Fraction fraction80 = fraction47.multiplyBy(fraction69);
        int int81 = fraction4.compareTo(fraction47);
        org.apache.commons.lang3.math.Fraction fraction82 = fraction3.subtract(fraction47);
        org.apache.commons.lang3.math.Fraction fraction83 = fraction47.invert();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 1.0f + "'", float31 == 1.0f);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + float59 + "' != '" + 1.0f + "'", float59 == 1.0f);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertNotNull(fraction78);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertNotNull(fraction83);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((-17), 35);
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.reduce();
        int int4 = fraction3.getProperWhole();
        long long5 = fraction3.longValue();
        java.lang.String str6 = fraction3.toString();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-17/35" + "'", str6, "-17/35");
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((-1.0d));
        org.apache.commons.lang3.math.Fraction fraction2 = fraction1.reduce();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction1.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.getFraction((-2), (int) (byte) -109);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        int int12 = fraction11.intValue();
        double double13 = fraction11.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction11.invert();
        boolean boolean15 = fraction6.equals((java.lang.Object) fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = fraction1.add(fraction6);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean19 = fraction17.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.multiplyBy(fraction20);
        int int22 = fraction21.intValue();
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        float float25 = fraction24.floatValue();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        int int31 = fraction29.intValue();
        int int32 = fraction29.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.reduce();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction24.add(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction23.multiplyBy(fraction24);
        double double36 = fraction23.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction21.multiplyBy(fraction23);
        int int38 = fraction6.compareTo(fraction23);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.3333333333333333d + "'", double13 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 1.0f + "'", float25 == 1.0f);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.25d + "'", double36 == 0.25d);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 100, 1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction6 = fraction3.add(fraction5);
        double double7 = fraction3.doubleValue();
        int int8 = fraction3.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction2.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction2.reduce();
        boolean boolean12 = fraction10.equals((java.lang.Object) (-17.333333333333332d));
        java.lang.String str13 = fraction10.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction15 = fraction10.pow((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: overflow: mul");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.4d + "'", double7 == 0.4d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "100/1" + "'", str13, "100/1");
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        int int4 = fraction3.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.invert();
        int int6 = fraction5.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction9 = fraction8.reduce();
        java.lang.String str10 = fraction8.toProperString();
        java.lang.String str11 = fraction8.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction5.subtract(fraction8);
        int int13 = fraction8.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 110 + "'", int4 == 110);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        java.lang.String str11 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean16 = fraction14.equals((java.lang.Object) '4');
        int int17 = fraction14.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean20 = fraction18.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction18.multiplyBy(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction14.multiplyBy(fraction22);
        java.lang.String str24 = fraction23.toString();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE;
        float float27 = fraction26.floatValue();
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean30 = fraction28.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.multiplyBy(fraction31);
        int int33 = fraction31.intValue();
        int int34 = fraction31.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.reduce();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction26.add(fraction35);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction25.multiplyBy(fraction26);
        double double38 = fraction25.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction39 = fraction23.multiplyBy(fraction25);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean42 = fraction40.equals((java.lang.Object) '4');
        int int43 = fraction40.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.invert();
        int int45 = fraction44.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction23.multiplyBy(fraction44);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction13.multiplyBy(fraction46);
        int int48 = fraction12.compareTo(fraction13);
        int int49 = fraction12.intValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1/3" + "'", str11, "1/3");
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1/3" + "'", str24, "1/3");
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + float27 + "' != '" + 1.0f + "'", float27 == 1.0f);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.25d + "'", double38 == 0.25d);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        int int8 = fraction6.intValue();
        int int9 = fraction6.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.reduce();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction1.add(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction0.multiplyBy(fraction1);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.subtract(fraction14);
        boolean boolean16 = fraction12.equals((java.lang.Object) fraction14);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.pow(52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        java.lang.Class<?> wildcardClass20 = fraction19.getClass();
        boolean boolean21 = fraction18.equals((java.lang.Object) fraction19);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        float float24 = fraction23.floatValue();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        int int30 = fraction28.intValue();
        int int31 = fraction28.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.reduce();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction23.add(fraction32);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction22.multiplyBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.subtract(fraction36);
        boolean boolean38 = fraction34.equals((java.lang.Object) fraction36);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction19.subtract(fraction36);
        java.lang.Class<?> wildcardClass40 = fraction39.getClass();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 1.0f + "'", float24 == 1.0f);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ZERO;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean3 = fraction1.equals((java.lang.Object) '4');
        int int4 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction1.multiplyBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        boolean boolean14 = fraction11.equals((java.lang.Object) fraction12);
        long long15 = fraction12.longValue();
        int int16 = fraction1.compareTo(fraction12);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction12.abs();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction0.add(fraction12);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean21 = fraction19.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.multiplyBy(fraction22);
        int int24 = fraction22.intValue();
        int int25 = fraction22.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.reduce();
        java.lang.String str27 = fraction26.toProperString();
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int31 = fraction30.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean34 = fraction32.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        float float36 = fraction35.floatValue();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction35.abs();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction32.divideBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction30.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int42 = fraction41.getProperWhole();
        java.lang.String str43 = fraction41.toString();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction30.divideBy(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction28.multiplyBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction46 = fraction26.subtract(fraction45);
        int int47 = fraction45.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction48 = fraction45.abs();
        boolean boolean49 = fraction0.equals((java.lang.Object) fraction45);
        org.apache.commons.lang3.math.Fraction fraction51 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int52 = fraction51.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean55 = fraction53.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction57 = fraction53.multiplyBy(fraction56);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction51.add(fraction57);
        int int59 = fraction58.intValue();
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE;
        float float61 = fraction60.floatValue();
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean64 = fraction62.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction65 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction66 = fraction62.multiplyBy(fraction65);
        int int67 = fraction65.intValue();
        int int68 = fraction65.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction69 = fraction65.reduce();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction60.add(fraction69);
        int int71 = fraction69.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction72 = fraction69.abs();
        org.apache.commons.lang3.math.Fraction fraction73 = fraction58.subtract(fraction72);
        org.apache.commons.lang3.math.Fraction fraction74 = fraction73.negate();
        org.apache.commons.lang3.math.Fraction fraction75 = fraction0.multiplyBy(fraction74);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1" + "'", str27, "1");
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + float36 + "' != '" + 1.0f + "'", float36 == 1.0f);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "52/1" + "'", str43, "52/1");
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + float61 + "' != '" + 1.0f + "'", float61 == 1.0f);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
        org.junit.Assert.assertNotNull(fraction75);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction14.intValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        float float18 = fraction17.floatValue();
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean21 = fraction19.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.multiplyBy(fraction22);
        int int24 = fraction22.intValue();
        int int25 = fraction22.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction17.add(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction16.multiplyBy(fraction17);
        double double29 = fraction16.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction14.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction14.pow(0);
        org.apache.commons.lang3.math.Fraction fraction33 = fraction0.divideBy(fraction14);
        int int34 = fraction14.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction14.negate();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction14.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 1.0f + "'", float18 == 1.0f);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.25d + "'", double29 == 0.25d);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        int int11 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction3.add(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction2.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.subtract(fraction16);
        boolean boolean18 = fraction14.equals((java.lang.Object) fraction16);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.pow(52);
        java.lang.String str21 = fraction16.toProperString();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction1.multiplyBy(fraction16);
        int int23 = fraction1.getNumerator();
        int int24 = fraction1.getProperWhole();
        java.lang.String str25 = fraction1.toString();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction1.reduce();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "-1/1" + "'", str25, "-1/1");
        org.junit.Assert.assertNotNull(fraction26);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        boolean boolean6 = fraction3.equals((java.lang.Object) (short) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.invert();
        int int8 = fraction7.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int10 = fraction9.getNumerator();
        java.lang.String str11 = fraction9.toString();
        float float12 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        float float15 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        int int22 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction14.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction13.multiplyBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction26.subtract(fraction27);
        boolean boolean29 = fraction25.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.pow(52);
        int int32 = fraction27.getNumerator();
        boolean boolean33 = fraction9.equals((java.lang.Object) fraction27);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction7.multiplyBy(fraction27);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean37 = fraction35.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.multiplyBy(fraction38);
        int int40 = fraction39.intValue();
        double double41 = fraction39.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 0, 1);
        boolean boolean46 = fraction44.equals((java.lang.Object) 2);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean49 = fraction47.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.multiplyBy(fraction50);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction44.multiplyBy(fraction51);
        int int53 = fraction39.compareTo(fraction44);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction44.reduce();
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int57 = fraction56.getProperWhole();
        java.lang.String str58 = fraction56.toString();
        long long59 = fraction56.longValue();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.negate();
        org.apache.commons.lang3.math.Fraction fraction61 = fraction44.multiplyBy(fraction56);
        int int62 = fraction34.compareTo(fraction56);
        java.lang.String str63 = fraction56.toString();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "3/4" + "'", str11, "3/4");
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.75f + "'", float12 == 0.75f);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 1.0f + "'", float15 == 1.0f);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.3333333333333333d + "'", double41 == 0.3333333333333333d);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "52/1" + "'", str58, "52/1");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 52L + "'", long59 == 52L);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "52/1" + "'", str63, "52/1");
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction0.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction0.negate();
        int int21 = fraction20.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean24 = fraction22.equals((java.lang.Object) '4');
        int int25 = fraction22.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction22.multiplyBy(fraction30);
        java.lang.String str32 = fraction31.toString();
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE;
        float float35 = fraction34.floatValue();
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        int int41 = fraction39.intValue();
        int int42 = fraction39.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction39.reduce();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction34.add(fraction43);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction33.multiplyBy(fraction34);
        double double46 = fraction33.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction31.multiplyBy(fraction33);
        boolean boolean48 = fraction20.equals((java.lang.Object) fraction47);
        org.apache.commons.lang3.math.Fraction fraction49 = fraction47.negate();
        org.apache.commons.lang3.math.Fraction fraction50 = fraction49.abs();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1/3" + "'", str32, "1/3");
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + float35 + "' != '" + 1.0f + "'", float35 == 1.0f);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.25d + "'", double46 == 0.25d);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        int int4 = fraction3.getNumerator();
        int int5 = fraction3.getNumerator();
        double double6 = fraction3.doubleValue();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 110 + "'", int4 == 110);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 110 + "'", int5 == 110);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 110.0d + "'", double6 == 110.0d);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        int int5 = fraction4.intValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        int int14 = fraction12.intValue();
        int int15 = fraction12.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction7.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction6.multiplyBy(fraction7);
        double double19 = fraction6.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction4.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction4.abs();
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        float float23 = fraction22.floatValue();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.abs();
        float float25 = fraction22.floatValue();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction21.add(fraction22);
        java.lang.String str27 = fraction21.toProperString();
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean30 = fraction28.equals((java.lang.Object) '4');
        int int31 = fraction28.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean34 = fraction32.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction28.multiplyBy(fraction36);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        float float40 = fraction39.floatValue();
        boolean boolean41 = fraction38.equals((java.lang.Object) fraction39);
        long long42 = fraction39.longValue();
        int int43 = fraction28.compareTo(fraction39);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction28.multiplyBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean50 = fraction48.equals((java.lang.Object) '4');
        int int51 = fraction48.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction52 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean54 = fraction52.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction56 = fraction52.multiplyBy(fraction55);
        org.apache.commons.lang3.math.Fraction fraction57 = fraction48.multiplyBy(fraction56);
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction59 = fraction57.divideBy(fraction58);
        int int60 = fraction28.compareTo(fraction59);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean63 = fraction61.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction65 = fraction61.multiplyBy(fraction64);
        int int66 = fraction64.intValue();
        int int67 = fraction64.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction68 = fraction64.reduce();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction68.pow((int) (byte) -1);
        boolean boolean71 = fraction59.equals((java.lang.Object) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction72 = fraction59.invert();
        org.apache.commons.lang3.math.Fraction fraction73 = fraction21.add(fraction72);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.25d + "'", double19 == 0.25d);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 1.0f + "'", float23 == 1.0f);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 1.0f + "'", float25 == 1.0f);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1/3" + "'", str27, "1/3");
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 1.0f + "'", float40 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        double double5 = fraction4.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        int int14 = fraction12.intValue();
        int int15 = fraction12.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction7.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction6.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction6.reduce();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean23 = fraction21.equals((java.lang.Object) '4');
        int int24 = fraction21.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction21.multiplyBy(fraction29);
        java.lang.String str31 = fraction30.toString();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        float float34 = fraction33.floatValue();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean37 = fraction35.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction39 = fraction35.multiplyBy(fraction38);
        int int40 = fraction38.intValue();
        int int41 = fraction38.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.reduce();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction33.add(fraction42);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction32.multiplyBy(fraction33);
        double double45 = fraction32.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction30.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean49 = fraction47.equals((java.lang.Object) '4');
        int int50 = fraction47.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.invert();
        int int52 = fraction51.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction30.multiplyBy(fraction51);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction20.multiplyBy(fraction53);
        org.apache.commons.lang3.math.Fraction fraction55 = fraction54.abs();
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean58 = fraction56.equals((java.lang.Object) '4');
        int int59 = fraction56.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.invert();
        int int61 = fraction60.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction62 = fraction55.add(fraction60);
        org.apache.commons.lang3.math.Fraction fraction63 = fraction60.abs();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction60.negate();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction6.add(fraction64);
        org.apache.commons.lang3.math.Fraction fraction66 = fraction65.reduce();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction4.subtract(fraction65);
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int69 = fraction68.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction68.invert();
        org.apache.commons.lang3.math.Fraction fraction71 = fraction4.add(fraction70);
        org.apache.commons.lang3.math.Fraction fraction72 = fraction70.invert();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1/3" + "'", str31, "1/3");
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + 1.0f + "'", float34 == 1.0f);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.25d + "'", double45 == 0.25d);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 0.15f);
        org.junit.Assert.assertNotNull(fraction1);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction0.negate();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.negate();
        org.apache.commons.lang3.math.Fraction fraction7 = fraction6.invert();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction(100, (int) (short) 1, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction4 = fraction3.abs();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 10, (int) (byte) 10, 1);
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean6 = fraction4.equals((java.lang.Object) '4');
        int int7 = fraction4.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction8.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = fraction4.multiplyBy(fraction12);
        java.lang.String str14 = fraction13.toString();
        java.lang.String str15 = fraction13.toString();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction3.subtract(fraction13);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 4, (int) (byte) 4, (int) 'a');
        org.apache.commons.lang3.math.Fraction fraction22 = fraction17.divideBy(fraction21);
        int int23 = fraction22.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.invert();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1/3" + "'", str14, "1/3");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1/3" + "'", str15, "1/3");
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1019 + "'", int23 == 1019);
        org.junit.Assert.assertNotNull(fraction24);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.add(fraction2);
        long long4 = fraction2.longValue();
        short short5 = fraction2.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + short5 + "' != '" + (short) -1 + "'", short5 == (short) -1);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 4, (int) (byte) 2);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        int int10 = fraction8.intValue();
        int int11 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.reduce();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction3.add(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction2.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.subtract(fraction16);
        boolean boolean18 = fraction14.equals((java.lang.Object) fraction16);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.pow(52);
        java.lang.String str21 = fraction16.toProperString();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction1.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction22.abs();
        long long24 = fraction22.longValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1" + "'", str21, "1");
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        double double4 = fraction3.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.negate();
        float float11 = fraction8.floatValue();
        int int12 = fraction8.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean15 = fraction13.equals((java.lang.Object) '4');
        int int16 = fraction13.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.invert();
        int int18 = fraction17.getNumerator();
        float float19 = fraction17.floatValue();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int22 = fraction21.getProperNumerator();
        int int23 = fraction17.compareTo(fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction8.divideBy(fraction17);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        long long30 = fraction25.longValue();
        java.lang.String str31 = fraction25.toString();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean34 = fraction32.equals((java.lang.Object) '4');
        int int35 = fraction32.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.invert();
        int int37 = fraction36.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean40 = fraction38.equals((java.lang.Object) '4');
        int int41 = fraction38.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean44 = fraction42.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction46 = fraction42.multiplyBy(fraction45);
        org.apache.commons.lang3.math.Fraction fraction47 = fraction38.multiplyBy(fraction46);
        java.lang.String str48 = fraction47.toString();
        org.apache.commons.lang3.math.Fraction fraction49 = fraction36.multiplyBy(fraction47);
        boolean boolean50 = fraction25.equals((java.lang.Object) fraction36);
        double double51 = fraction25.doubleValue();
        java.lang.String str52 = fraction25.toProperString();
        int int53 = fraction17.compareTo(fraction25);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction3.multiplyBy(fraction25);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 1.0f + "'", float19 == 1.0f);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1/3" + "'", str31, "1/3");
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "1/3" + "'", str48, "1/3");
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.3333333333333333d + "'", double51 == 0.3333333333333333d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "1/3" + "'", str52, "1/3");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction54);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        int int8 = fraction6.intValue();
        int int9 = fraction6.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.reduce();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction1.add(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction0.multiplyBy(fraction1);
        double double13 = fraction0.doubleValue();
        long long14 = fraction0.longValue();
        int int15 = fraction0.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction19.negate();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        long long29 = fraction24.longValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction19.multiplyBy(fraction24);
        int int31 = fraction0.compareTo(fraction19);
        org.apache.commons.lang3.math.Fraction fraction33 = fraction0.pow((int) (short) -1);
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean36 = fraction34.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction38 = fraction34.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction37.negate();
        float float40 = fraction37.floatValue();
        int int41 = fraction37.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean44 = fraction42.equals((java.lang.Object) '4');
        int int45 = fraction42.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction42.invert();
        int int47 = fraction46.getNumerator();
        float float48 = fraction46.floatValue();
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int51 = fraction50.getProperNumerator();
        int int52 = fraction46.compareTo(fraction50);
        org.apache.commons.lang3.math.Fraction fraction53 = fraction37.divideBy(fraction46);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction53.abs();
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        float float57 = fraction56.floatValue();
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean60 = fraction58.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction62 = fraction58.multiplyBy(fraction61);
        int int63 = fraction61.intValue();
        int int64 = fraction61.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction61.reduce();
        org.apache.commons.lang3.math.Fraction fraction66 = fraction56.add(fraction65);
        org.apache.commons.lang3.math.Fraction fraction67 = fraction55.multiplyBy(fraction56);
        boolean boolean68 = fraction53.equals((java.lang.Object) fraction67);
        org.apache.commons.lang3.math.Fraction fraction69 = fraction53.abs();
        org.apache.commons.lang3.math.Fraction fraction70 = fraction33.add(fraction53);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.25d + "'", double13 == 0.25d);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 1.0f + "'", float40 == 1.0f);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + float48 + "' != '" + 1.0f + "'", float48 == 1.0f);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + float57 + "' != '" + 1.0f + "'", float57 == 1.0f);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 4, (int) (byte) 4, (int) 'a');
        int int4 = fraction3.getDenominator();
        int int5 = fraction3.getDenominator();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 97 + "'", int4 == 97);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        boolean boolean3 = fraction0.equals((java.lang.Object) fraction1);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean8 = fraction6.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction10 = fraction6.multiplyBy(fraction9);
        int int11 = fraction9.intValue();
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.pow(1);
        int int14 = fraction9.intValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction9.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction5.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction17 = fraction0.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        float float20 = fraction19.floatValue();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean23 = fraction21.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction25 = fraction21.multiplyBy(fraction24);
        int int26 = fraction24.intValue();
        int int27 = fraction24.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.reduce();
        org.apache.commons.lang3.math.Fraction fraction29 = fraction19.add(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction18.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction18.reduce();
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        float float33 = fraction32.floatValue();
        org.apache.commons.lang3.math.Fraction fraction34 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean36 = fraction34.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction38 = fraction34.multiplyBy(fraction37);
        int int39 = fraction37.intValue();
        int int40 = fraction37.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction37.reduce();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction32.add(fraction41);
        boolean boolean43 = fraction31.equals((java.lang.Object) fraction41);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction0.multiplyBy(fraction31);
        int int45 = fraction0.intValue();
        int int46 = fraction0.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 1.0f + "'", float20 == 1.0f);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + float33 + "' != '" + 1.0f + "'", float33 == 1.0f);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction2.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction2.reduce();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean7 = fraction5.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction9 = fraction5.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = fraction8.negate();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.pow((int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean15 = fraction13.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.multiplyBy(fraction16);
        long long18 = fraction13.longValue();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction8.multiplyBy(fraction13);
        double double20 = fraction8.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction4.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.getFraction("1");
        org.apache.commons.lang3.math.Fraction fraction24 = fraction4.divideBy(fraction23);
        float float25 = fraction4.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + float25 + "' != '" + 1.0f + "'", float25 == 1.0f);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction1.reduce();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean7 = fraction5.equals((java.lang.Object) '4');
        int int8 = fraction5.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction5.multiplyBy(fraction13);
        java.lang.String str15 = fraction14.toString();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        float float18 = fraction17.floatValue();
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean21 = fraction19.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.multiplyBy(fraction22);
        int int24 = fraction22.intValue();
        int int25 = fraction22.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction22.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = fraction17.add(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction16.multiplyBy(fraction17);
        double double29 = fraction16.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction14.multiplyBy(fraction16);
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean33 = fraction31.equals((java.lang.Object) '4');
        int int34 = fraction31.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction31.invert();
        int int36 = fraction35.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction14.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction4.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction38.abs();
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean42 = fraction40.equals((java.lang.Object) '4');
        int int43 = fraction40.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction40.invert();
        int int45 = fraction44.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction46 = fraction39.add(fraction44);
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean49 = fraction47.equals((java.lang.Object) '4');
        int int50 = fraction47.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.invert();
        int int52 = fraction51.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean55 = fraction53.equals((java.lang.Object) '4');
        int int56 = fraction53.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction57 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean59 = fraction57.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction60 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction61 = fraction57.multiplyBy(fraction60);
        org.apache.commons.lang3.math.Fraction fraction62 = fraction53.multiplyBy(fraction61);
        java.lang.String str63 = fraction62.toString();
        org.apache.commons.lang3.math.Fraction fraction64 = fraction51.multiplyBy(fraction62);
        org.apache.commons.lang3.math.Fraction fraction65 = fraction44.multiplyBy(fraction64);
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean68 = fraction66.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction69 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction70 = fraction66.multiplyBy(fraction69);
        int int71 = fraction70.intValue();
        org.apache.commons.lang3.math.Fraction fraction72 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean74 = fraction72.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction75 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction76 = fraction72.multiplyBy(fraction75);
        int int77 = fraction75.intValue();
        int int78 = fraction75.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction79 = fraction75.reduce();
        org.apache.commons.lang3.math.Fraction fraction81 = fraction79.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction82 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean84 = fraction82.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction85 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction86 = fraction82.multiplyBy(fraction85);
        int int87 = fraction85.intValue();
        int int88 = fraction85.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction89 = fraction85.reduce();
        org.apache.commons.lang3.math.Fraction fraction91 = fraction89.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction92 = fraction91.invert();
        org.apache.commons.lang3.math.Fraction fraction93 = fraction81.multiplyBy(fraction91);
        org.apache.commons.lang3.math.Fraction fraction94 = fraction70.add(fraction81);
        org.apache.commons.lang3.math.Fraction fraction95 = fraction44.add(fraction94);
        java.lang.String str96 = fraction94.toString();
        org.apache.commons.lang3.math.Fraction fraction97 = fraction3.add(fraction94);
        long long98 = fraction97.longValue();
        byte byte99 = fraction97.byteValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1/3" + "'", str15, "1/3");
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 1.0f + "'", float18 == 1.0f);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.25d + "'", double29 == 0.25d);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1/3" + "'", str63, "1/3");
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(fraction75);
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertNotNull(fraction82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fraction85);
        org.junit.Assert.assertNotNull(fraction86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(fraction89);
        org.junit.Assert.assertNotNull(fraction91);
        org.junit.Assert.assertNotNull(fraction92);
        org.junit.Assert.assertNotNull(fraction93);
        org.junit.Assert.assertNotNull(fraction94);
        org.junit.Assert.assertNotNull(fraction95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "4/3" + "'", str96, "4/3");
        org.junit.Assert.assertNotNull(fraction97);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 53L + "'", long98 == 53L);
        org.junit.Assert.assertTrue("'" + byte99 + "' != '" + (byte) 53 + "'", byte99 == (byte) 53);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction0.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction28.negate();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction0.subtract(fraction28);
        org.apache.commons.lang3.math.Fraction fraction32 = fraction28.reduce();
        double double33 = fraction28.doubleValue();
        int int34 = fraction28.intValue();
        int int35 = fraction28.getProperNumerator();
        int int36 = fraction28.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 1.0d + "'", double33 == 1.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getReducedFraction(207, 10);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        int int3 = fraction1.intValue();
        java.lang.String str4 = fraction1.toString();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.abs();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 52 + "'", int3 == 52);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "52/1" + "'", str4, "52/1");
        org.junit.Assert.assertNotNull(fraction5);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        int int16 = fraction11.intValue();
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction20 = fraction17.add(fraction19);
        org.apache.commons.lang3.math.Fraction fraction22 = fraction17.pow(2);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction11.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int27 = fraction26.getProperWhole();
        java.lang.String str28 = fraction26.toString();
        long long29 = fraction26.longValue();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.negate();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction34 = fraction31.add(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction26.subtract(fraction33);
        double double36 = fraction35.doubleValue();
        int int37 = fraction35.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction11.subtract(fraction35);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "52/1" + "'", str28, "52/1");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 52L + "'", long29 == 52L);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 53.0d + "'", double36 == 53.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 53 + "'", int37 == 53);
        org.junit.Assert.assertNotNull(fraction38);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 10, (int) '4');
        long long3 = fraction2.longValue();
        java.lang.String str4 = fraction2.toString();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "10/52" + "'", str4, "10/52");
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("52/1");
        java.lang.String str2 = fraction1.toProperString();
        java.lang.String str3 = fraction1.toProperString();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction7 = fraction4.add(fraction6);
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction10 = fraction4.divideBy(fraction9);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.getFraction("1/1");
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.subtract(fraction12);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.getFraction(0.3333333333333333d);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction19.pow(1);
        int int24 = fraction19.intValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction15.divideBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction9.subtract(fraction19);
        org.apache.commons.lang3.math.Fraction fraction29 = fraction27.pow(0);
        double double30 = fraction27.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction1.divideBy(fraction27);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "52" + "'", str2, "52");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "52" + "'", str3, "52");
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-2.0d) + "'", double30 == (-2.0d));
        org.junit.Assert.assertNotNull(fraction31);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.add(fraction2);
        double double4 = fraction0.doubleValue();
        int int5 = fraction0.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.invert();
        float float7 = fraction6.floatValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.4d + "'", double4 == 0.4d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 2.5f + "'", float7 == 2.5f);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int17 = fraction16.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction16.abs();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction11.add(fraction16);
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction22 = fraction21.invert();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction22.pow((int) (short) 3);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction19.subtract(fraction22);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction19.pow(0);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction27);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction6.intValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        int int16 = fraction14.intValue();
        int int17 = fraction14.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.reduce();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction9.add(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction8.multiplyBy(fraction9);
        double double21 = fraction8.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction6.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction1.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction23.reduce();
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.getFraction("1/3");
        org.apache.commons.lang3.math.Fraction fraction28 = fraction27.reduce();
        int int29 = fraction23.compareTo(fraction27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction31 = fraction27.pow((int) (short) 27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: overflow: mulPos");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.25d + "'", double21 == 0.25d);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        byte byte2 = fraction1.byteValue();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + byte2 + "' != '" + (byte) 0 + "'", byte2 == (byte) 0);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction0.multiplyBy(fraction18);
        java.lang.String str20 = fraction0.toString();
        double double21 = fraction0.doubleValue();
        double double22 = fraction0.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.getFraction(0, 0, (int) 'a');
        double double27 = fraction26.doubleValue();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.lang3.math.Fraction fraction28 = fraction0.divideBy(fraction26);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: The fraction to divide by must not be zero");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "1/1" + "'", str20, "1/1");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("34/2");
        int int2 = fraction1.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean5 = fraction3.equals((java.lang.Object) '4');
        int int6 = fraction3.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean9 = fraction7.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = fraction7.multiplyBy(fraction10);
        org.apache.commons.lang3.math.Fraction fraction12 = fraction3.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction12.divideBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction15 = fraction14.reduce();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean18 = fraction16.equals((java.lang.Object) '4');
        int int19 = fraction16.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction20.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction24 = fraction20.multiplyBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = fraction16.multiplyBy(fraction24);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction27 = fraction25.divideBy(fraction26);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction27.reduce();
        int int29 = fraction28.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction14.subtract(fraction28);
        float float31 = fraction14.floatValue();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.getFraction(52, (int) (byte) 100, (int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        double double38 = fraction37.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        float float40 = fraction39.floatValue();
        org.apache.commons.lang3.math.Fraction fraction41 = fraction39.negate();
        float float42 = fraction41.floatValue();
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.TWO_THIRDS;
        boolean boolean44 = fraction41.equals((java.lang.Object) fraction43);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction37.multiplyBy(fraction43);
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean48 = fraction46.equals((java.lang.Object) '4');
        int int49 = fraction46.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction50 = fraction46.invert();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction46.negate();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction37.subtract(fraction51);
        org.apache.commons.lang3.math.Fraction fraction53 = fraction35.multiplyBy(fraction37);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction35.negate();
        int int55 = fraction14.compareTo(fraction35);
        org.apache.commons.lang3.math.Fraction fraction56 = fraction1.add(fraction35);
        int int57 = fraction35.getProperNumerator();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + float31 + "' != '" + 1.3333334f + "'", float31 == 1.3333334f);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-1.0d) + "'", double38 == (-1.0d));
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertTrue("'" + float40 + "' != '" + 1.0f + "'", float40 == 1.0f);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + float42 + "' != '" + (-1.0f) + "'", float42 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction(0, 35);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) ' ', 0, (int) (short) 110);
        org.junit.Assert.assertNotNull(fraction3);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction0.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean27 = fraction25.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = fraction25.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction30 = fraction28.negate();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction0.subtract(fraction28);
        int int32 = fraction28.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean35 = fraction33.equals((java.lang.Object) '4');
        int int36 = fraction33.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction37 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean39 = fraction37.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction41 = fraction37.multiplyBy(fraction40);
        org.apache.commons.lang3.math.Fraction fraction42 = fraction33.multiplyBy(fraction41);
        java.lang.String str43 = fraction42.toString();
        org.apache.commons.lang3.math.Fraction fraction44 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE;
        float float46 = fraction45.floatValue();
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean49 = fraction47.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.multiplyBy(fraction50);
        int int52 = fraction50.intValue();
        int int53 = fraction50.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction54 = fraction50.reduce();
        org.apache.commons.lang3.math.Fraction fraction55 = fraction45.add(fraction54);
        org.apache.commons.lang3.math.Fraction fraction56 = fraction44.multiplyBy(fraction45);
        double double57 = fraction44.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction42.multiplyBy(fraction44);
        org.apache.commons.lang3.math.Fraction fraction59 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean61 = fraction59.equals((java.lang.Object) '4');
        int int62 = fraction59.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction59.invert();
        int int64 = fraction63.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction65 = fraction42.multiplyBy(fraction63);
        org.apache.commons.lang3.math.Fraction fraction66 = fraction63.reduce();
        org.apache.commons.lang3.math.Fraction fraction67 = fraction63.invert();
        org.apache.commons.lang3.math.Fraction fraction70 = org.apache.commons.lang3.math.Fraction.getReducedFraction(52, (int) '#');
        boolean boolean71 = fraction67.equals((java.lang.Object) '#');
        org.apache.commons.lang3.math.Fraction fraction72 = fraction28.add(fraction67);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction67.negate();
        short short74 = fraction67.shortValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1/3" + "'", str43, "1/3");
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + 1.0f + "'", float46 == 1.0f);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.25d + "'", double57 == 0.25d);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(fraction65);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertNotNull(fraction67);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertTrue("'" + short74 + "' != '" + (short) 1 + "'", short74 == (short) 1);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean13 = fraction11.equals((java.lang.Object) '4');
        int int14 = fraction11.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.invert();
        org.apache.commons.lang3.math.Fraction fraction16 = fraction15.invert();
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 100, (int) (short) 10, (int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction15.subtract(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean24 = fraction22.equals((java.lang.Object) '4');
        int int25 = fraction22.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean28 = fraction26.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.multiplyBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction31 = fraction22.multiplyBy(fraction30);
        java.lang.String str32 = fraction31.toString();
        java.lang.String str33 = fraction31.toString();
        org.apache.commons.lang3.math.Fraction fraction34 = fraction20.add(fraction31);
        org.apache.commons.lang3.math.Fraction fraction35 = fraction9.divideBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean38 = fraction36.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction39 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction40 = fraction36.multiplyBy(fraction39);
        int int41 = fraction40.intValue();
        org.apache.commons.lang3.math.Fraction fraction42 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        int int50 = fraction48.intValue();
        int int51 = fraction48.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction43.add(fraction52);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction42.multiplyBy(fraction43);
        double double55 = fraction42.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction40.multiplyBy(fraction42);
        org.apache.commons.lang3.math.Fraction fraction58 = fraction40.pow(0);
        int int59 = fraction40.getNumerator();
        boolean boolean60 = fraction9.equals((java.lang.Object) int59);
        org.apache.commons.lang3.math.Fraction fraction61 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int62 = fraction61.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction63 = fraction9.subtract(fraction61);
        org.apache.commons.lang3.math.Fraction fraction64 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean66 = fraction64.equals((java.lang.Object) '4');
        int int67 = fraction64.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction68 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean70 = fraction68.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction71 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction72 = fraction68.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction73 = fraction64.multiplyBy(fraction72);
        java.lang.String str74 = fraction73.toString();
        java.lang.String str75 = fraction73.toString();
        org.apache.commons.lang3.math.Fraction fraction76 = fraction73.reduce();
        org.apache.commons.lang3.math.Fraction fraction77 = org.apache.commons.lang3.math.Fraction.ONE;
        float float78 = fraction77.floatValue();
        org.apache.commons.lang3.math.Fraction fraction79 = fraction77.abs();
        int int80 = fraction79.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction81 = fraction73.add(fraction79);
        int int82 = fraction73.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction83 = fraction9.divideBy(fraction73);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1/3" + "'", str32, "1/3");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "1/3" + "'", str33, "1/3");
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.25d + "'", double55 == 0.25d);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fraction61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(fraction63);
        org.junit.Assert.assertNotNull(fraction64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(fraction68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertNotNull(fraction72);
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "1/3" + "'", str74, "1/3");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "1/3" + "'", str75, "1/3");
        org.junit.Assert.assertNotNull(fraction76);
        org.junit.Assert.assertNotNull(fraction77);
        org.junit.Assert.assertTrue("'" + float78 + "' != '" + 1.0f + "'", float78 == 1.0f);
        org.junit.Assert.assertNotNull(fraction79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(fraction81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertNotNull(fraction83);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) 100.0f);
        int int2 = fraction1.getProperWhole();
        float float3 = fraction1.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction1.negate();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction4.invert();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int8 = fraction7.getProperWhole();
        java.lang.String str9 = fraction7.toString();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean12 = fraction10.equals((java.lang.Object) '4');
        int int13 = fraction10.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.invert();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction7.subtract(fraction14);
        boolean boolean16 = fraction4.equals((java.lang.Object) fraction7);
        org.apache.commons.lang3.math.Fraction fraction18 = fraction4.pow(2);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 100.0f + "'", float3 == 100.0f);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "52/1" + "'", str9, "52/1");
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction18);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        int int6 = fraction3.intValue();
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction3.multiplyBy(fraction19);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        boolean boolean3 = fraction0.equals((java.lang.Object) fraction1);
        int int4 = fraction1.intValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(fraction5);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction2.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction6 = fraction2.multiplyBy(fraction5);
        int int7 = fraction6.intValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE;
        float float10 = fraction9.floatValue();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean13 = fraction11.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.multiplyBy(fraction14);
        int int16 = fraction14.intValue();
        int int17 = fraction14.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.reduce();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction9.add(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = fraction8.multiplyBy(fraction9);
        double double21 = fraction8.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction6.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction6.abs();
        org.apache.commons.lang3.math.Fraction fraction24 = fraction1.add(fraction23);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean27 = fraction25.equals((java.lang.Object) '4');
        int int28 = fraction25.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction25.multiplyBy(fraction33);
        java.lang.String str35 = fraction34.toString();
        java.lang.String str36 = fraction34.toString();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction34.reduce();
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        float float39 = fraction38.floatValue();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction38.abs();
        int int41 = fraction40.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction34.add(fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.ONE;
        float float44 = fraction43.floatValue();
        org.apache.commons.lang3.math.Fraction fraction45 = fraction43.negate();
        float float46 = fraction45.floatValue();
        org.apache.commons.lang3.math.Fraction fraction47 = fraction34.divideBy(fraction45);
        int int48 = fraction45.intValue();
        boolean boolean49 = fraction1.equals((java.lang.Object) int48);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        int int51 = fraction50.getNumerator();
        java.lang.String str52 = fraction50.toString();
        org.apache.commons.lang3.math.Fraction fraction53 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction55 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction56 = fraction53.add(fraction55);
        org.apache.commons.lang3.math.Fraction fraction58 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        org.apache.commons.lang3.math.Fraction fraction59 = fraction53.divideBy(fraction58);
        org.apache.commons.lang3.math.Fraction fraction60 = fraction50.subtract(fraction53);
        org.apache.commons.lang3.math.Fraction fraction61 = fraction1.add(fraction53);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.25d + "'", double21 == 0.25d);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "1/3" + "'", str35, "1/3");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "1/3" + "'", str36, "1/3");
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + float39 + "' != '" + 1.0f + "'", float39 == 1.0f);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertTrue("'" + float44 + "' != '" + 1.0f + "'", float44 == 1.0f);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + float46 + "' != '" + (-1.0f) + "'", float46 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "3/4" + "'", str52, "3/4");
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertNotNull(fraction61);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 10, (int) (byte) 10, 1);
        double double4 = fraction3.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean7 = fraction5.equals((java.lang.Object) '4');
        int int8 = fraction5.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean11 = fraction9.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction13 = fraction9.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = fraction5.multiplyBy(fraction13);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean17 = fraction15.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.multiplyBy(fraction18);
        int int20 = fraction19.intValue();
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE;
        float float23 = fraction22.floatValue();
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean26 = fraction24.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction28 = fraction24.multiplyBy(fraction27);
        int int29 = fraction27.intValue();
        int int30 = fraction27.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction31 = fraction27.reduce();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction22.add(fraction31);
        org.apache.commons.lang3.math.Fraction fraction33 = fraction21.multiplyBy(fraction22);
        double double34 = fraction21.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction19.multiplyBy(fraction21);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction19.pow(0);
        org.apache.commons.lang3.math.Fraction fraction38 = fraction5.divideBy(fraction19);
        int int39 = fraction19.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction40 = fraction19.negate();
        boolean boolean41 = fraction3.equals((java.lang.Object) fraction40);
        org.apache.commons.lang3.math.Fraction fraction43 = org.apache.commons.lang3.math.Fraction.getFraction(0.25d);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction43.invert();
        long long45 = fraction44.longValue();
        org.apache.commons.lang3.math.Fraction fraction46 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction48 = fraction46.subtract(fraction47);
        float float49 = fraction47.floatValue();
        int int50 = fraction47.getProperNumerator();
        int int51 = fraction47.intValue();
        org.apache.commons.lang3.math.Fraction fraction52 = fraction47.invert();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction44.subtract(fraction47);
        int int54 = fraction53.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction55 = fraction3.divideBy(fraction53);
        org.apache.commons.lang3.math.Fraction fraction56 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean58 = fraction56.equals((java.lang.Object) '4');
        int int59 = fraction56.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction56.invert();
        int int61 = fraction60.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction62 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean64 = fraction62.equals((java.lang.Object) '4');
        int int65 = fraction62.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction66 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean68 = fraction66.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction69 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction70 = fraction66.multiplyBy(fraction69);
        org.apache.commons.lang3.math.Fraction fraction71 = fraction62.multiplyBy(fraction70);
        java.lang.String str72 = fraction71.toString();
        org.apache.commons.lang3.math.Fraction fraction73 = fraction60.multiplyBy(fraction71);
        org.apache.commons.lang3.math.Fraction fraction74 = fraction53.multiplyBy(fraction60);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 20.0d + "'", double4 == 20.0d);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 1.0f + "'", float23 == 1.0f);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.25d + "'", double34 == 0.25d);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 4L + "'", long45 == 4L);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertTrue("'" + float49 + "' != '" + 1.0f + "'", float49 == 1.0f);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(fraction55);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(fraction60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(fraction62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(fraction66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(fraction69);
        org.junit.Assert.assertNotNull(fraction70);
        org.junit.Assert.assertNotNull(fraction71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "1/3" + "'", str72, "1/3");
        org.junit.Assert.assertNotNull(fraction73);
        org.junit.Assert.assertNotNull(fraction74);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 100, 1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.TWO_FIFTHS;
        org.apache.commons.lang3.math.Fraction fraction5 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        org.apache.commons.lang3.math.Fraction fraction6 = fraction3.add(fraction5);
        double double7 = fraction3.doubleValue();
        int int8 = fraction3.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction2.multiplyBy(fraction3);
        java.lang.String str10 = fraction3.toString();
        int int11 = fraction3.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = fraction3.abs();
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.4d + "'", double7 == 0.4d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "2/5" + "'", str10, "2/5");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(fraction12);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        float float1 = fraction0.floatValue();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.negate();
        float float3 = fraction2.floatValue();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        float float8 = fraction7.floatValue();
        org.apache.commons.lang3.math.Fraction fraction9 = fraction7.abs();
        org.apache.commons.lang3.math.Fraction fraction10 = fraction4.divideBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        int int20 = fraction17.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction12.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction11.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction24 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction26 = fraction24.subtract(fraction25);
        boolean boolean27 = fraction23.equals((java.lang.Object) fraction25);
        org.apache.commons.lang3.math.Fraction fraction28 = fraction4.add(fraction25);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction32.negate();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction4.subtract(fraction32);
        org.apache.commons.lang3.math.Fraction fraction36 = fraction32.reduce();
        double double37 = fraction32.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction2.subtract(fraction32);
        org.apache.commons.lang3.math.Fraction fraction40 = fraction32.pow((int) (byte) 0);
        float float41 = fraction32.floatValue();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction32.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 1.0f + "'", float1 == 1.0f);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + (-1.0f) + "'", float3 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 1.0f + "'", float8 == 1.0f);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertTrue("'" + float41 + "' != '" + 1.0f + "'", float41 == 1.0f);
        org.junit.Assert.assertNotNull(fraction42);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.multiplyBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.negate();
        float float6 = fraction3.floatValue();
        int int7 = fraction3.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction3.reduce();
        float float9 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        org.apache.commons.lang3.math.Fraction fraction15 = fraction11.negate();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction15.pow((int) ' ');
        int int18 = fraction3.compareTo(fraction17);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction0.invert();
        int int5 = fraction4.getNumerator();
        float float6 = fraction4.floatValue();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int9 = fraction8.getProperNumerator();
        int int10 = fraction4.compareTo(fraction8);
        int int11 = fraction8.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean14 = fraction12.equals((java.lang.Object) '4');
        int int15 = fraction12.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        org.apache.commons.lang3.math.Fraction fraction21 = fraction12.multiplyBy(fraction20);
        org.apache.commons.lang3.math.Fraction fraction22 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction23 = fraction21.divideBy(fraction22);
        java.lang.String str24 = fraction22.toString();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction22.abs();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction8.subtract(fraction25);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "1/4" + "'", str24, "1/4");
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        int int2 = fraction1.getProperNumerator();
        int int3 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction4 = fraction1.reduce();
        int int5 = fraction1.intValue();
        java.lang.String str6 = fraction1.toProperString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "-1" + "'", str6, "-1");
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        java.lang.String str10 = fraction9.toString();
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE;
        float float13 = fraction12.floatValue();
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean16 = fraction14.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction17 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction18 = fraction14.multiplyBy(fraction17);
        int int19 = fraction17.intValue();
        int int20 = fraction17.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction21 = fraction17.reduce();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction12.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction23 = fraction11.multiplyBy(fraction12);
        double double24 = fraction11.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction9.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction26 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean28 = fraction26.equals((java.lang.Object) '4');
        int int29 = fraction26.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction30 = fraction26.invert();
        int int31 = fraction30.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction32 = fraction9.multiplyBy(fraction30);
        org.apache.commons.lang3.math.Fraction fraction33 = fraction30.reduce();
        int int34 = fraction30.intValue();
        org.apache.commons.lang3.math.Fraction fraction35 = fraction30.negate();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1/3" + "'", str10, "1/3");
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 1.0f + "'", float13 == 1.0f);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.25d + "'", double24 == 0.25d);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(fraction35);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        org.apache.commons.lang3.math.Fraction fraction2 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) 43, 208);
        org.junit.Assert.assertNotNull(fraction2);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction((double) '4');
        int int2 = fraction1.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean5 = fraction3.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction7 = fraction3.multiplyBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction8 = fraction1.add(fraction7);
        int int9 = fraction8.intValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        float float11 = fraction10.floatValue();
        org.apache.commons.lang3.math.Fraction fraction12 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean14 = fraction12.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction15 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction16 = fraction12.multiplyBy(fraction15);
        int int17 = fraction15.intValue();
        int int18 = fraction15.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction19 = fraction15.reduce();
        org.apache.commons.lang3.math.Fraction fraction20 = fraction10.add(fraction19);
        int int21 = fraction19.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction22 = fraction19.abs();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction8.subtract(fraction22);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.getFraction(52, (int) (byte) 100, (int) (short) 1);
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1L));
        double double30 = fraction29.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction31 = org.apache.commons.lang3.math.Fraction.ONE;
        float float32 = fraction31.floatValue();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction31.negate();
        float float34 = fraction33.floatValue();
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.TWO_THIRDS;
        boolean boolean36 = fraction33.equals((java.lang.Object) fraction35);
        org.apache.commons.lang3.math.Fraction fraction37 = fraction29.multiplyBy(fraction35);
        org.apache.commons.lang3.math.Fraction fraction38 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean40 = fraction38.equals((java.lang.Object) '4');
        int int41 = fraction38.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction42 = fraction38.invert();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction38.negate();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction29.subtract(fraction43);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction27.multiplyBy(fraction29);
        org.apache.commons.lang3.math.Fraction fraction46 = fraction22.subtract(fraction45);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 1.0f + "'", float11 == 1.0f);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertNotNull(fraction31);
        org.junit.Assert.assertTrue("'" + float32 + "' != '" + 1.0f + "'", float32 == 1.0f);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertTrue("'" + float34 + "' != '" + (-1.0f) + "'", float34 == (-1.0f));
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 1, 10, (int) '#');
        org.apache.commons.lang3.math.Fraction fraction4 = fraction3.invert();
        org.apache.commons.lang3.math.Fraction fraction6 = org.apache.commons.lang3.math.Fraction.getFraction((double) (-1));
        java.lang.String str7 = fraction6.toProperString();
        org.apache.commons.lang3.math.Fraction fraction8 = fraction3.divideBy(fraction6);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction3.negate();
        int int10 = fraction9.intValue();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "-1" + "'", str7, "-1");
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.getFraction("52/1");
        int int2 = fraction1.getProperWhole();
        int int3 = fraction1.getDenominator();
        java.lang.String str4 = fraction1.toProperString();
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 52 + "'", int2 == 52);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "52" + "'", str4, "52");
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int1 = fraction0.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction3 = fraction0.abs();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean6 = fraction4.equals((java.lang.Object) '4');
        int int7 = fraction4.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean10 = fraction8.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction12 = fraction8.multiplyBy(fraction11);
        org.apache.commons.lang3.math.Fraction fraction13 = fraction4.multiplyBy(fraction12);
        org.apache.commons.lang3.math.Fraction fraction14 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction15 = fraction13.divideBy(fraction14);
        org.apache.commons.lang3.math.Fraction fraction16 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean18 = fraction16.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction19 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction20 = fraction16.multiplyBy(fraction19);
        int int21 = fraction19.intValue();
        double double22 = fraction19.doubleValue();
        org.apache.commons.lang3.math.Fraction fraction23 = fraction15.divideBy(fraction19);
        int int24 = fraction19.getDenominator();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction19.reduce();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction3.subtract(fraction19);
        org.apache.commons.lang3.math.Fraction fraction27 = fraction19.abs();
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE;
        float float30 = fraction29.floatValue();
        boolean boolean31 = fraction28.equals((java.lang.Object) fraction29);
        java.lang.String str32 = fraction29.toProperString();
        org.apache.commons.lang3.math.Fraction fraction33 = fraction19.divideBy(fraction29);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 3 + "'", int1 == 3);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertNotNull(fraction12);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertNotNull(fraction15);
        org.junit.Assert.assertNotNull(fraction16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + float30 + "' != '" + 1.0f + "'", float30 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1" + "'", str32, "1");
        org.junit.Assert.assertNotNull(fraction33);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.getFraction((int) (short) 52, (int) (byte) 100, (int) 'a');
        float float4 = fraction3.floatValue();
        java.lang.String str5 = fraction3.toString();
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 53.03093f + "'", float4 == 53.03093f);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "5144/97" + "'", str5, "5144/97");
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        float float2 = fraction1.floatValue();
        boolean boolean3 = fraction0.equals((java.lang.Object) fraction1);
        long long4 = fraction1.longValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction1.negate();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction5.negate();
        org.apache.commons.lang3.math.Fraction fraction9 = org.apache.commons.lang3.math.Fraction.getFraction((int) (byte) -1, 5);
        int int10 = fraction9.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction11 = fraction6.divideBy(fraction9);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 1.0f + "'", float2 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(fraction11);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean2 = fraction0.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE;
        float float4 = fraction3.floatValue();
        org.apache.commons.lang3.math.Fraction fraction5 = fraction3.abs();
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.divideBy(fraction3);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction8 = org.apache.commons.lang3.math.Fraction.ONE;
        float float9 = fraction8.floatValue();
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean12 = fraction10.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction13 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction14 = fraction10.multiplyBy(fraction13);
        int int15 = fraction13.intValue();
        int int16 = fraction13.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction17 = fraction13.reduce();
        org.apache.commons.lang3.math.Fraction fraction18 = fraction8.add(fraction17);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction7.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction21 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction22 = fraction20.subtract(fraction21);
        boolean boolean23 = fraction19.equals((java.lang.Object) fraction21);
        org.apache.commons.lang3.math.Fraction fraction24 = fraction0.add(fraction21);
        org.apache.commons.lang3.math.Fraction fraction25 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean27 = fraction25.equals((java.lang.Object) '4');
        int int28 = fraction25.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction29 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean31 = fraction29.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction32 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction33 = fraction29.multiplyBy(fraction32);
        org.apache.commons.lang3.math.Fraction fraction34 = fraction25.multiplyBy(fraction33);
        org.apache.commons.lang3.math.Fraction fraction35 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction36 = org.apache.commons.lang3.math.Fraction.ONE;
        float float37 = fraction36.floatValue();
        boolean boolean38 = fraction35.equals((java.lang.Object) fraction36);
        long long39 = fraction36.longValue();
        int int40 = fraction25.compareTo(fraction36);
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.THREE_FIFTHS;
        int int42 = fraction41.getNumerator();
        org.apache.commons.lang3.math.Fraction fraction43 = fraction41.abs();
        org.apache.commons.lang3.math.Fraction fraction44 = fraction36.add(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = fraction24.divideBy(fraction44);
        org.apache.commons.lang3.math.Fraction fraction46 = fraction45.abs();
        org.apache.commons.lang3.math.Fraction fraction47 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean49 = fraction47.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction50 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction51 = fraction47.multiplyBy(fraction50);
        int int52 = fraction50.intValue();
        int int53 = fraction50.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction54 = fraction50.reduce();
        org.apache.commons.lang3.math.Fraction fraction56 = fraction54.pow((int) (byte) -1);
        org.apache.commons.lang3.math.Fraction fraction57 = fraction56.invert();
        org.apache.commons.lang3.math.Fraction fraction58 = fraction56.invert();
        org.apache.commons.lang3.math.Fraction fraction59 = fraction56.invert();
        org.apache.commons.lang3.math.Fraction fraction60 = fraction46.multiplyBy(fraction56);
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 1.0f + "'", float4 == 1.0f);
        org.junit.Assert.assertNotNull(fraction5);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 1.0f + "'", float9 == 1.0f);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fraction13);
        org.junit.Assert.assertNotNull(fraction14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(fraction17);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertNotNull(fraction21);
        org.junit.Assert.assertNotNull(fraction22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fraction24);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(fraction29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(fraction32);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertNotNull(fraction35);
        org.junit.Assert.assertNotNull(fraction36);
        org.junit.Assert.assertTrue("'" + float37 + "' != '" + 1.0f + "'", float37 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(fraction43);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertNotNull(fraction46);
        org.junit.Assert.assertNotNull(fraction47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertNotNull(fraction56);
        org.junit.Assert.assertNotNull(fraction57);
        org.junit.Assert.assertNotNull(fraction58);
        org.junit.Assert.assertNotNull(fraction59);
        org.junit.Assert.assertNotNull(fraction60);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction1 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction2 = fraction0.subtract(fraction1);
        org.apache.commons.lang3.math.Fraction fraction3 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean4 = fraction0.equals((java.lang.Object) fraction3);
        org.apache.commons.lang3.math.Fraction fraction6 = fraction0.pow((int) (byte) 1);
        org.apache.commons.lang3.math.Fraction fraction7 = fraction0.reduce();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertNotNull(fraction1);
        org.junit.Assert.assertNotNull(fraction2);
        org.junit.Assert.assertNotNull(fraction3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fraction6);
        org.junit.Assert.assertNotNull(fraction7);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.apache.commons.lang3.math.Fraction fraction0 = org.apache.commons.lang3.math.Fraction.ONE;
        boolean boolean2 = fraction0.equals((java.lang.Object) '4');
        int int3 = fraction0.getProperNumerator();
        org.apache.commons.lang3.math.Fraction fraction4 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean6 = fraction4.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction7 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction8 = fraction4.multiplyBy(fraction7);
        org.apache.commons.lang3.math.Fraction fraction9 = fraction0.multiplyBy(fraction8);
        org.apache.commons.lang3.math.Fraction fraction10 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction11 = org.apache.commons.lang3.math.Fraction.ONE;
        float float12 = fraction11.floatValue();
        boolean boolean13 = fraction10.equals((java.lang.Object) fraction11);
        long long14 = fraction11.longValue();
        int int15 = fraction0.compareTo(fraction11);
        org.apache.commons.lang3.math.Fraction fraction18 = org.apache.commons.lang3.math.Fraction.getReducedFraction((int) (short) 0, 100);
        org.apache.commons.lang3.math.Fraction fraction19 = fraction0.multiplyBy(fraction18);
        org.apache.commons.lang3.math.Fraction fraction20 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean22 = fraction20.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction23 = org.apache.commons.lang3.math.Fraction.ONE;
        float float24 = fraction23.floatValue();
        org.apache.commons.lang3.math.Fraction fraction25 = fraction23.abs();
        org.apache.commons.lang3.math.Fraction fraction26 = fraction20.divideBy(fraction23);
        org.apache.commons.lang3.math.Fraction fraction27 = org.apache.commons.lang3.math.Fraction.ONE_QUARTER;
        org.apache.commons.lang3.math.Fraction fraction28 = org.apache.commons.lang3.math.Fraction.ONE;
        float float29 = fraction28.floatValue();
        org.apache.commons.lang3.math.Fraction fraction30 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean32 = fraction30.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction33 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction34 = fraction30.multiplyBy(fraction33);
        int int35 = fraction33.intValue();
        int int36 = fraction33.getProperWhole();
        org.apache.commons.lang3.math.Fraction fraction37 = fraction33.reduce();
        org.apache.commons.lang3.math.Fraction fraction38 = fraction28.add(fraction37);
        org.apache.commons.lang3.math.Fraction fraction39 = fraction27.multiplyBy(fraction28);
        org.apache.commons.lang3.math.Fraction fraction40 = org.apache.commons.lang3.math.Fraction.THREE_QUARTERS;
        org.apache.commons.lang3.math.Fraction fraction41 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction42 = fraction40.subtract(fraction41);
        boolean boolean43 = fraction39.equals((java.lang.Object) fraction41);
        org.apache.commons.lang3.math.Fraction fraction44 = fraction20.add(fraction41);
        org.apache.commons.lang3.math.Fraction fraction45 = org.apache.commons.lang3.math.Fraction.ONE_THIRD;
        boolean boolean47 = fraction45.equals((java.lang.Object) 52);
        org.apache.commons.lang3.math.Fraction fraction48 = org.apache.commons.lang3.math.Fraction.ONE;
        org.apache.commons.lang3.math.Fraction fraction49 = fraction45.multiplyBy(fraction48);
        org.apache.commons.lang3.math.Fraction fraction50 = fraction48.negate();
        org.apache.commons.lang3.math.Fraction fraction51 = fraction20.subtract(fraction48);
        org.apache.commons.lang3.math.Fraction fraction52 = fraction48.reduce();
        org.apache.commons.lang3.math.Fraction fraction53 = fraction19.subtract(fraction48);
        org.apache.commons.lang3.math.Fraction fraction54 = fraction19.negate();
        byte byte55 = fraction19.byteValue();
        org.junit.Assert.assertNotNull(fraction0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(fraction4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fraction7);
        org.junit.Assert.assertNotNull(fraction8);
        org.junit.Assert.assertNotNull(fraction9);
        org.junit.Assert.assertNotNull(fraction10);
        org.junit.Assert.assertNotNull(fraction11);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(fraction18);
        org.junit.Assert.assertNotNull(fraction19);
        org.junit.Assert.assertNotNull(fraction20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(fraction23);
        org.junit.Assert.assertTrue("'" + float24 + "' != '" + 1.0f + "'", float24 == 1.0f);
        org.junit.Assert.assertNotNull(fraction25);
        org.junit.Assert.assertNotNull(fraction26);
        org.junit.Assert.assertNotNull(fraction27);
        org.junit.Assert.assertNotNull(fraction28);
        org.junit.Assert.assertTrue("'" + float29 + "' != '" + 1.0f + "'", float29 == 1.0f);
        org.junit.Assert.assertNotNull(fraction30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(fraction33);
        org.junit.Assert.assertNotNull(fraction34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(fraction37);
        org.junit.Assert.assertNotNull(fraction38);
        org.junit.Assert.assertNotNull(fraction39);
        org.junit.Assert.assertNotNull(fraction40);
        org.junit.Assert.assertNotNull(fraction41);
        org.junit.Assert.assertNotNull(fraction42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fraction44);
        org.junit.Assert.assertNotNull(fraction45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fraction48);
        org.junit.Assert.assertNotNull(fraction49);
        org.junit.Assert.assertNotNull(fraction50);
        org.junit.Assert.assertNotNull(fraction51);
        org.junit.Assert.assertNotNull(fraction52);
        org.junit.Assert.assertNotNull(fraction53);
        org.junit.Assert.assertNotNull(fraction54);
        org.junit.Assert.assertTrue("'" + byte55 + "' != '" + (byte) 0 + "'", byte55 == (byte) 0);
    }
}

