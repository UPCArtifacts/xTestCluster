import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.increment((double) (byte) 0);
        long long8 = variance1.getN();
        long long9 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 2L + "'", long9 == 2L);
        org.junit.Assert.assertNotNull(variance10);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double[] doubleArray70 = null;
        variance46.setData(doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double72 = variance46.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        boolean boolean71 = variance69.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        boolean boolean79 = variance73.equals((java.lang.Object) 10);
        variance73.increment((double) (short) 10);
        variance73.increment((double) (byte) 10);
        variance73.increment((double) (short) 100);
        variance73.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance73);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance88.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance89);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(variance89);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance8.setData(doubleArray13, 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double double17 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        double double70 = variance12.evaluate(doubleArray61, (double) (-1));
        variance12.increment(0.0d);
        boolean boolean73 = variance1.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long75 = variance1.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        boolean boolean27 = variance9.isBiasCorrected();
        variance9.setBiasCorrected(true);
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        boolean boolean38 = variance9.equals((java.lang.Object) variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        java.lang.Class<?> wildcardClass40 = variance6.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance44.copy();
        double[] doubleArray53 = variance52.getData();
        variance52.setBiasCorrected(false);
        variance52.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        boolean boolean59 = variance38.equals((java.lang.Object) variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance61);
        variance68.clear();
        variance68.clear();
        boolean boolean71 = variance68.isBiasCorrected();
        boolean boolean72 = variance68.isBiasCorrected();
        boolean boolean73 = variance38.equals((java.lang.Object) boolean72);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance22.increment((double) (-1.0f));
        boolean boolean25 = variance22.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean28 = variance27.isBiasCorrected();
        double[] doubleArray30 = new double[] { 100 };
        variance27.incrementAll(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        double double81 = variance35.evaluate(doubleArray75);
        variance33.setData(doubleArray75);
        double double84 = variance27.evaluate(doubleArray75, (double) (byte) -1);
        double double88 = variance22.evaluate(doubleArray75, (double) 100, 0, (int) (byte) 1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        boolean boolean83 = variance4.equals((java.lang.Object) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance4.copy();
        boolean boolean85 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(variance84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        variance24.clear();
        boolean boolean31 = variance19.equals((java.lang.Object) variance24);
        variance24.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        double double81 = variance35.evaluate(doubleArray75);
        variance24.incrementAll(doubleArray75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance24);
        // The following exception was thrown during execution in test generation
        try {
            double double84 = variance24.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        boolean boolean74 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance45.copy();
        java.lang.Class<?> wildcardClass76 = variance75.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double63 = variance20.evaluate(doubleArray58, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance65.evaluate(doubleArray74);
        variance12.setData(doubleArray74);
        variance10.incrementAll(doubleArray74, 0, (int) (short) 0);
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance10);
        long long83 = variance10.getN();
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        double[] doubleArray12 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance24.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        variance34.increment(0.0d);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        double double87 = variance65.evaluate(doubleArray84);
        double double89 = variance46.evaluate(doubleArray84, (double) 100.0f);
        double double91 = variance34.evaluate(doubleArray84, (double) (short) 1);
        double double92 = variance24.evaluate(doubleArray84);
        double double93 = variance19.evaluate(doubleArray84);
        variance4.incrementAll(doubleArray84);
        java.lang.Object obj95 = null;
        boolean boolean96 = variance4.equals(obj95);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        double[] doubleArray31 = variance11.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance11.incrementAll(doubleArray53);
        double double59 = variance9.evaluate(doubleArray53, (double) (byte) -1);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        double[] doubleArray6 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        boolean boolean12 = variance11.isBiasCorrected();
        double[] doubleArray13 = variance11.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        double double15 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        variance17.clear();
        variance17.increment((double) (short) 1);
        double double24 = variance17.getResult();
        double double25 = variance17.getResult();
        variance17.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance28.copy();
        double double30 = variance29.getResult();
        long long31 = variance29.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        variance53.setData(doubleArray64);
        variance34.incrementAll(doubleArray64);
        variance29.incrementAll(doubleArray64);
        variance17.setData(doubleArray64, (int) (byte) 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = variance11.evaluate(doubleArray64, 1617.0666666666664d, 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.getResult();
        double double32 = variance28.evaluate();
        java.lang.Class<?> wildcardClass33 = variance28.getClass();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double47 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance33.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance33);
        double[] doubleArray37 = variance33.getData();
        variance33.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray37);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        double[] doubleArray11 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) (-1L));
        double[] doubleArray16 = variance13.getData();
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance13.evaluate(doubleArray39, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double48 = variance10.evaluate(doubleArray39, (double) (short) 1, 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        long long4 = variance1.getN();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double double7 = variance1.getResult();
        long long8 = variance1.getN();
        double double9 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        double[] doubleArray71 = variance48.getData();
        double double72 = variance48.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertTrue(Double.isNaN(double72));
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        double[] doubleArray23 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNull(doubleArray23);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long53 = variance52.getN();
        long long54 = variance52.getN();
        variance52.clear();
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.clear();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance63.copy();
        boolean boolean68 = variance1.equals((java.lang.Object) variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance70.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        boolean boolean71 = variance69.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance69.copy();
        long long73 = variance69.getN();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 1L + "'", long73 == 1L);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray15 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance19.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        variance19.incrementAll(doubleArray39);
        variance17.setData(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        variance44.increment((double) (-1));
        double double47 = variance44.evaluate();
        boolean boolean48 = variance44.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance55);
        boolean boolean58 = variance50.equals((java.lang.Object) variance57);
        boolean boolean60 = variance57.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = variance57.copy();
        double[] doubleArray67 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance57.setData(doubleArray67);
        double double72 = variance44.evaluate(doubleArray67, 1617.066666666667d, (int) (byte) 1, 0);
        double double74 = variance1.evaluate(doubleArray67, 2200.222222222222d);
        java.lang.Class<?> wildcardClass75 = doubleArray67.getClass();
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 5100.5d + "'", double47 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(variance61);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double72));
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        double[] doubleArray5 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        variance55.incrementAll(doubleArray75);
        variance52.setData(doubleArray75);
        double double81 = variance6.evaluate(doubleArray75, 1.0d);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 5100.5d + "'", double81 == 5100.5d);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        boolean boolean71 = variance69.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance69.copy();
        boolean boolean73 = variance69.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean25 = variance24.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        double double73 = variance27.evaluate(doubleArray67);
        long long74 = variance27.getN();
        variance27.increment(1617.066666666667d);
        boolean boolean77 = variance24.equals((java.lang.Object) 1617.066666666667d);
        long long78 = variance24.getN();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        double[] doubleArray74 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.increment(5100.5d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        long long48 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance1.copy();
        variance49.increment(3400.3333333333335d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance49);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        double double50 = variance4.evaluate(doubleArray44);
        variance1.incrementAll(doubleArray44);
        variance1.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        variance58.setBiasCorrected(false);
        boolean boolean66 = variance58.isBiasCorrected();
        boolean boolean67 = variance1.equals((java.lang.Object) boolean66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance1.copy();
        long long69 = variance1.getN();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 3L + "'", long69 == 3L);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance34.copy();
        boolean boolean38 = variance37.isBiasCorrected();
        variance37.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        variance50.incrementAll(doubleArray70);
        variance48.setData(doubleArray70);
        double double76 = variance44.evaluate(doubleArray70, (double) (short) 10);
        variance37.setData(doubleArray70, 1, 1);
        double double80 = variance14.evaluate(doubleArray70);
        variance8.incrementAll(doubleArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = variance8.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment(2550.250000000233d);
        java.lang.Class<?> wildcardClass8 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        double[] doubleArray14 = variance13.getData();
        double[] doubleArray15 = variance13.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean22 = variance21.isBiasCorrected();
        double[] doubleArray24 = new double[] { 100 };
        variance21.incrementAll(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        variance27.setData(doubleArray69);
        double double78 = variance21.evaluate(doubleArray69, (double) (byte) -1);
        double double80 = variance17.evaluate(doubleArray69, (double) 1.0f);
        boolean boolean81 = variance13.equals((java.lang.Object) variance17);
        double double82 = variance17.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance17.copy();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNull(doubleArray14);
        org.junit.Assert.assertNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertNotNull(variance84);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        long long62 = variance15.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance64);
        java.lang.Class<?> wildcardClass66 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double double51 = variance50.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance50.copy();
        long long53 = variance50.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        java.lang.Class<?> wildcardClass11 = variance10.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        variance13.setData(doubleArray55);
        variance1.setData(doubleArray55, (int) (byte) 1, 0);
        double[] doubleArray66 = variance1.getData();
        variance1.clear();
        double[] doubleArray68 = variance1.getData();
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[]");
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean52 = variance51.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        boolean boolean59 = variance54.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance61);
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        boolean boolean67 = variance51.equals((java.lang.Object) variance60);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        double[] doubleArray11 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean13 = variance12.isBiasCorrected();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance56.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        boolean boolean89 = variance83.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance83.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = variance83.copy();
        boolean boolean92 = variance4.equals((java.lang.Object) variance91);
        double double93 = variance4.getResult();
        boolean boolean94 = variance4.isBiasCorrected();
        variance4.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(variance90);
        org.junit.Assert.assertNotNull(variance91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        boolean boolean8 = variance1.isBiasCorrected();
        double[] doubleArray9 = variance1.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double10 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        boolean boolean13 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        java.lang.Class<?> wildcardClass21 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        // The following exception was thrown during execution in test generation
        try {
            double double33 = variance31.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance31);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        double[] doubleArray15 = new double[] { (-1), 100.0f };
        variance11.incrementAll(doubleArray15);
        long long17 = variance11.getN();
        long long18 = variance11.getN();
        long long19 = variance11.getN();
        variance11.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        double double23 = variance1.getResult();
        double[] doubleArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double27 = variance1.evaluate(doubleArray24, (int) (byte) 0, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2025.0d + "'", double23 == 2025.0d);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance8.copy();
        double[] doubleArray17 = variance16.getData();
        variance16.setBiasCorrected(false);
        variance16.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        boolean boolean29 = variance23.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long33 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        double double57 = variance35.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double83 = variance58.evaluate(doubleArray79);
        double double84 = variance32.evaluate(doubleArray79);
        variance30.setData(doubleArray79);
        variance16.incrementAll(doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            double double90 = variance1.evaluate(doubleArray79, (double) 3L, (int) (byte) 100, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray6 = variance5.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double7 = variance5.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNull(doubleArray6);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        variance28.increment(0.0d);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double85 = variance28.evaluate(doubleArray78, (double) (short) 1);
        double double86 = variance18.evaluate(doubleArray78);
        double double87 = variance13.evaluate(doubleArray78);
        double double89 = variance6.evaluate(doubleArray78, 1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance90);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.250000000233d + "'", double89 == 2550.250000000233d);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        variance7.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        double double68 = variance46.evaluate(doubleArray65);
        double double70 = variance27.evaluate(doubleArray65, (double) 100.0f);
        double double71 = variance25.evaluate(doubleArray65);
        variance23.setData(doubleArray65);
        double double74 = variance21.evaluate(doubleArray65, (double) ' ');
        variance17.setData(doubleArray65);
        double double77 = variance7.evaluate(doubleArray65, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray65, 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean20 = variance1.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance22.setData(doubleArray64);
        variance1.incrementAll(doubleArray64);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        double double24 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        variance26.increment(0.0d);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        double double83 = variance26.evaluate(doubleArray76, (double) (short) 1);
        double double85 = variance1.evaluate(doubleArray76, (double) 0.0f);
        long long86 = variance1.getN();
        variance1.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance1.copy();
        variance89.clear();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertNotNull(variance89);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        double double11 = variance10.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        boolean boolean49 = variance1.isBiasCorrected();
        // The following exception was thrown during execution in test generation
        try {
            double double50 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        double[] doubleArray36 = variance1.getData();
        variance1.increment(2266.8888888888887d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        // The following exception was thrown during execution in test generation
        try {
            double double6 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        variance43.increment(0.0d);
        boolean boolean68 = variance4.equals((java.lang.Object) 0.0d);
        variance4.increment(100.0d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance28.copy();
        double double30 = variance29.getResult();
        long long31 = variance29.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance29.copy();
        variance29.increment(2550.250000000233d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        double[] doubleArray42 = variance41.getData();
        double[] doubleArray43 = variance41.getData();
        java.lang.Class<?> wildcardClass44 = variance41.getClass();
        boolean boolean45 = variance29.equals((java.lang.Object) wildcardClass44);
        boolean boolean46 = variance27.equals((java.lang.Object) boolean45);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue(Double.isNaN(double30));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNull(doubleArray42);
        org.junit.Assert.assertNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        long long37 = variance32.getN();
        variance32.clear();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 1L + "'", long37 == 1L);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        variance32.incrementAll(doubleArray52);
        variance1.setData(doubleArray52);
        boolean boolean57 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment(1617.0666666666664d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance76.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance76.copy();
        long long80 = variance76.getN();
        long long81 = variance76.getN();
        double double82 = variance76.getResult();
        boolean boolean83 = variance14.equals((java.lang.Object) variance76);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 1L + "'", long80 == 1L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 1L + "'", long81 == 1L);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.0d + "'", double82 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        variance1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance11.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance68.evaluate(doubleArray77);
        variance15.setData(doubleArray77);
        variance11.setData(doubleArray77);
        variance1.incrementAll(doubleArray77);
        variance1.increment((double) (byte) 100);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        double[] doubleArray30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance35);
        double[] doubleArray38 = variance37.getData();
        double[] doubleArray39 = variance37.getData();
        java.lang.Object obj40 = null;
        boolean boolean41 = variance37.equals(obj40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        boolean boolean49 = variance43.equals((java.lang.Object) 10);
        variance43.increment((double) (short) 10);
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance56.incrementAll(doubleArray76);
        variance54.setData(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance54);
        variance81.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance85.increment((double) 10);
        variance85.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance85);
        double double90 = variance85.getResult();
        double[] doubleArray91 = variance85.getData();
        double double93 = variance43.evaluate(doubleArray91, 1347.5555555555554d);
        double double94 = variance37.evaluate(doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance27.evaluate(doubleArray30, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.250000000233d + "'", double93 == 2550.250000000233d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        long long5 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance6);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = variance15.equals(obj33);
        variance15.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance43);
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance47.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        variance47.incrementAll(doubleArray67);
        variance43.incrementAll(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        boolean boolean78 = variance73.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean81 = variance80.isBiasCorrected();
        double[] doubleArray83 = new double[] { 100 };
        variance80.incrementAll(doubleArray83);
        double double85 = variance73.evaluate(doubleArray83);
        double double87 = variance43.evaluate(doubleArray83, 1347.5555555555554d);
        double double88 = variance13.evaluate(doubleArray83);
        variance13.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        boolean boolean54 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance60.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double[] doubleArray86 = new double[] { (-1), 100.0f };
        variance82.incrementAll(doubleArray86);
        double double88 = variance71.evaluate(doubleArray86);
        variance66.incrementAll(doubleArray86);
        variance64.setData(doubleArray86);
        double double92 = variance60.evaluate(doubleArray86, (double) (short) 10);
        variance53.setData(doubleArray86, 1, 1);
        variance48.setData(doubleArray86);
        org.apache.commons.math.stat.descriptive.moment.Variance variance97 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance98 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance97);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance5.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double double14 = variance9.getResult();
        double[] doubleArray20 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double22 = variance9.evaluate(doubleArray20, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            variance5.incrementAll(doubleArray20, (int) ' ', (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue(Double.isNaN(double14));
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1030428.01d + "'", double22 == 1030428.01d);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance87.increment((double) 0);
        java.lang.Class<?> wildcardClass90 = variance87.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        double double50 = variance4.evaluate(doubleArray44);
        variance1.incrementAll(doubleArray44);
        variance1.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        variance58.setBiasCorrected(false);
        boolean boolean66 = variance58.isBiasCorrected();
        boolean boolean67 = variance1.equals((java.lang.Object) boolean66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance1.copy();
        variance68.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(variance68);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean40 = variance29.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean23 = variance22.isBiasCorrected();
        double[] doubleArray25 = new double[] { 100 };
        variance22.incrementAll(doubleArray25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance22);
        double double28 = variance18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance30);
        variance30.clear();
        double double39 = variance30.getResult();
        boolean boolean40 = variance30.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        variance66.setData(doubleArray75);
        variance30.incrementAll(doubleArray75);
        double double80 = variance18.evaluate(doubleArray75, 25.0d);
        // The following exception was thrown during execution in test generation
        try {
            variance4.incrementAll(doubleArray75, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        variance13.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double77 = variance31.evaluate(doubleArray71);
        variance29.setData(doubleArray71);
        double double80 = variance27.evaluate(doubleArray71, (double) ' ');
        variance23.setData(doubleArray71);
        double double83 = variance13.evaluate(doubleArray71, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double87 = variance4.evaluate(doubleArray71, 1347.5555555547278d, (int) '4', (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance87.setBiasCorrected(false);
        double[] doubleArray90 = variance87.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance87.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNull(doubleArray90);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance75.copy();
        variance76.clear();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertNotNull(variance76);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        double[] doubleArray74 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance75.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        boolean boolean77 = variance22.equals((java.lang.Object) variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance76.copy();
        variance78.setBiasCorrected(true);
        variance78.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(variance78);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance0.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        double[] doubleArray11 = new double[] { (-1), 100.0f };
        variance7.incrementAll(doubleArray11);
        long long13 = variance7.getN();
        boolean boolean14 = variance7.isBiasCorrected();
        double double15 = variance7.getResult();
        long long16 = variance7.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance18.increment((double) (-1L));
        variance18.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        variance31.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        java.lang.Object obj65 = null;
        boolean boolean66 = variance47.equals(obj65);
        variance47.setBiasCorrected(true);
        double[] doubleArray75 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double77 = variance47.evaluate(doubleArray75, 100.0d);
        variance31.setData(doubleArray75, (int) (byte) 0, (int) (short) 0);
        double double83 = variance18.evaluate(doubleArray75, (int) (byte) 0, (int) (byte) 1);
        variance7.setData(doubleArray75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance86.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance86.copy();
        variance86.increment((double) '#');
        double[] doubleArray97 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance86.incrementAll(doubleArray97);
        // The following exception was thrown during execution in test generation
        try {
            double double99 = variance0.evaluate(doubleArray75, doubleArray97);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 5 != 6");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 2550.25d + "'", double15 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2L + "'", long16 == 2L);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 1617.066666666667d + "'", double77 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        double double60 = variance1.getResult();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        long long13 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance4.copy();
        variance4.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(variance14);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance5.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        variance5.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = variance2.equals((java.lang.Object) variance5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance46.copy();
        long long71 = variance70.getN();
        variance70.increment((double) (byte) -1);
        boolean boolean74 = variance1.equals((java.lang.Object) (byte) -1);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 3L + "'", long71 == 3L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        variance1.clear();
        boolean boolean4 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        double double7 = variance5.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        double[] doubleArray25 = new double[] { (-1), 100.0f };
        variance21.incrementAll(doubleArray25);
        variance21.clear();
        boolean boolean28 = variance16.equals((java.lang.Object) variance21);
        boolean boolean29 = variance21.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = variance39.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance83);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment88 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment88);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance86, variance89);
        double[] doubleArray93 = new double[] { (-1), 100.0f };
        variance89.incrementAll(doubleArray93);
        double double95 = variance84.evaluate(doubleArray93);
        variance31.setData(doubleArray93);
        double double98 = variance21.evaluate(doubleArray93, (double) 1);
        double double99 = variance5.evaluate(doubleArray93);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(variance83);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray93), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2550.25d + "'", double98 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 5100.5d + "'", double99 == 5100.5d);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        long long28 = variance25.getN();
        double[] doubleArray29 = variance25.getData();
        java.lang.Class<?> wildcardClass30 = variance25.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 3L + "'", long28 == 3L);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        variance42.setData(doubleArray64);
        boolean boolean69 = variance4.equals((java.lang.Object) doubleArray64);
        boolean boolean70 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        boolean boolean73 = variance4.isBiasCorrected();
        long long74 = variance4.getN();
        boolean boolean75 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = variance41.equals(obj59);
        double[] doubleArray61 = variance41.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance41);
        long long63 = variance39.getN();
        java.lang.Class<?> wildcardClass64 = variance39.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(doubleArray61);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 3L + "'", long63 == 3L);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        boolean boolean13 = variance7.equals((java.lang.Object) 10);
        variance7.increment((double) (short) 10);
        variance7.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        variance7.setData(doubleArray61, (int) (byte) 1, 0);
        double[] doubleArray72 = variance7.getData();
        double double73 = variance4.evaluate(doubleArray72);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance4.copy();
        double[] doubleArray77 = variance4.getData();
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double73));
        org.junit.Assert.assertNotNull(variance76);
        org.junit.Assert.assertNull(doubleArray77);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance29.incrementAll(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        boolean boolean64 = variance59.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean67 = variance66.isBiasCorrected();
        double[] doubleArray69 = new double[] { 100 };
        variance66.incrementAll(doubleArray69);
        double double71 = variance59.evaluate(doubleArray69);
        double double73 = variance29.evaluate(doubleArray69, 1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double double80 = variance75.getResult();
        double[] doubleArray86 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double88 = variance75.evaluate(doubleArray86, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance29.evaluate(doubleArray86, (int) (byte) -1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double80));
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1030428.01d + "'", double88 == 1030428.01d);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        boolean boolean88 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance46.copy();
        variance90.increment((double) 'a');
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(variance90);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = variance29.equals(obj47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance53.getResult();
        long long60 = variance53.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean64 = variance63.isBiasCorrected();
        double[] doubleArray66 = new double[] { 100 };
        variance63.incrementAll(doubleArray66);
        variance53.incrementAll(doubleArray66);
        double double70 = variance29.evaluate(doubleArray66, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray66, 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 2L + "'", long60 == 2L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        boolean boolean19 = variance12.isBiasCorrected();
        java.lang.Class<?> wildcardClass20 = variance12.getClass();
        boolean boolean21 = variance4.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance23.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance25);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(variance26);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        long long18 = variance4.getN();
        double double19 = variance4.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2550.25d + "'", double19 == 2550.25d);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance47.clear();
        boolean boolean49 = variance47.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance47);
        variance47.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        variance32.incrementAll(doubleArray52);
        variance1.setData(doubleArray52);
        boolean boolean57 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance63.copy();
        double[] doubleArray70 = new double[] { 0.0f, 2550.25d, 1, (short) -1 };
        double double72 = variance63.evaluate(doubleArray70, (double) (byte) 0);
        variance58.incrementAll(doubleArray70);
        double double74 = variance58.evaluate();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(variance65);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 2550.25, 1.0, -1.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1219458.32421875d + "'", double72 == 1219458.32421875d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 5100.5d + "'", double74 == 5100.5d);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        double[] doubleArray54 = variance53.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        variance53.incrementAll(doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double double83 = variance4.evaluate(doubleArray75, (double) (byte) 10, (int) (short) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        boolean boolean55 = variance1.isBiasCorrected();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double58 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(variance57);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        long long37 = variance4.getN();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        boolean boolean46 = variance40.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance40.copy();
        double double48 = variance40.getResult();
        double double49 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance51.copy();
        variance51.increment((double) 100.0f);
        boolean boolean57 = variance51.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance51.copy();
        variance58.increment((double) 1L);
        boolean boolean61 = variance40.equals((java.lang.Object) 1L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance40);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        variance6.incrementAll(doubleArray50);
        variance6.clear();
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance65.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance65.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        variance65.incrementAll(doubleArray85);
        variance63.setData(doubleArray85);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        variance90.increment((double) (-1));
        double double93 = variance90.evaluate();
        boolean boolean94 = variance6.equals((java.lang.Object) double93);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance6.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 5100.5d + "'", double93 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance4.copy();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(variance50);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        double double68 = variance46.evaluate(doubleArray65);
        double double70 = variance27.evaluate(doubleArray65, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        variance74.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        double double91 = variance74.evaluate(doubleArray89);
        boolean boolean92 = variance74.isBiasCorrected();
        variance74.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance74);
        java.lang.Class<?> wildcardClass96 = variance74.getClass();
        boolean boolean97 = variance25.equals((java.lang.Object) variance74);
        double double98 = variance74.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(variance71);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double98));
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double double17 = variance12.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        double double67 = variance21.evaluate(doubleArray61);
        variance19.setData(doubleArray61);
        double double70 = variance12.evaluate(doubleArray61, (double) (-1));
        variance12.increment(0.0d);
        boolean boolean73 = variance1.equals((java.lang.Object) variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance76.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance76.copy();
        variance76.increment((double) '#');
        double[] doubleArray87 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance76.incrementAll(doubleArray87);
        variance1.setData(doubleArray87);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        long long13 = variance12.getN();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        boolean boolean17 = variance16.isBiasCorrected();
        double[] doubleArray18 = variance16.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        variance20.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        double double75 = variance53.evaluate(doubleArray72);
        double double77 = variance34.evaluate(doubleArray72, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance34.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance78);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double[] doubleArray88 = new double[] { (-1), 100.0f };
        variance84.incrementAll(doubleArray88);
        double double90 = variance79.evaluate(doubleArray88);
        variance26.setData(doubleArray88);
        double double92 = variance20.evaluate(doubleArray88);
        variance16.setData(doubleArray88);
        double double94 = variance16.evaluate();
        double[] doubleArray95 = variance16.getData();
        variance6.incrementAll(doubleArray95);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-1.0, 100.0]");
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        variance36.increment((double) (short) 1);
        long long47 = variance36.getN();
        double[] doubleArray48 = variance36.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2L + "'", long47 == 2L);
        org.junit.Assert.assertNull(doubleArray48);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance8.clear();
        long long10 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        variance14.incrementAll(doubleArray34);
        variance12.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance39.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        variance43.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance43);
        double double48 = variance43.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance50.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        variance50.incrementAll(doubleArray70);
        double double75 = variance43.evaluate(doubleArray70, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = variance8.evaluate(doubleArray70, (int) (short) -1, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5100.5d + "'", double75 == 5100.5d);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double[] doubleArray12 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double14 = variance1.evaluate(doubleArray12, (double) (short) 1);
        double double15 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = variance17.equals(obj35);
        variance17.setBiasCorrected(true);
        variance17.clear();
        boolean boolean40 = variance1.equals((java.lang.Object) variance17);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1030428.01d + "'", double14 == 1030428.01d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        boolean boolean49 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        variance74.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        double double91 = variance74.evaluate(doubleArray89);
        double double92 = variance70.evaluate(doubleArray89);
        double double94 = variance51.evaluate(doubleArray89, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance51.copy();
        variance95.clear();
        boolean boolean97 = variance1.equals((java.lang.Object) variance95);
        variance1.clear();
        boolean boolean99 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double double7 = variance1.getResult();
        double[] doubleArray8 = variance1.getData();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNull(doubleArray8);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        variance1.clear();
        long long11 = variance1.getN();
        boolean boolean12 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        double[] doubleArray11 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        boolean boolean20 = variance14.equals((java.lang.Object) 10);
        variance14.increment((double) (short) 10);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance25.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance46.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance46);
        double[] doubleArray50 = variance46.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        java.lang.Object obj70 = null;
        boolean boolean71 = variance52.equals(obj70);
        double[] doubleArray72 = variance52.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double double79 = variance74.getResult();
        double[] doubleArray85 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double87 = variance74.evaluate(doubleArray85, (double) (short) 1);
        double double88 = variance52.evaluate(doubleArray85);
        double double89 = variance46.evaluate(doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = variance6.evaluate(doubleArray85, 5100.5d, (int) (byte) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1030428.01d + "'", double87 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1030428.01d + "'", double88 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1030428.01d + "'", double89 == 1030428.01d);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        // The following exception was thrown during execution in test generation
        try {
            double double31 = variance29.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        boolean boolean45 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance50);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        double[] doubleArray10 = variance8.getData();
        long long11 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        boolean boolean17 = variance16.isBiasCorrected();
        double[] doubleArray18 = variance16.getData();
        boolean boolean19 = variance16.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        long long31 = variance25.getN();
        boolean boolean32 = variance25.isBiasCorrected();
        double double33 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance37.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance37.copy();
        variance37.clear();
        variance37.increment((double) (short) 1);
        double double44 = variance37.getResult();
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        boolean boolean53 = variance48.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean56 = variance55.isBiasCorrected();
        double[] doubleArray58 = new double[] { 100 };
        variance55.incrementAll(doubleArray58);
        double double60 = variance48.evaluate(doubleArray58);
        variance37.setData(doubleArray58);
        variance16.setData(doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            double double65 = variance8.evaluate(doubleArray58, (int) (byte) 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 2L + "'", long31 == 2L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        variance46.clear();
        variance46.setBiasCorrected(true);
        long long90 = variance46.getN();
        double double91 = variance46.getResult();
        boolean boolean92 = variance46.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double91));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        double double39 = variance29.getResult();
        boolean boolean40 = variance29.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2046.8888888888887d + "'", double39 == 2046.8888888888887d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        boolean boolean25 = variance24.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        double double73 = variance27.evaluate(doubleArray67);
        long long74 = variance27.getN();
        variance27.increment(1617.066666666667d);
        boolean boolean77 = variance24.equals((java.lang.Object) 1617.066666666667d);
        boolean boolean78 = variance24.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        boolean boolean13 = variance1.isBiasCorrected();
        double[] doubleArray14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean17 = variance16.isBiasCorrected();
        double[] doubleArray19 = new double[] { 100 };
        variance16.incrementAll(doubleArray19);
        // The following exception was thrown during execution in test generation
        try {
            double double21 = variance1.evaluate(doubleArray14, doubleArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0]");
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean6 = variance5.isBiasCorrected();
        double[] doubleArray8 = new double[] { 100 };
        variance5.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        double double59 = variance13.evaluate(doubleArray53);
        variance11.setData(doubleArray53);
        double double62 = variance5.evaluate(doubleArray53, (double) (byte) -1);
        double double64 = variance1.evaluate(doubleArray53, (double) 1.0f);
        variance1.increment(10.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance4.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        boolean boolean42 = variance4.isBiasCorrected();
        double[] doubleArray43 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance4.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(doubleArray43);
        org.junit.Assert.assertNotNull(variance44);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        double double50 = variance4.evaluate(doubleArray44);
        variance1.incrementAll(doubleArray44);
        boolean boolean52 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment(2550.250000000233d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        variance42.setData(doubleArray64);
        boolean boolean69 = variance4.equals((java.lang.Object) doubleArray64);
        boolean boolean70 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        boolean boolean73 = variance4.isBiasCorrected();
        long long74 = variance4.getN();
        boolean boolean75 = variance4.isBiasCorrected();
        double[] doubleArray76 = variance4.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(doubleArray76);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        boolean boolean55 = variance53.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        double double90 = variance46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        java.lang.Class<?> wildcardClass92 = variance46.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 5100.5d + "'", double90 == 5100.5d);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment4 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment4);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance2, variance5);
        variance2.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        double double19 = variance2.evaluate(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        double double43 = variance21.evaluate(doubleArray40);
        double double45 = variance2.evaluate(doubleArray40, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance2.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        double[] doubleArray51 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double54 = variance46.evaluate(doubleArray51, 0, 0);
        boolean boolean55 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        long long66 = variance60.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean69 = variance68.isBiasCorrected();
        double[] doubleArray71 = new double[] { 100 };
        variance68.incrementAll(doubleArray71);
        boolean boolean73 = variance60.equals((java.lang.Object) doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance60);
        double[] doubleArray75 = variance60.getData();
        variance60.clear();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance0, variance60);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 2550.25d + "'", double19 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double54));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 2L + "'", long66 == 2L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(doubleArray75);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance6.copy();
        double double15 = variance6.getResult();
        variance6.setBiasCorrected(false);
        variance6.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        variance22.incrementAll(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        variance46.setData(doubleArray55);
        variance46.clear();
        double[] doubleArray59 = variance46.getData();
        variance6.incrementAll(doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray59, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        variance25.increment(0.0d);
        variance25.setBiasCorrected(false);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        variance40.clear();
        variance40.increment((double) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance49.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        variance49.incrementAll(doubleArray69);
        variance47.setData(doubleArray69);
        double double74 = variance40.evaluate(doubleArray69);
        variance22.setData(doubleArray69);
        long long76 = variance22.getN();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance70.increment(2046.8888888888887d);
        double[] doubleArray73 = variance70.getData();
        long long74 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray76 = variance70.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNull(doubleArray76);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        double[] doubleArray48 = variance45.getData();
        variance45.increment((double) ' ');
        long long51 = variance45.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 1L + "'", long51 == 1L);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        double double24 = variance1.getResult();
        java.lang.Class<?> wildcardClass25 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        variance4.setBiasCorrected(true);
        boolean boolean15 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        boolean boolean21 = variance20.isBiasCorrected();
        variance20.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance31.setData(doubleArray53);
        double double59 = variance27.evaluate(doubleArray53, (double) (short) 10);
        variance20.setData(doubleArray53, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance20);
        double double64 = variance63.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance65);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        long long50 = variance49.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        variance43.increment(0.0d);
        boolean boolean68 = variance4.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        // The following exception was thrown during execution in test generation
        try {
            double double71 = variance70.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(variance69);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        variance28.increment((double) 0.0f);
        long long34 = variance28.getN();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        long long48 = variance42.getN();
        boolean boolean49 = variance42.isBiasCorrected();
        double double50 = variance42.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = variance53.equals(obj71);
        variance53.setBiasCorrected(true);
        double[] doubleArray81 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double83 = variance53.evaluate(doubleArray81, 100.0d);
        variance51.setData(doubleArray81, (int) (byte) 1, 0);
        boolean boolean87 = variance37.equals((java.lang.Object) doubleArray81);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2L + "'", long48 == 2L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1617.066666666667d + "'", double83 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        double[] doubleArray6 = variance1.getData();
        double[] doubleArray7 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) (short) 100);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNull(doubleArray7);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        boolean boolean24 = variance22.isBiasCorrected();
        variance22.clear();
        java.lang.Class<?> wildcardClass26 = variance22.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.increment((double) 10);
        variance1.clear();
        variance1.increment(0.0d);
        double[] doubleArray40 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertNull(doubleArray40);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        long long48 = variance1.getN();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance50);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance50);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        long long22 = variance16.getN();
        long long23 = variance16.getN();
        long long24 = variance16.getN();
        double double25 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance28.copy();
        double double37 = variance28.getResult();
        variance28.setBiasCorrected(false);
        variance28.increment(2025.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        variance44.incrementAll(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance44.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        variance68.setData(doubleArray77);
        variance68.clear();
        double[] doubleArray81 = variance68.getData();
        variance28.incrementAll(doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = variance11.evaluate(doubleArray81, Double.NaN, 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(variance42);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        long long11 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray13 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.setBiasCorrected(false);
        long long25 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double70 = variance22.evaluate(doubleArray62, 0, (int) (short) 1);
        double[] doubleArray71 = variance22.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        variance76.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance76.copy();
        double[] doubleArray85 = variance84.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance84);
        double double87 = variance22.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance84);
        org.junit.Assert.assertNull(doubleArray85);
        org.junit.Assert.assertTrue(Double.isNaN(double87));
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.increment(0.0d);
        double double26 = variance1.getResult();
        double double27 = variance1.getResult();
        boolean boolean28 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance4.copy();
        variance7.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance7);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        double[] doubleArray11 = variance10.getData();
        variance10.increment(25.0d);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        variance29.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance54.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        double double76 = variance54.evaluate(doubleArray73);
        double double78 = variance35.evaluate(doubleArray73, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance35.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance79);
        double[] doubleArray81 = variance80.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance80);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertNull(doubleArray81);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment0 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment0);
        variance1.increment((double) 0.0f);
        boolean boolean4 = variance1.isBiasCorrected();
        double[] doubleArray5 = variance1.getData();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(doubleArray5);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance6.clear();
        long long11 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance6);
        double[] doubleArray13 = variance6.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        long long10 = variance1.getN();
        double[] doubleArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray11, 1, (int) '4');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance19.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        variance19.incrementAll(doubleArray39);
        variance17.setData(doubleArray39);
        double double45 = variance13.evaluate(doubleArray39, (double) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            variance8.incrementAll(doubleArray39, (int) (short) 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance64.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        variance64.incrementAll(doubleArray84);
        variance62.setData(doubleArray84);
        double double90 = variance58.evaluate(doubleArray84, (double) (short) 10);
        double double92 = variance52.evaluate(doubleArray84, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance52);
        variance4.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double double34 = variance29.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        double double87 = variance29.evaluate(doubleArray78, (double) (-1));
        variance1.setData(doubleArray78);
        long long89 = variance1.getN();
        long long90 = variance1.getN();
        double[] doubleArray91 = variance1.getData();
        double[] doubleArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray92, (int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double34));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 0L + "'", long90 == 0L);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        boolean boolean1 = variance0.isBiasCorrected();
        double[] doubleArray2 = variance0.getData();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(doubleArray2);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        double[] doubleArray15 = new double[] { (-1), 100.0f };
        variance11.incrementAll(doubleArray15);
        long long17 = variance11.getN();
        long long18 = variance11.getN();
        long long19 = variance11.getN();
        variance11.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        java.lang.Object obj23 = null;
        boolean boolean24 = variance11.equals(obj23);
        variance11.setBiasCorrected(true);
        double double27 = variance11.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2L + "'", long17 == 2L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2L + "'", long19 == 2L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 4050.0d + "'", double27 == 4050.0d);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.clear();
        variance1.increment((double) 10.0f);
        long long17 = variance1.getN();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        variance60.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        boolean boolean64 = variance57.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        double double13 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue(Double.isNaN(double13));
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        double double49 = variance48.getResult();
        variance48.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance48.copy();
        boolean boolean53 = variance48.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        variance1.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        // The following exception was thrown during execution in test generation
        try {
            double double27 = variance25.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance25);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) 100.0f);
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        boolean boolean16 = variance10.equals((java.lang.Object) 10);
        variance10.increment((double) (short) 10);
        variance10.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance22.setData(doubleArray64);
        variance10.setData(doubleArray64, (int) (byte) 1, 0);
        double[] doubleArray75 = variance10.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double79 = variance1.evaluate(doubleArray75, 1030428.01d, (int) (short) 1, 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[]");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        double double61 = variance46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        long long48 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance1.copy();
        double double50 = variance1.getResult();
        double double51 = variance1.getResult();
        double[] doubleArray52 = variance1.getData();
        double double53 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
        org.junit.Assert.assertNull(doubleArray52);
        org.junit.Assert.assertTrue(Double.isNaN(double53));
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance14.copy();
        variance58.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance58.setData(doubleArray81);
        variance1.incrementAll(doubleArray81, (int) (short) 1, (int) (byte) 0);
        double double89 = variance1.getResult();
        boolean boolean90 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2200.222222222222d + "'", double89 == 2200.222222222222d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance27.copy();
        variance27.clear();
        variance27.increment((double) (short) 1);
        variance27.increment((double) 0L);
        boolean boolean36 = variance27.isBiasCorrected();
        variance27.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance27.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        double double88 = variance66.evaluate(doubleArray85);
        double double90 = variance47.evaluate(doubleArray85, (double) 100.0f);
        double double91 = variance45.evaluate(doubleArray85);
        variance43.setData(doubleArray85);
        double double94 = variance41.evaluate(doubleArray85, (double) ' ');
        double double96 = variance39.evaluate(doubleArray85, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            variance1.setData(doubleArray85, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.25d + "'", double96 == 2550.25d);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        boolean boolean3 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance8.copy();
        double[] doubleArray17 = variance16.getData();
        variance16.setBiasCorrected(false);
        variance16.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance22.copy();
        boolean boolean24 = variance1.equals((java.lang.Object) variance22);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long14 = variance13.getN();
        variance13.clear();
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        double double54 = variance32.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double80 = variance55.evaluate(doubleArray76);
        double double81 = variance22.evaluate(doubleArray76);
        double double82 = variance13.evaluate(doubleArray76);
        double double86 = variance1.evaluate(doubleArray76, 2046.8888888888887d, (int) (short) 1, 1);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance30);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 5100.5d + "'", double82 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        variance33.setData(doubleArray44);
        variance14.incrementAll(doubleArray44);
        double double49 = variance4.evaluate(doubleArray44, 0.0d);
        double[] doubleArray50 = variance4.getData();
        java.lang.Object obj51 = null;
        boolean boolean52 = variance4.equals(obj51);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        boolean boolean42 = variance4.isBiasCorrected();
        double[] doubleArray43 = variance4.getData();
        variance4.clear();
        long long45 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(doubleArray43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance1.copy();
        double[] doubleArray14 = null;
        variance13.setData(doubleArray14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance16);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.increment((double) (byte) 0);
        long long8 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 2L + "'", long8 == 2L);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        variance15.incrementAll(doubleArray35);
        variance13.setData(doubleArray35);
        double double41 = variance9.evaluate(doubleArray35, (double) (short) 10);
        long long42 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance9.copy();
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(variance44);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        variance29.increment(10.0d);
        double[] doubleArray36 = new double[] { (short) 10, 1998.0d };
        double double38 = variance29.evaluate(doubleArray36, (double) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            double double39 = variance29.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[10.0, 1998.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 1976072.0d + "'", double38 == 1976072.0d);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        double[] doubleArray10 = new double[] { (-1), 100.0f };
        variance6.incrementAll(doubleArray10);
        double double12 = variance6.getResult();
        variance6.increment((double) 0L);
        boolean boolean15 = variance1.equals((java.lang.Object) 0L);
        boolean boolean16 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance1.copy();
        variance14.increment((double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = variance18.equals(obj36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        variance48.incrementAll(doubleArray68);
        variance46.setData(doubleArray68);
        double double74 = variance42.evaluate(doubleArray68, (double) (short) 10);
        double double76 = variance18.evaluate(doubleArray68, 2550.25d);
        boolean boolean77 = variance14.equals((java.lang.Object) doubleArray68);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        boolean boolean52 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance56.incrementAll(doubleArray76);
        variance54.setData(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance54);
        long long82 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = variance8.equals(obj26);
        variance8.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = variance39.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        variance39.incrementAll(doubleArray59);
        variance8.setData(doubleArray59);
        boolean boolean64 = variance8.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        variance67.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        boolean boolean89 = variance8.equals((java.lang.Object) variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance8);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(variance42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance1.setBiasCorrected(false);
        boolean boolean49 = variance1.equals((java.lang.Object) 100.0f);
        variance1.increment((double) (short) 100);
        variance1.increment(2046.8888888888887d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double double2 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        double double45 = variance23.evaluate(doubleArray42);
        double double47 = variance4.evaluate(doubleArray42, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance48);
        double[] doubleArray53 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double56 = variance48.evaluate(doubleArray53, 0, 0);
        boolean boolean57 = variance48.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        long long68 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean71 = variance70.isBiasCorrected();
        double[] doubleArray73 = new double[] { 100 };
        variance70.incrementAll(doubleArray73);
        boolean boolean75 = variance62.equals((java.lang.Object) doubleArray73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance62);
        long long77 = variance62.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance62.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance78);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance78.copy();
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double56));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 2L + "'", long68 == 2L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertNotNull(variance80);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        long long11 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double double16 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        variance11.clear();
        variance11.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double double26 = variance21.getResult();
        double[] doubleArray32 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double34 = variance21.evaluate(doubleArray32, (double) (short) 1);
        double double36 = variance11.evaluate(doubleArray32, 100.0d);
        boolean boolean37 = variance11.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertTrue(Double.isNaN(double26));
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1030428.01d + "'", double34 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance1.copy();
        long long8 = variance7.getN();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(variance7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double48 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        variance69.setData(doubleArray80);
        variance50.incrementAll(doubleArray80);
        long long84 = variance50.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance50.copy();
        boolean boolean86 = variance4.equals((java.lang.Object) variance50);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 2L + "'", long84 == 2L);
        org.junit.Assert.assertNotNull(variance85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean6 = variance5.isBiasCorrected();
        double[] doubleArray8 = new double[] { 100 };
        variance5.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        double double59 = variance13.evaluate(doubleArray53);
        variance11.setData(doubleArray53);
        double double62 = variance5.evaluate(doubleArray53, (double) (byte) -1);
        double double64 = variance1.evaluate(doubleArray53, (double) 1.0f);
        java.lang.Class<?> wildcardClass65 = doubleArray53.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double8 = variance7.getResult();
        variance7.increment((double) (short) 1);
        variance7.clear();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance45.copy();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance51.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        variance51.incrementAll(doubleArray71);
        variance49.setData(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        variance76.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance80.increment((double) 10);
        variance80.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance76.copy();
        boolean boolean86 = variance45.equals((java.lang.Object) variance76);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNotNull(variance85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        double[] doubleArray10 = new double[] { (-1), 100.0f };
        variance6.incrementAll(doubleArray10);
        double double12 = variance6.getResult();
        variance6.increment((double) 0L);
        boolean boolean15 = variance1.equals((java.lang.Object) 0L);
        double[] doubleArray16 = variance1.getData();
        java.lang.Class<?> wildcardClass17 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(doubleArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance11);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        long long14 = variance8.getN();
        long long15 = variance8.getN();
        boolean boolean16 = variance1.equals((java.lang.Object) long15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance1.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double18 = variance17.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2L + "'", long14 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2L + "'", long15 == 2L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(variance17);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance8.clear();
        variance8.clear();
        boolean boolean11 = variance8.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        long long13 = variance8.getN();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance73);
        long long75 = variance73.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance4.copy();
        double double83 = variance4.evaluate();
        variance4.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        double[] doubleArray83 = new double[] { 0.0f, 10L, (short) 100, (byte) 10, 0L, (byte) 100 };
        double double87 = variance8.evaluate(doubleArray83, (double) (short) 0, (int) (short) 1, 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance89.copy();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[0.0, 10.0, 100.0, 10.0, 0.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertNotNull(variance90);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        double double37 = variance4.getResult();
        double[] doubleArray38 = variance4.getData();
        variance4.increment(1976072.0d);
        double[] doubleArray41 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance4.setData(doubleArray41, (int) (short) 100, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: null");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNull(doubleArray38);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance47);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance59.setData(doubleArray81);
        double double87 = variance55.evaluate(doubleArray81, (double) (short) 10);
        variance48.incrementAll(doubleArray81);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance48);
        variance1.clear();
        boolean boolean92 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        double double14 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.clear();
        boolean boolean9 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean6 = variance5.isBiasCorrected();
        double[] doubleArray8 = new double[] { 100 };
        variance5.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        double double59 = variance13.evaluate(doubleArray53);
        variance11.setData(doubleArray53);
        double double62 = variance5.evaluate(doubleArray53, (double) (byte) -1);
        double double64 = variance1.evaluate(doubleArray53, (double) 1.0f);
        boolean boolean65 = variance1.isBiasCorrected();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean15 = variance7.equals((java.lang.Object) variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance14);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        variance21.incrementAll(doubleArray41);
        variance19.setData(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance19);
        variance46.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        variance50.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance50);
        double double55 = variance50.getResult();
        double[] doubleArray56 = variance50.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double60 = variance14.evaluate(doubleArray56, (double) (short) 100, (int) '4', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance5.getResult();
        double double7 = variance5.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        double[] doubleArray9 = variance8.getData();
        variance8.increment((double) 4L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance70.increment(2046.8888888888887d);
        double[] doubleArray73 = variance70.getData();
        long long74 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        boolean boolean76 = variance67.isBiasCorrected();
        double double77 = variance67.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.clear();
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance5.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance5.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        long long10 = variance8.getN();
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = variance14.equals(obj32);
        double[] doubleArray34 = variance14.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        variance36.incrementAll(doubleArray56);
        variance14.incrementAll(doubleArray56);
        double double62 = variance8.evaluate(doubleArray56, (double) '4');
        variance1.incrementAll(doubleArray56, (int) (byte) 0, (int) (short) 1);
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        double[] doubleArray70 = variance69.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance76.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance84);
        java.lang.Class<?> wildcardClass86 = variance84.getClass();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance8.increment((double) 10L);
        long long23 = variance8.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean26 = variance25.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        double double71 = variance49.evaluate(doubleArray68);
        double double73 = variance30.evaluate(doubleArray68, (double) 100.0f);
        double double74 = variance28.evaluate(doubleArray68);
        variance25.incrementAll(doubleArray68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance25);
        double double77 = variance25.getResult();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double[] doubleArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray55, (int) (byte) -1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        double[] doubleArray39 = variance29.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        double double91 = variance40.evaluate(doubleArray84, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double92 = variance40.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1347.5555555555554d + "'", double91 == 1347.5555555555554d);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        double double82 = variance4.evaluate();
        double[] doubleArray83 = variance4.getData();
        long long84 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance85);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: null is not allowed");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance17.setData(doubleArray59);
        double double68 = variance15.evaluate(doubleArray59, (double) ' ');
        variance11.setData(doubleArray59);
        double double71 = variance1.evaluate(doubleArray59, (double) 100.0f);
        long long72 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 2L + "'", long72 == 2L);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance8);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        boolean boolean32 = variance26.equals((java.lang.Object) 10);
        variance26.increment((double) (short) 10);
        variance26.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        variance38.setData(doubleArray80);
        variance26.setData(doubleArray80, (int) (byte) 1, 0);
        double double91 = variance24.evaluate(doubleArray80);
        variance24.clear();
        double double93 = variance24.getResult();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double93));
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        double double9 = variance1.getResult();
        variance1.increment(2550.25d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        variance13.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        variance48.clear();
        boolean boolean55 = variance43.equals((java.lang.Object) variance48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance48);
        boolean boolean57 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance61);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double double25 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double[] doubleArray42 = new double[] { (-1), 100.0f };
        variance38.incrementAll(doubleArray42);
        double double44 = variance27.evaluate(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        variance50.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance50.evaluate(doubleArray65);
        double double68 = variance46.evaluate(doubleArray65);
        double double70 = variance27.evaluate(doubleArray65, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance27.copy();
        variance27.setBiasCorrected(false);
        boolean boolean75 = variance27.equals((java.lang.Object) 100.0f);
        boolean boolean76 = variance1.equals((java.lang.Object) variance27);
        java.lang.Class<?> wildcardClass77 = variance27.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertNotNull(variance71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance56.evaluate(doubleArray65);
        variance3.setData(doubleArray65);
        variance1.incrementAll(doubleArray65, 0, (int) (short) 0);
        variance1.clear();
        long long73 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance65);
        variance65.clear();
        double double74 = variance65.getResult();
        variance65.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance65);
        java.lang.Class<?> wildcardClass78 = variance1.getClass();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double74));
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance45.setBiasCorrected(false);
        boolean boolean53 = variance45.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        double double58 = variance36.evaluate(doubleArray55);
        double double60 = variance17.evaluate(doubleArray55, (double) 100.0f);
        double double61 = variance15.evaluate(doubleArray55);
        variance13.setData(doubleArray55);
        variance1.setData(doubleArray55, (int) (byte) 1, 0);
        boolean boolean66 = variance1.isBiasCorrected();
        double double67 = variance1.getResult();
        double double68 = variance1.evaluate();
        variance1.increment((double) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance25.copy();
        long long28 = variance27.getN();
        double double29 = variance27.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double77 = variance31.evaluate(doubleArray71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance31.copy();
        double double79 = variance78.getResult();
        variance78.increment((double) 'a');
        boolean boolean82 = variance78.isBiasCorrected();
        double double83 = variance78.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = variance78.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance84);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 3L + "'", long28 == 3L);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2046.8888888888887d + "'", double29 == 2046.8888888888887d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        org.junit.Assert.assertNotNull(variance84);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        double[] doubleArray5 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance1.copy();
        variance6.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(doubleArray5);
        org.junit.Assert.assertNotNull(variance6);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance4.copy();
        double double75 = variance4.getResult();
        long long76 = variance4.getN();
        variance4.increment(1617.066666666667d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        double double92 = variance4.evaluate(doubleArray87, Double.NaN, (int) (short) 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass93 = variance4.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        double double49 = variance48.getResult();
        variance48.increment((double) 'a');
        boolean boolean52 = variance48.isBiasCorrected();
        double double53 = variance48.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance48.copy();
        double double55 = variance54.getResult();
        boolean boolean56 = variance54.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        boolean boolean14 = variance8.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance8.copy();
        variance15.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        variance15.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double78 = variance21.evaluate(doubleArray71, (double) (short) 1);
        boolean boolean79 = variance15.equals((java.lang.Object) variance21);
        variance21.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        long long83 = variance1.getN();
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        boolean boolean4 = variance1.isBiasCorrected();
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance1.copy();
        variance13.setBiasCorrected(false);
        variance13.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance13);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        double double37 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        variance51.clear();
        boolean boolean58 = variance46.equals((java.lang.Object) variance51);
        variance46.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        variance46.setData(doubleArray90, (int) (byte) 0, (int) (short) 0);
        double double96 = variance4.evaluate(doubleArray90);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double37));
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1347.5555555555554d + "'", double96 == 1347.5555555555554d);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        variance14.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        variance49.clear();
        boolean boolean56 = variance44.equals((java.lang.Object) variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance49);
        variance14.increment((double) (short) -1);
        variance14.increment(1347.5555555555554d);
        variance14.setBiasCorrected(false);
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance14);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        long long74 = variance59.getN();
        double[] doubleArray75 = variance59.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNull(doubleArray75);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        boolean boolean44 = variance38.equals((java.lang.Object) 10);
        variance38.increment((double) (short) 10);
        variance38.clear();
        double double48 = variance38.getResult();
        double double49 = variance38.getResult();
        long long50 = variance38.getN();
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        boolean boolean59 = variance38.equals((java.lang.Object) variance57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance38);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(secondMoment61);
        boolean boolean63 = variance62.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance62);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        double[] doubleArray9 = variance8.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        variance11.increment(0.0d);
        variance11.setBiasCorrected(false);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        double[] doubleArray25 = variance11.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        variance29.incrementAll(doubleArray49);
        variance27.setData(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        variance54.increment((double) (-1));
        double double57 = variance54.evaluate();
        boolean boolean58 = variance54.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance65);
        boolean boolean68 = variance60.equals((java.lang.Object) variance67);
        boolean boolean70 = variance67.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = variance67.copy();
        double[] doubleArray77 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance67.setData(doubleArray77);
        double double82 = variance54.evaluate(doubleArray77, 1617.066666666667d, (int) (byte) 1, 0);
        double double84 = variance11.evaluate(doubleArray77, 2200.222222222222d);
        double double85 = variance8.evaluate(doubleArray77);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNull(doubleArray9);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 5100.5d + "'", double57 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(variance71);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double82));
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertTrue(Double.isNaN(double85));
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double double70 = variance46.getResult();
        boolean boolean71 = variance46.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        variance11.increment(Double.NaN);
        boolean boolean14 = variance11.isBiasCorrected();
        double double15 = variance11.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance1.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertNotNull(variance34);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        long long88 = variance87.getN();
        boolean boolean89 = variance87.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 2L + "'", long88 == 2L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        long long48 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance1.copy();
        double double50 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance1.copy();
        variance51.clear();
        variance51.increment(3400.3333333333335d);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(variance51);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean40 = variance39.isBiasCorrected();
        double[] doubleArray42 = new double[] { 100 };
        variance39.incrementAll(doubleArray42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance68.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        variance72.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        double double89 = variance72.evaluate(doubleArray87);
        double double90 = variance68.evaluate(doubleArray87);
        double double92 = variance49.evaluate(doubleArray87, (double) 100.0f);
        double double93 = variance47.evaluate(doubleArray87);
        variance45.setData(doubleArray87);
        double double96 = variance39.evaluate(doubleArray87, (double) (byte) -1);
        double double98 = variance36.evaluate(doubleArray87, (double) 2L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.25d + "'", double96 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2550.25d + "'", double98 == 2550.25d);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        boolean boolean14 = variance8.equals((java.lang.Object) 10);
        variance8.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        double double23 = variance18.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        double double73 = variance51.evaluate(doubleArray70);
        double double74 = variance49.evaluate(doubleArray70);
        variance18.setData(doubleArray70, 1, (int) (short) 0);
        double[] doubleArray78 = variance18.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double82 = variance4.evaluate(doubleArray78, 1347.5555555547278d, (int) (short) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        variance53.clear();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance53.copy();
        java.lang.Object obj58 = null;
        boolean boolean59 = variance53.equals(obj58);
        double double60 = variance53.getResult();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        variance11.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        variance15.increment(0.0d);
        variance15.setBiasCorrected(false);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        double[] doubleArray29 = variance15.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance33.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        variance33.incrementAll(doubleArray53);
        variance31.setData(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        variance58.increment((double) (-1));
        double double61 = variance58.evaluate();
        boolean boolean62 = variance58.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance69);
        boolean boolean72 = variance64.equals((java.lang.Object) variance71);
        boolean boolean74 = variance71.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance71.copy();
        double[] doubleArray81 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance71.setData(doubleArray81);
        double double86 = variance58.evaluate(doubleArray81, 1617.066666666667d, (int) (byte) 1, 0);
        double double88 = variance15.evaluate(doubleArray81, 2200.222222222222d);
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance11.evaluate(doubleArray81, (-1), 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 5100.5d + "'", double61 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertTrue(Double.isNaN(double88));
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        double[] doubleArray17 = variance16.getData();
        double[] doubleArray18 = variance16.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean25 = variance24.isBiasCorrected();
        double[] doubleArray27 = new double[] { 100 };
        variance24.incrementAll(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        double double75 = variance53.evaluate(doubleArray72);
        double double77 = variance34.evaluate(doubleArray72, (double) 100.0f);
        double double78 = variance32.evaluate(doubleArray72);
        variance30.setData(doubleArray72);
        double double81 = variance24.evaluate(doubleArray72, (double) (byte) -1);
        double double83 = variance20.evaluate(doubleArray72, (double) 1.0f);
        boolean boolean84 = variance16.equals((java.lang.Object) variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance16.copy();
        double[] doubleArray86 = variance85.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance85);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(variance85);
        org.junit.Assert.assertNull(doubleArray86);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        boolean boolean89 = variance83.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = variance83.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = variance83.copy();
        boolean boolean92 = variance4.equals((java.lang.Object) variance91);
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance91);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance93);
        variance93.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(variance90);
        org.junit.Assert.assertNotNull(variance91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        boolean boolean3 = variance2.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        boolean boolean11 = variance5.equals((java.lang.Object) 10);
        variance5.increment((double) (short) 10);
        variance5.increment((double) (byte) 10);
        variance5.increment((double) (short) 100);
        variance5.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance5);
        double[] doubleArray21 = variance5.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance5.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        long long33 = variance27.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean36 = variance35.isBiasCorrected();
        double[] doubleArray38 = new double[] { 100 };
        variance35.incrementAll(doubleArray38);
        boolean boolean40 = variance27.equals((java.lang.Object) doubleArray38);
        double double42 = variance5.evaluate(doubleArray38, 1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) (-1L));
        double[] doubleArray47 = variance44.getData();
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance51.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        variance55.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        double[] doubleArray70 = new double[] { (-1), 100.0f };
        variance66.incrementAll(doubleArray70);
        double double72 = variance55.evaluate(doubleArray70);
        double double73 = variance51.evaluate(doubleArray70);
        double double75 = variance44.evaluate(doubleArray70, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double78 = variance2.evaluate(doubleArray38, doubleArray70, (int) (byte) 100, 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 2 != 1");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 2L + "'", long33 == 2L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray40 = variance39.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        boolean boolean19 = variance13.equals((java.lang.Object) 10);
        variance13.increment((double) (short) 10);
        variance13.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        double double73 = variance27.evaluate(doubleArray67);
        variance25.setData(doubleArray67);
        variance13.setData(doubleArray67, (int) (byte) 1, 0);
        double[] doubleArray78 = variance13.getData();
        double double79 = variance10.evaluate(doubleArray78);
        variance10.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance10);
        double double83 = variance5.getResult();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double79));
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        variance20.incrementAll(doubleArray40);
        variance18.setData(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        variance45.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance49.increment((double) 10);
        variance49.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance49);
        boolean boolean54 = variance16.equals((java.lang.Object) variance45);
        variance45.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        double double32 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue(Double.isNaN(double32));
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment1 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment1);
        variance2.increment((double) 1);
        // The following exception was thrown during execution in test generation
        try {
            double double5 = variance2.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        double[] doubleArray71 = variance43.getData();
        variance43.clear();
        // The following exception was thrown during execution in test generation
        try {
            double double73 = variance43.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNull(doubleArray71);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        double double15 = variance14.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        double double24 = variance17.getResult();
        boolean boolean25 = variance14.equals((java.lang.Object) double24);
        boolean boolean26 = variance1.equals((java.lang.Object) boolean25);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double24));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long11 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        double double35 = variance13.evaluate(doubleArray32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double61 = variance36.evaluate(doubleArray57);
        double double62 = variance10.evaluate(doubleArray57);
        variance8.setData(doubleArray57);
        variance8.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        long long4 = variance2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        double[] doubleArray12 = variance11.getData();
        double[] doubleArray13 = variance11.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        boolean boolean21 = variance15.equals((java.lang.Object) 10);
        variance15.increment((double) (short) 10);
        variance15.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        variance27.setData(doubleArray69);
        variance15.setData(doubleArray69, (int) (byte) 1, 0);
        double[] doubleArray80 = variance15.getData();
        variance11.incrementAll(doubleArray80);
        variance2.setData(doubleArray80);
        variance2.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[]");
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray11 = new double[] { 100 };
        variance8.incrementAll(doubleArray11);
        double double13 = variance1.evaluate(doubleArray11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance15);
        variance15.clear();
        double[] doubleArray24 = variance15.getData();
        double[] doubleArray25 = variance15.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance30.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        variance36.incrementAll(doubleArray56);
        variance34.setData(doubleArray56);
        double double62 = variance30.evaluate(doubleArray56, (double) (short) 10);
        variance30.clear();
        variance30.increment((double) (short) 0);
        double double66 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance70.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        variance75.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        double[] doubleArray90 = new double[] { (-1), 100.0f };
        variance86.incrementAll(doubleArray90);
        double double92 = variance75.evaluate(doubleArray90);
        variance70.incrementAll(doubleArray90);
        variance68.setData(doubleArray90);
        boolean boolean95 = variance30.equals((java.lang.Object) doubleArray90);
        variance15.incrementAll(doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray90, (int) (short) -1, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: start position (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0]");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertNull(doubleArray25);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) 2L);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        variance4.increment((double) (short) -1);
        long long13 = variance4.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 3L + "'", long13 == 3L);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        variance4.setBiasCorrected(false);
        double[] doubleArray10 = variance4.getData();
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray10);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance70.increment(2046.8888888888887d);
        double[] doubleArray73 = variance70.getData();
        long long74 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        boolean boolean76 = variance67.isBiasCorrected();
        double[] doubleArray77 = variance67.getData();
        variance67.clear();
        double[] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance67.incrementAll(doubleArray79, (-1), (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(doubleArray77);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance8.clear();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance11.increment((double) 'a');
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        long long13 = variance9.getN();
        long long14 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        double[] doubleArray17 = variance16.getData();
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNull(doubleArray17);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        variance21.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        long long33 = variance31.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        double double2 = variance1.getResult();
        long long3 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        variance25.setData(doubleArray36);
        variance6.incrementAll(doubleArray36);
        variance1.incrementAll(doubleArray36);
        double double41 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        variance43.increment((double) '#');
        double[] doubleArray54 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance43.incrementAll(doubleArray54);
        double double56 = variance1.evaluate(doubleArray54);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 5100.5d + "'", double41 == 5100.5d);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 242.2d + "'", double56 == 242.2d);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double double21 = variance16.getResult();
        double[] doubleArray27 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double29 = variance16.evaluate(doubleArray27, (double) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        variance60.setData(doubleArray71);
        variance41.incrementAll(doubleArray71);
        variance39.setData(doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double double77 = variance4.evaluate(doubleArray27, doubleArray71, 1347.5555555547278d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 2 != 5");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue(Double.isNaN(double21));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1030428.01d + "'", double29 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        double[] doubleArray36 = variance1.getData();
        boolean boolean37 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance41.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        variance41.incrementAll(doubleArray61);
        variance39.setData(doubleArray61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        variance66.increment((double) (-1));
        double double69 = variance66.evaluate();
        boolean boolean70 = variance66.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance77);
        boolean boolean80 = variance72.equals((java.lang.Object) variance79);
        boolean boolean82 = variance79.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = variance79.copy();
        double[] doubleArray89 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance79.setData(doubleArray89);
        double double94 = variance66.evaluate(doubleArray89, 1617.066666666667d, (int) (byte) 1, 0);
        variance1.setData(doubleArray89);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(doubleArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 5100.5d + "'", double69 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(variance83);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double94));
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        double[] doubleArray74 = variance59.getData();
        variance59.clear();
        double double76 = variance59.getResult();
        double double77 = variance59.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(doubleArray74);
        org.junit.Assert.assertTrue(Double.isNaN(double76));
        org.junit.Assert.assertTrue(Double.isNaN(double77));
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        boolean boolean54 = variance45.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance59);
        long long74 = variance45.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        double double60 = variance46.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        double double34 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance36.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance36.copy();
        variance36.clear();
        variance36.increment((double) (short) 1);
        double double43 = variance36.getResult();
        long long44 = variance36.getN();
        java.lang.Class<?> wildcardClass45 = variance36.getClass();
        boolean boolean46 = variance1.equals((java.lang.Object) wildcardClass45);
        double[] doubleArray47 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 1L + "'", long44 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(doubleArray47);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        double[] doubleArray48 = variance45.getData();
        variance45.increment((double) ' ');
        variance45.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNull(doubleArray48);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        double double58 = variance12.evaluate(doubleArray52);
        variance10.setData(doubleArray52);
        double double61 = variance8.evaluate(doubleArray52, (double) ' ');
        variance4.setData(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        java.lang.Object obj82 = null;
        boolean boolean83 = variance64.equals(obj82);
        variance64.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment89 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance90 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment89);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance87, variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance90);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance92);
        boolean boolean94 = variance4.equals((java.lang.Object) variance92);
        variance4.increment((double) 0.0f);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass5 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray52 = variance51.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(doubleArray52);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean19 = variance18.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance18.copy();
        long long21 = variance20.getN();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 3L + "'", long21 == 3L);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        variance18.clear();
        boolean boolean25 = variance13.equals((java.lang.Object) variance18);
        variance18.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        variance18.incrementAll(doubleArray69);
        variance1.setData(doubleArray69);
        java.lang.Class<?> wildcardClass78 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        variance1.increment(2025.0d);
        variance1.clear();
        boolean boolean16 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance11.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance11.copy();
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance19.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance19.copy();
        variance19.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance58.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        double double80 = variance58.evaluate(doubleArray77);
        double double82 = variance39.evaluate(doubleArray77, (double) 100.0f);
        double double83 = variance37.evaluate(doubleArray77);
        variance35.setData(doubleArray77);
        double double86 = variance33.evaluate(doubleArray77, (double) ' ');
        variance29.setData(doubleArray77);
        double double89 = variance19.evaluate(doubleArray77, (double) 100.0f);
        variance11.incrementAll(doubleArray77);
        variance8.incrementAll(doubleArray77);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        boolean boolean25 = variance12.equals((java.lang.Object) doubleArray23);
        long long26 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        boolean boolean28 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance12.copy();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(variance29);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        double[] doubleArray21 = variance20.getData();
        double[] doubleArray22 = variance20.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        boolean boolean30 = variance24.equals((java.lang.Object) 10);
        variance24.increment((double) (short) 10);
        variance24.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        variance24.setData(doubleArray78, (int) (byte) 1, 0);
        double[] doubleArray89 = variance24.getData();
        variance20.incrementAll(doubleArray89);
        double double92 = variance11.evaluate(doubleArray89, (double) 10L);
        double double94 = variance4.evaluate(doubleArray89, 2550.25d);
        boolean boolean95 = variance4.isBiasCorrected();
        double[] doubleArray96 = null;
        variance4.setData(doubleArray96);
        variance4.increment(0.0d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        long long6 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        boolean boolean14 = variance8.equals((java.lang.Object) 10);
        variance8.increment((double) (short) 10);
        variance8.increment((double) (byte) 10);
        variance8.increment((double) (short) 100);
        variance8.clear();
        variance8.increment((double) 10.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = variance25.equals(obj43);
        double[] doubleArray45 = variance25.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance47.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance47.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        variance47.incrementAll(doubleArray67);
        variance25.incrementAll(doubleArray67);
        double double73 = variance8.evaluate(doubleArray67, (double) 0.0f);
        variance1.incrementAll(doubleArray67, 0, (int) (short) 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        long long18 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean21 = variance20.isBiasCorrected();
        double[] doubleArray23 = new double[] { 100 };
        variance20.incrementAll(doubleArray23);
        boolean boolean25 = variance12.equals((java.lang.Object) doubleArray23);
        long long26 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        double[] doubleArray28 = null;
        double[] doubleArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double30 = variance12.evaluate(doubleArray28, doubleArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2L + "'", long18 == 2L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        double[] doubleArray4 = new double[] { 100 };
        variance1.incrementAll(doubleArray4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        double double55 = variance9.evaluate(doubleArray49);
        variance7.setData(doubleArray49);
        double double58 = variance1.evaluate(doubleArray49, (double) (byte) -1);
        variance1.setBiasCorrected(false);
        double double61 = variance1.getResult();
        boolean boolean62 = variance1.isBiasCorrected();
        double[] doubleArray63 = variance1.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double64 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(doubleArray63);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        double[] doubleArray11 = variance10.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance22.setData(doubleArray64);
        double double73 = variance20.evaluate(doubleArray64, (double) ' ');
        variance16.setData(doubleArray64);
        variance10.incrementAll(doubleArray64);
        double double77 = variance1.evaluate(doubleArray64, (double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance78);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double double86 = variance81.getResult();
        double[] doubleArray92 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double94 = variance81.evaluate(doubleArray92, (double) (short) 1);
        variance79.setData(doubleArray92);
        java.lang.Class<?> wildcardClass96 = doubleArray92.getClass();
        org.junit.Assert.assertNull(doubleArray11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double86));
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1030428.01d + "'", double94 == 1030428.01d);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance47);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance59.setData(doubleArray81);
        double double87 = variance55.evaluate(doubleArray81, (double) (short) 10);
        variance48.incrementAll(doubleArray81);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance48);
        double[] doubleArray91 = variance48.getData();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertNull(doubleArray91);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        double[] doubleArray45 = variance1.getData();
        double[] doubleArray46 = variance1.getData();
        double double47 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        double double37 = variance32.evaluate();
        boolean boolean38 = variance32.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 5100.5d + "'", double37 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        variance12.incrementAll(doubleArray32);
        variance10.setData(doubleArray32);
        double double38 = variance6.evaluate(doubleArray32, (double) (short) 10);
        variance6.clear();
        variance6.increment((double) (short) 0);
        double double42 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance46.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        variance46.incrementAll(doubleArray66);
        variance44.setData(doubleArray66);
        boolean boolean71 = variance6.equals((java.lang.Object) doubleArray66);
        boolean boolean72 = variance6.isBiasCorrected();
        variance6.setBiasCorrected(false);
        boolean boolean75 = variance6.isBiasCorrected();
        boolean boolean76 = variance1.equals((java.lang.Object) boolean75);
        variance1.increment((double) 3L);
        java.lang.Class<?> wildcardClass79 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        variance1.increment(0.0d);
        variance1.increment((-1.0d));
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance66.copy();
        boolean boolean70 = variance1.equals((java.lang.Object) variance69);
        boolean boolean71 = variance69.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = variance69.copy();
        double[] doubleArray73 = variance69.getData();
        double[] doubleArray74 = variance69.getData();
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(variance72);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNull(doubleArray74);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        long long47 = variance1.getN();
        double double48 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass16 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance6.clear();
        long long11 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        boolean boolean18 = variance17.isBiasCorrected();
        double[] doubleArray19 = variance17.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) (-1L));
        variance21.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        variance27.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance54.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        double double76 = variance54.evaluate(doubleArray73);
        double double78 = variance35.evaluate(doubleArray73, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance35.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        double double91 = variance80.evaluate(doubleArray89);
        variance27.setData(doubleArray89);
        double double93 = variance21.evaluate(doubleArray89);
        variance17.setData(doubleArray89);
        double double95 = variance17.evaluate();
        double[] doubleArray96 = variance17.getData();
        variance4.setData(doubleArray96);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(doubleArray19);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1.0, 100.0]");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double double8 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertTrue(Double.isNaN(double8));
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        double[] doubleArray13 = variance1.getData();
        variance1.setBiasCorrected(true);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        boolean boolean24 = variance18.equals((java.lang.Object) 10);
        variance18.increment((double) (short) 10);
        variance18.increment((double) (byte) 10);
        variance18.increment((double) (short) 100);
        variance18.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        double[] doubleArray34 = variance18.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double double41 = variance36.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance66.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        variance70.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance70.evaluate(doubleArray85);
        double double88 = variance66.evaluate(doubleArray85);
        double double90 = variance47.evaluate(doubleArray85, (double) 100.0f);
        double double91 = variance45.evaluate(doubleArray85);
        variance43.setData(doubleArray85);
        double double94 = variance36.evaluate(doubleArray85, (double) (-1));
        double double96 = variance18.evaluate(doubleArray85, (double) 0L);
        double double97 = variance1.evaluate(doubleArray85);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(doubleArray34);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.25d + "'", double96 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 5100.5d + "'", double97 == 5100.5d);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        variance32.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        double[] doubleArray47 = new double[] { (-1), 100.0f };
        variance43.incrementAll(doubleArray47);
        double double49 = variance32.evaluate(doubleArray47);
        double double50 = variance28.evaluate(doubleArray47);
        double double52 = variance9.evaluate(doubleArray47, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance54.evaluate(doubleArray63);
        variance1.setData(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance1.copy();
        double double68 = variance1.evaluate();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        boolean boolean55 = variance53.isBiasCorrected();
        variance53.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double68 = variance53.evaluate(doubleArray65, Double.NaN);
        java.lang.Class<?> wildcardClass69 = variance53.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double68));
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        double[] doubleArray12 = new double[] { (-1), 100.0f };
        variance8.incrementAll(doubleArray12);
        variance1.setData(doubleArray12);
        long long15 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray17 = null;
        variance1.setData(doubleArray17);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance46.copy();
        java.lang.Class<?> wildcardClass96 = variance46.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        double double36 = variance14.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double62 = variance37.evaluate(doubleArray58);
        double double63 = variance4.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance4.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(variance65);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        double double50 = variance4.evaluate(doubleArray44);
        variance1.incrementAll(doubleArray44);
        variance1.increment(10.0d);
        variance1.clear();
        java.lang.Class<?> wildcardClass55 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        long long5 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance7.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance51);
        double[] doubleArray53 = variance52.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        variance59.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance59.evaluate(doubleArray74);
        double double77 = variance55.evaluate(doubleArray74);
        variance52.incrementAll(doubleArray74);
        variance1.incrementAll(doubleArray74);
        double[] doubleArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double84 = variance1.evaluate(doubleArray80, 1624668.890625d, (int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance4.copy();
        variance4.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(1030428.01d);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        variance1.increment((double) (short) -1);
        variance1.increment(1347.5555555555554d);
        variance1.setBiasCorrected(false);
        double double51 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        double[] doubleArray4 = new double[] { 100 };
        variance1.incrementAll(doubleArray4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        double double55 = variance9.evaluate(doubleArray49);
        variance7.setData(doubleArray49);
        double double58 = variance1.evaluate(doubleArray49, (double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance60);
        variance60.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance71.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        variance76.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment86 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment86);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance84, variance87);
        double[] doubleArray91 = new double[] { (-1), 100.0f };
        variance87.incrementAll(doubleArray91);
        double double93 = variance76.evaluate(doubleArray91);
        variance71.incrementAll(doubleArray91);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance71.copy();
        boolean boolean96 = variance95.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance97 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance95);
        java.lang.Class<?> wildcardClass98 = variance95.getClass();
        boolean boolean99 = variance1.equals((java.lang.Object) variance95);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance11);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        double double50 = variance4.evaluate(doubleArray44);
        variance1.incrementAll(doubleArray44);
        variance1.increment(10.0d);
        variance1.setBiasCorrected(true);
        boolean boolean56 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        variance6.incrementAll(doubleArray50);
        variance6.clear();
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance12.setBiasCorrected(false);
        long long15 = variance12.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        java.lang.Class<?> wildcardClass17 = variance12.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        double double23 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        double double56 = variance10.evaluate(doubleArray50);
        variance8.setData(doubleArray50);
        double double59 = variance1.evaluate(doubleArray50, (double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        boolean boolean67 = variance62.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance62);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = variance69.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance69);
        boolean boolean72 = variance71.isBiasCorrected();
        variance71.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        variance68.increment(0.0d);
        boolean boolean77 = variance1.equals((java.lang.Object) 0.0d);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(variance70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        variance20.incrementAll(doubleArray40);
        variance18.setData(doubleArray40);
        double double46 = variance14.evaluate(doubleArray40, (double) (short) 10);
        variance8.incrementAll(doubleArray40);
        variance8.increment((double) (short) 0);
        long long50 = variance8.getN();
        variance8.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 3L + "'", long50 == 3L);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double double35 = variance30.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double84 = variance41.evaluate(doubleArray79, (double) 100.0f);
        double double85 = variance39.evaluate(doubleArray79);
        variance37.setData(doubleArray79);
        double double88 = variance30.evaluate(doubleArray79, (double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = variance30.copy();
        boolean boolean90 = variance1.equals((java.lang.Object) variance30);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertNotNull(variance89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance13.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance13.incrementAll(doubleArray64);
        boolean boolean72 = variance13.isBiasCorrected();
        variance13.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray17 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance1.copy();
        variance1.clear();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNotNull(variance18);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance4.copy();
        variance37.setBiasCorrected(false);
        double double40 = variance37.getResult();
        variance37.clear();
        double[] doubleArray42 = variance37.getData();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertNull(doubleArray42);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        long long4 = variance2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double62 = variance19.evaluate(doubleArray57, (double) 100.0f);
        double double63 = variance17.evaluate(doubleArray57);
        variance15.setData(doubleArray57);
        double double66 = variance13.evaluate(doubleArray57, (double) ' ');
        variance9.setData(doubleArray57);
        double double68 = variance9.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance70.copy();
        variance70.increment((double) '#');
        double[] doubleArray81 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance70.incrementAll(doubleArray81);
        variance9.setData(doubleArray81);
        double double87 = variance2.evaluate(doubleArray81, (double) ' ', (int) (short) 1, (int) (short) 1);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance1.copy();
        variance28.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance28);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment(1617.0666666666664d);
        variance14.setBiasCorrected(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        long long42 = variance4.getN();
        double double43 = variance4.getResult();
        boolean boolean44 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2L + "'", long42 == 2L);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        boolean boolean25 = variance19.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance19.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long29 = variance28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double79 = variance54.evaluate(doubleArray75);
        double double80 = variance28.evaluate(doubleArray75);
        variance26.setData(doubleArray75);
        variance12.incrementAll(doubleArray75);
        boolean boolean83 = variance12.isBiasCorrected();
        boolean boolean84 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance12.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(variance85);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance22);
        boolean boolean25 = variance17.equals((java.lang.Object) variance24);
        boolean boolean27 = variance24.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        double double75 = variance29.evaluate(doubleArray69);
        double double76 = variance24.evaluate(doubleArray69);
        double double78 = variance1.evaluate(doubleArray69, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            double double79 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long53 = variance52.getN();
        long long54 = variance52.getN();
        variance52.clear();
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.clear();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance63.copy();
        boolean boolean68 = variance1.equals((java.lang.Object) variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        double[] doubleArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double72 = variance67.evaluate(doubleArray70, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance60.evaluate(doubleArray69);
        variance7.setData(doubleArray69);
        double double73 = variance1.evaluate(doubleArray69);
        double[] doubleArray74 = variance1.getData();
        variance1.clear();
        variance1.clear();
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray74);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance44.copy();
        double[] doubleArray53 = variance52.getData();
        variance52.setBiasCorrected(false);
        variance52.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        boolean boolean59 = variance38.equals((java.lang.Object) variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance38.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(variance60);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        variance15.incrementAll(doubleArray35);
        variance13.setData(doubleArray35);
        double double41 = variance9.evaluate(doubleArray35, (double) (short) 10);
        long long42 = variance9.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance45.copy();
        variance45.clear();
        variance45.increment((double) (short) 1);
        double double52 = variance45.getResult();
        variance45.setBiasCorrected(false);
        variance45.setBiasCorrected(true);
        double[] doubleArray57 = variance45.getData();
        boolean boolean58 = variance4.equals((java.lang.Object) doubleArray57);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNull(doubleArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean60 = variance59.isBiasCorrected();
        double[] doubleArray62 = new double[] { 100 };
        variance59.incrementAll(doubleArray62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance59);
        long long65 = variance59.getN();
        boolean boolean66 = variance59.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance59);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = variance50.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance9.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        boolean boolean44 = variance38.equals((java.lang.Object) 10);
        variance38.increment((double) (short) 10);
        variance38.clear();
        double double48 = variance38.getResult();
        double double49 = variance38.getResult();
        long long50 = variance38.getN();
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        boolean boolean59 = variance38.equals((java.lang.Object) variance57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance38);
        java.lang.Class<?> wildcardClass61 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray26 = variance25.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        double double35 = variance28.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance39.copy();
        double double48 = variance39.getResult();
        variance39.setBiasCorrected(false);
        variance39.increment(2025.0d);
        long long53 = variance39.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance39.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        long long65 = variance59.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean68 = variance67.isBiasCorrected();
        double[] doubleArray70 = new double[] { 100 };
        variance67.incrementAll(doubleArray70);
        boolean boolean72 = variance59.equals((java.lang.Object) doubleArray70);
        double double73 = variance39.evaluate(doubleArray70);
        double double75 = variance37.evaluate(doubleArray70, (double) 100.0f);
        variance1.setData(doubleArray70);
        boolean boolean77 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(doubleArray26);
        org.junit.Assert.assertTrue(Double.isNaN(double35));
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance47);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 2L + "'", long65 == 2L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = variance1.copy();
        variance1.setBiasCorrected(true);
        // The following exception was thrown during execution in test generation
        try {
            double double50 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(variance47);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        variance68.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        double double85 = variance68.evaluate(doubleArray83);
        double double86 = variance64.evaluate(doubleArray83);
        double double87 = variance62.evaluate(doubleArray83);
        double double89 = variance4.evaluate(doubleArray83, (double) (byte) 0);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        boolean boolean30 = variance29.isBiasCorrected();
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        double double68 = variance36.evaluate(doubleArray62, (double) (short) 10);
        variance29.setData(doubleArray62, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean73 = variance24.equals((java.lang.Object) variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance24.copy();
        long long75 = variance74.getN();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        variance4.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        boolean boolean11 = variance10.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        boolean boolean53 = variance47.equals((java.lang.Object) 10);
        variance47.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        java.lang.Object obj75 = null;
        boolean boolean76 = variance57.equals(obj75);
        variance57.setBiasCorrected(true);
        double[] doubleArray85 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double87 = variance57.evaluate(doubleArray85, 100.0d);
        double double88 = variance47.evaluate(doubleArray85);
        variance45.incrementAll(doubleArray85);
        long long90 = variance45.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1617.066666666667d + "'", double87 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1347.5555555555554d + "'", double88 == 1347.5555555555554d);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 6L + "'", long90 == 6L);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        double double75 = variance6.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance6.copy();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertNotNull(variance76);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        boolean boolean31 = variance13.isBiasCorrected();
        variance13.setBiasCorrected(true);
        variance13.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double[] doubleArray38 = variance37.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        double double47 = variance40.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance40.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance51.copy();
        double double60 = variance51.getResult();
        variance51.setBiasCorrected(false);
        variance51.increment(2025.0d);
        long long65 = variance51.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance51.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        long long77 = variance71.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean80 = variance79.isBiasCorrected();
        double[] doubleArray82 = new double[] { 100 };
        variance79.incrementAll(doubleArray82);
        boolean boolean84 = variance71.equals((java.lang.Object) doubleArray82);
        double double85 = variance51.evaluate(doubleArray82);
        double double87 = variance49.evaluate(doubleArray82, (double) 100.0f);
        variance13.setData(doubleArray82);
        double[] doubleArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double91 = variance1.evaluate(doubleArray82, doubleArray89, 2550.2500000009313d);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(doubleArray38);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 1L + "'", long65 == 1L);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 2L + "'", long77 == 2L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        boolean boolean47 = variance1.equals((java.lang.Object) (short) 100);
        variance1.increment(5100.5d);
        variance1.setBiasCorrected(false);
        variance1.increment((double) 100.0f);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        double double2 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance4.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        variance4.incrementAll(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        variance28.setData(doubleArray37);
        variance28.clear();
        double[] doubleArray41 = variance28.getData();
        // The following exception was thrown during execution in test generation
        try {
            double double45 = variance1.evaluate(doubleArray41, 2200.222222222222d, (int) (short) 10, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double2));
        org.junit.Assert.assertNotNull(variance7);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(variance28);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        long long26 = variance25.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = variance28.copy();
        variance28.increment((double) '#');
        double[] doubleArray39 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance28.incrementAll(doubleArray39);
        variance25.incrementAll(doubleArray39);
        java.lang.Class<?> wildcardClass42 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 3L + "'", long26 == 3L);
        org.junit.Assert.assertNotNull(variance31);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        double double37 = variance32.getResult();
        double[] doubleArray38 = variance32.getData();
        long long39 = variance32.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance32);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        long long25 = variance19.getN();
        long long26 = variance19.getN();
        long long27 = variance19.getN();
        variance19.increment(1347.5555555555554d);
        long long30 = variance19.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        boolean boolean38 = variance32.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long42 = variance41.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance44.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        double double66 = variance44.evaluate(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance69.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        variance73.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment83 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment83);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance81, variance84);
        double[] doubleArray88 = new double[] { (-1), 100.0f };
        variance84.incrementAll(doubleArray88);
        double double90 = variance73.evaluate(doubleArray88);
        double double91 = variance69.evaluate(doubleArray88);
        double double92 = variance67.evaluate(doubleArray88);
        double double93 = variance41.evaluate(doubleArray88);
        variance39.setData(doubleArray88);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = variance39.copy();
        double[] doubleArray96 = variance39.getData();
        variance19.incrementAll(doubleArray96);
        boolean boolean98 = variance13.equals((java.lang.Object) doubleArray96);
        java.lang.Class<?> wildcardClass99 = variance13.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2L + "'", long25 == 2L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2L + "'", long26 == 2L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 3L + "'", long30 == 3L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(variance39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertNotNull(variance95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray96), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        double[] doubleArray4 = new double[] { 100 };
        variance1.incrementAll(doubleArray4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        double double55 = variance9.evaluate(doubleArray49);
        variance7.setData(doubleArray49);
        double double58 = variance1.evaluate(doubleArray49, (double) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            double double59 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        variance43.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean75 = variance74.isBiasCorrected();
        double[] doubleArray77 = new double[] { 100 };
        variance74.incrementAll(doubleArray77);
        double double80 = variance43.evaluate(doubleArray77, (double) 0L);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        boolean boolean7 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance28.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        variance28.setData(doubleArray39);
        variance9.incrementAll(doubleArray39);
        double double44 = variance4.evaluate(doubleArray39, (double) (-1.0f));
        variance4.increment(1624668.890625d);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        long long48 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance1.copy();
        double double50 = variance1.getResult();
        double double51 = variance1.getResult();
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(variance49);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertTrue(Double.isNaN(double51));
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        variance4.increment(1347.5555555555554d);
        long long15 = variance4.getN();
        variance4.setBiasCorrected(false);
        // The following exception was thrown during execution in test generation
        try {
            double double18 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 3L + "'", long15 == 3L);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        long long13 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) (-1L));
        variance15.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        variance33.clear();
        boolean boolean40 = variance28.equals((java.lang.Object) variance33);
        variance28.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = variance44.equals(obj62);
        variance44.setBiasCorrected(true);
        double[] doubleArray72 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double74 = variance44.evaluate(doubleArray72, 100.0d);
        variance28.setData(doubleArray72, (int) (byte) 0, (int) (short) 0);
        double double80 = variance15.evaluate(doubleArray72, (int) (byte) 0, (int) (byte) 1);
        variance4.setData(doubleArray72);
        boolean boolean82 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = variance4.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 1617.066666666667d + "'", double74 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(variance83);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance15.copy();
        double double18 = variance15.getResult();
        boolean boolean19 = variance1.equals((java.lang.Object) variance15);
        boolean boolean20 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        variance8.setBiasCorrected(true);
        long long14 = variance8.getN();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        boolean boolean83 = variance4.equals((java.lang.Object) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance84.setBiasCorrected(false);
        variance84.increment((double) 10);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        variance4.increment((double) 10);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        // The following exception was thrown during execution in test generation
        try {
            double double34 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment20 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment20);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        variance18.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        double[] doubleArray33 = new double[] { (-1), 100.0f };
        variance29.incrementAll(doubleArray33);
        double double35 = variance18.evaluate(doubleArray33);
        double double36 = variance14.evaluate(doubleArray33);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance14);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double62 = variance37.evaluate(doubleArray58);
        double double63 = variance4.evaluate(doubleArray58);
        double double64 = variance4.getResult();
        boolean boolean65 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.clear();
        double double17 = variance8.getResult();
        boolean boolean18 = variance1.equals((java.lang.Object) variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = variance20.equals(obj38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance44.getResult();
        long long51 = variance44.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean55 = variance54.isBiasCorrected();
        double[] doubleArray57 = new double[] { 100 };
        variance54.incrementAll(doubleArray57);
        variance44.incrementAll(doubleArray57);
        double double61 = variance20.evaluate(doubleArray57, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.increment((double) (-1L));
        double[] doubleArray66 = variance63.getData();
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        variance74.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        double double91 = variance74.evaluate(doubleArray89);
        double double92 = variance70.evaluate(doubleArray89);
        double double94 = variance63.evaluate(doubleArray89, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double97 = variance8.evaluate(doubleArray57, doubleArray89, 0, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.DimensionMismatchException; message: 2 != 1");
        } catch (org.apache.commons.math.exception.DimensionMismatchException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        variance10.increment((double) (short) 100);
        variance10.clear();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        double double74 = variance8.evaluate(doubleArray62);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance77.increment(1347.5555555547278d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long53 = variance52.getN();
        long long54 = variance52.getN();
        variance52.clear();
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.clear();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance63.copy();
        boolean boolean68 = variance1.equals((java.lang.Object) variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        double[] doubleArray70 = variance67.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(doubleArray70);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        variance4.increment(1347.5555555555554d);
        double[] doubleArray13 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray13);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        long long4 = variance2.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        variance18.clear();
        boolean boolean25 = variance13.equals((java.lang.Object) variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean28 = variance13.equals((java.lang.Object) variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance57.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        double double79 = variance57.evaluate(doubleArray76);
        double double81 = variance38.evaluate(doubleArray76, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance82);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment87 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment87);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance85, variance88);
        double[] doubleArray92 = new double[] { (-1), 100.0f };
        variance88.incrementAll(doubleArray92);
        double double94 = variance83.evaluate(doubleArray92);
        variance30.setData(doubleArray92);
        variance13.incrementAll(doubleArray92);
        double double97 = variance2.evaluate(doubleArray92);
        variance2.clear();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertNotNull(variance82);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 5100.5d + "'", double97 == 5100.5d);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        variance10.incrementAll(doubleArray30);
        variance8.setData(doubleArray30);
        double double36 = variance4.evaluate(doubleArray30, (double) (short) 10);
        variance4.clear();
        variance4.increment((double) (short) 0);
        double double40 = variance4.getResult();
        variance4.increment(1030428.01d);
        variance4.increment(5100.5d);
        long long45 = variance4.getN();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 3L + "'", long45 == 3L);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        variance17.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) 0.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        variance48.clear();
        boolean boolean55 = variance43.equals((java.lang.Object) variance48);
        variance43.increment((double) 10L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        variance59.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance59.evaluate(doubleArray74);
        java.lang.Object obj77 = null;
        boolean boolean78 = variance59.equals(obj77);
        variance59.setBiasCorrected(true);
        double[] doubleArray87 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double89 = variance59.evaluate(doubleArray87, 100.0d);
        variance43.setData(doubleArray87, (int) (byte) 0, (int) (short) 0);
        double double95 = variance30.evaluate(doubleArray87, (int) (byte) 0, (int) (byte) 1);
        double double96 = variance1.evaluate(doubleArray87);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1617.066666666667d + "'", double89 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 1347.5555555555554d + "'", double96 == 1347.5555555555554d);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        variance1.clear();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        double[] doubleArray23 = variance13.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        boolean boolean31 = variance25.equals((java.lang.Object) 10);
        variance25.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        double double40 = variance35.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance35);
        variance35.clear();
        variance35.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double double50 = variance45.getResult();
        double[] doubleArray56 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double58 = variance45.evaluate(doubleArray56, (double) (short) 1);
        double double60 = variance35.evaluate(doubleArray56, 100.0d);
        double double61 = variance13.evaluate(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double40));
        org.junit.Assert.assertTrue(Double.isNaN(double50));
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 1030428.01d + "'", double58 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 1030428.01d + "'", double60 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 1030428.01d + "'", double61 == 1030428.01d);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance43.copy();
        variance43.increment((double) 2L);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance43);
        variance4.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass73 = variance4.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        double double72 = variance4.evaluate(doubleArray64);
        double[] doubleArray73 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance74);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance74);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.clear();
        variance1.increment(2025.0d);
        boolean boolean38 = variance1.isBiasCorrected();
        long long39 = variance1.getN();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        variance25.increment(0.0d);
        variance25.setBiasCorrected(false);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.increment((double) 1.0f);
        variance22.increment((double) (short) -1);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance8.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.increment((double) 0L);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        variance14.increment(0.0d);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double71 = variance14.evaluate(doubleArray64, (double) (short) 1);
        boolean boolean72 = variance8.equals((java.lang.Object) variance14);
        variance14.increment((double) 2L);
        variance14.clear();
        double[] doubleArray76 = variance14.getData();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(doubleArray76);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        double[] doubleArray11 = new double[] { (-1), 100.0f };
        variance7.incrementAll(doubleArray11);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance7.copy();
        double double16 = variance7.getResult();
        double[] doubleArray17 = variance7.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance0, variance7);
        double[] doubleArray19 = variance7.getData();
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 2550.25d + "'", double16 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray17);
        org.junit.Assert.assertNull(doubleArray19);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        // The following exception was thrown during execution in test generation
        try {
            double double12 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance11);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        double[] doubleArray6 = variance4.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) (-1L));
        variance8.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance67.evaluate(doubleArray76);
        variance14.setData(doubleArray76);
        double double80 = variance8.evaluate(doubleArray76);
        variance4.setData(doubleArray76);
        boolean boolean83 = variance4.equals((java.lang.Object) (byte) 100);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance4.copy();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(variance87);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        boolean boolean66 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance48);
        double double70 = variance46.getResult();
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance46.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(variance73);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double double16 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = variance19.equals(obj37);
        variance19.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance19);
        variance19.increment((double) (byte) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = variance53.equals(obj71);
        variance53.setBiasCorrected(true);
        double[] doubleArray81 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double83 = variance53.evaluate(doubleArray81, 100.0d);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = variance19.evaluate(doubleArray81, (int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double16));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1617.066666666667d + "'", double83 == 1617.066666666667d);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        long long10 = variance1.getN();
        double double11 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(false);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance93 = variance92.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance92);
        java.lang.Class<?> wildcardClass95 = variance92.getClass();
        boolean boolean96 = variance46.equals((java.lang.Object) variance92);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNotNull(variance93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = variance1.copy();
        variance1.increment((double) '4');
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance26.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance22);
        org.junit.Assert.assertNotNull(variance25);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = variance38.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance38);
        variance40.increment((double) (short) 10);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance39);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        double double32 = variance28.evaluate();
        long long33 = variance28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        double double81 = variance35.evaluate(doubleArray75);
        variance28.setData(doubleArray75);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 5100.5d + "'", double32 == 5100.5d);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        double[] doubleArray23 = variance13.getData();
        long long24 = variance13.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance13.copy();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(doubleArray23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(variance25);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double[] doubleArray12 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double14 = variance1.evaluate(doubleArray12, (double) (short) 1);
        double double15 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        variance17.increment(0.0d);
        variance17.setBiasCorrected(false);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance17);
        double[] doubleArray31 = variance17.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance35.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        variance35.incrementAll(doubleArray55);
        variance33.setData(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance33);
        variance60.increment((double) (-1));
        double double63 = variance60.evaluate();
        boolean boolean64 = variance60.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance71);
        boolean boolean74 = variance66.equals((java.lang.Object) variance73);
        boolean boolean76 = variance73.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance73.copy();
        double[] doubleArray83 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance73.setData(doubleArray83);
        double double88 = variance60.evaluate(doubleArray83, 1617.066666666667d, (int) (byte) 1, 0);
        double double90 = variance17.evaluate(doubleArray83, 2200.222222222222d);
        variance1.incrementAll(doubleArray83);
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1030428.01d + "'", double14 == 1030428.01d);
        org.junit.Assert.assertTrue(Double.isNaN(double15));
        org.junit.Assert.assertNull(doubleArray31);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 5100.5d + "'", double63 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double88));
        org.junit.Assert.assertTrue(Double.isNaN(double90));
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        long long13 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance4.copy();
        variance14.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2L + "'", long13 == 2L);
        org.junit.Assert.assertNotNull(variance14);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        long long8 = variance1.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance36.clear();
        long long38 = variance36.getN();
        variance36.increment((double) 100.0f);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        variance1.clear();
        variance1.increment((double) 100);
        boolean boolean7 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        variance9.clear();
        double double18 = variance9.getResult();
        boolean boolean19 = variance9.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        variance21.incrementAll(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        variance45.setData(doubleArray54);
        variance9.incrementAll(doubleArray54);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        long long63 = variance59.getN();
        long long64 = variance59.getN();
        double double65 = variance59.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        long long76 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean79 = variance78.isBiasCorrected();
        double[] doubleArray81 = new double[] { 100 };
        variance78.incrementAll(doubleArray81);
        boolean boolean83 = variance70.equals((java.lang.Object) doubleArray81);
        long long84 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance70);
        boolean boolean86 = variance9.equals((java.lang.Object) variance59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance9);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 1L + "'", long63 == 1L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 1L + "'", long64 == 1L);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 2L + "'", long76 == 2L);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 2L + "'", long84 == 2L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.increment(0.25d);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        variance32.incrementAll(doubleArray52);
        variance1.setData(doubleArray52);
        double double57 = variance1.getResult();
        variance1.setBiasCorrected(true);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double57));
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        variance13.increment((double) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        double[] doubleArray64 = new double[] { (-1), 100.0f };
        variance60.incrementAll(doubleArray64);
        double double66 = variance49.evaluate(doubleArray64);
        double double67 = variance45.evaluate(doubleArray64);
        double double69 = variance26.evaluate(doubleArray64, (double) 100.0f);
        double double70 = variance24.evaluate(doubleArray64);
        variance13.incrementAll(doubleArray64);
        variance13.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance32.copy();
        boolean boolean36 = variance35.isBiasCorrected();
        variance35.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance48.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        variance53.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        double[] doubleArray68 = new double[] { (-1), 100.0f };
        variance64.incrementAll(doubleArray68);
        double double70 = variance53.evaluate(doubleArray68);
        variance48.incrementAll(doubleArray68);
        variance46.setData(doubleArray68);
        double double74 = variance42.evaluate(doubleArray68, (double) (short) 10);
        variance35.setData(doubleArray68, 1, 1);
        double double78 = variance12.evaluate(doubleArray68);
        double double80 = variance1.evaluate(doubleArray68, (double) 1.0f);
        double double81 = variance1.getResult();
        variance1.increment((double) 0);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(variance44);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        variance1.increment(0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance15.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance15.copy();
        boolean boolean19 = variance18.isBiasCorrected();
        double[] doubleArray20 = variance18.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) (-1L));
        variance22.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        variance59.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        double[] doubleArray74 = new double[] { (-1), 100.0f };
        variance70.incrementAll(doubleArray74);
        double double76 = variance59.evaluate(doubleArray74);
        double double77 = variance55.evaluate(doubleArray74);
        double double79 = variance36.evaluate(doubleArray74, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance80);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        double[] doubleArray90 = new double[] { (-1), 100.0f };
        variance86.incrementAll(doubleArray90);
        double double92 = variance81.evaluate(doubleArray90);
        variance28.setData(doubleArray90);
        double double94 = variance22.evaluate(doubleArray90);
        variance18.setData(doubleArray90);
        double double96 = variance18.evaluate();
        double[] doubleArray97 = variance18.getData();
        variance13.incrementAll(doubleArray97);
        double double99 = variance11.evaluate(doubleArray97);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(doubleArray20);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.25d + "'", double96 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray97), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double99 + "' != '" + 2550.25d + "'", double99 == 2550.25d);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance15.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance60.evaluate(doubleArray69);
        variance7.setData(doubleArray69);
        double double73 = variance1.evaluate(doubleArray69);
        double[] doubleArray74 = variance1.getData();
        variance1.clear();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray74);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance1.increment(2046.8888888888887d);
        double[] doubleArray4 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean7 = variance6.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        double[] doubleArray24 = new double[] { (-1), 100.0f };
        variance20.incrementAll(doubleArray24);
        double double26 = variance9.evaluate(doubleArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = variance9.equals(obj27);
        variance9.setBiasCorrected(true);
        double[] doubleArray37 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double39 = variance9.evaluate(doubleArray37, 100.0d);
        variance9.setBiasCorrected(true);
        long long42 = variance9.getN();
        variance9.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        long long56 = variance50.getN();
        boolean boolean57 = variance50.isBiasCorrected();
        double double58 = variance50.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance50.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        java.lang.Object obj79 = null;
        boolean boolean80 = variance61.equals(obj79);
        variance61.setBiasCorrected(true);
        double[] doubleArray89 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double91 = variance61.evaluate(doubleArray89, 100.0d);
        variance59.setData(doubleArray89, (int) (byte) 1, 0);
        boolean boolean95 = variance45.equals((java.lang.Object) doubleArray89);
        variance6.incrementAll(doubleArray89);
        variance6.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance6);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 2550.25d + "'", double26 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1617.066666666667d + "'", double39 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2L + "'", long56 == 2L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1617.066666666667d + "'", double91 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.clear();
        long long49 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double double6 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance27.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        double double49 = variance27.evaluate(doubleArray46);
        double double51 = variance8.evaluate(doubleArray46, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance8.copy();
        variance52.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance64.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        variance64.incrementAll(doubleArray84);
        variance62.setData(doubleArray84);
        double double90 = variance58.evaluate(doubleArray84, (double) (short) 10);
        double double92 = variance52.evaluate(doubleArray84, 100.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance52);
        variance4.setBiasCorrected(true);
        boolean boolean96 = variance4.isBiasCorrected();
        java.lang.Class<?> wildcardClass97 = variance4.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        variance1.increment(5100.5d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        variance36.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        double[] doubleArray51 = new double[] { (-1), 100.0f };
        variance47.incrementAll(doubleArray51);
        double double53 = variance36.evaluate(doubleArray51);
        variance31.incrementAll(doubleArray51);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance55);
        variance55.clear();
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        boolean boolean25 = variance19.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance19.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long29 = variance28.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double79 = variance54.evaluate(doubleArray75);
        double double80 = variance28.evaluate(doubleArray75);
        variance26.setData(doubleArray75);
        variance12.incrementAll(doubleArray75);
        variance12.clear();
        boolean boolean84 = variance12.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        variance1.setBiasCorrected(true);
        long long27 = variance1.getN();
        long long28 = variance1.getN();
        double[] doubleArray29 = variance1.getData();
        boolean boolean30 = variance1.isBiasCorrected();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 3L + "'", long27 == 3L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 3L + "'", long28 == 3L);
        org.junit.Assert.assertNull(doubleArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        variance4.increment(1347.5555555555554d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance16.copy();
        long long20 = variance16.getN();
        long long21 = variance16.getN();
        double[] doubleArray22 = variance16.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        variance24.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance24.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance54.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        variance58.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        double[] doubleArray73 = new double[] { (-1), 100.0f };
        variance69.incrementAll(doubleArray73);
        double double75 = variance58.evaluate(doubleArray73);
        double double76 = variance54.evaluate(doubleArray73);
        double double78 = variance35.evaluate(doubleArray73, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = variance35.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance79);
        double[] doubleArray84 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double87 = variance79.evaluate(doubleArray84, 0, 0);
        double double89 = variance24.evaluate(doubleArray84, (double) 100.0f);
        double double90 = variance16.evaluate(doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double double94 = variance4.evaluate(doubleArray84, 3400.3333333333335d, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 2550.25d + "'", double75 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertNotNull(variance79);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double87));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 1998.0d + "'", double89 == 1998.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 1998.0d + "'", double90 == 1998.0d);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        variance4.increment(1347.5555555555554d);
        long long15 = variance4.getN();
        double[] doubleArray16 = variance4.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 3L + "'", long15 == 3L);
        org.junit.Assert.assertNull(doubleArray16);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance33.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance33);
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        variance52.clear();
        boolean boolean59 = variance47.equals((java.lang.Object) variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean62 = variance47.equals((java.lang.Object) variance61);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        long long73 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean76 = variance75.isBiasCorrected();
        double[] doubleArray78 = new double[] { 100 };
        variance75.incrementAll(doubleArray78);
        boolean boolean80 = variance67.equals((java.lang.Object) doubleArray78);
        variance61.incrementAll(doubleArray78);
        double double83 = variance1.evaluate(doubleArray78, (double) 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2L + "'", long73 == 2L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        variance14.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        double double74 = variance52.evaluate(doubleArray71);
        double double76 = variance33.evaluate(doubleArray71, (double) 100.0f);
        double double77 = variance31.evaluate(doubleArray71);
        variance29.setData(doubleArray71);
        double double80 = variance27.evaluate(doubleArray71, (double) ' ');
        variance23.setData(doubleArray71);
        double double82 = variance23.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance84.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance84.copy();
        variance84.increment((double) '#');
        double[] doubleArray95 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance84.incrementAll(doubleArray95);
        variance23.setData(doubleArray95);
        variance14.setData(doubleArray95);
        variance1.setData(doubleArray95);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 2550.25d + "'", double76 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        boolean boolean19 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        variance1.setData(doubleArray34);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        variance41.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        double[] doubleArray56 = new double[] { (-1), 100.0f };
        variance52.incrementAll(doubleArray56);
        double double58 = variance41.evaluate(doubleArray56);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        double double82 = variance60.evaluate(doubleArray79);
        double double84 = variance41.evaluate(doubleArray79, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance41.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance85);
        org.apache.commons.math.stat.descriptive.moment.Variance variance88 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment90 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance91 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment90);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance88, variance91);
        double[] doubleArray95 = new double[] { (-1), 100.0f };
        variance91.incrementAll(doubleArray95);
        double double97 = variance86.evaluate(doubleArray95);
        variance39.setData(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNotNull(variance85);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray95), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 2550.25d + "'", double97 == 2550.25d);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance4.copy();
        double double7 = variance4.getResult();
        long long8 = variance4.getN();
        long long9 = variance4.getN();
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        variance25.clear();
        boolean boolean32 = variance20.equals((java.lang.Object) variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean35 = variance20.equals((java.lang.Object) variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        long long46 = variance40.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean49 = variance48.isBiasCorrected();
        double[] doubleArray51 = new double[] { 100 };
        variance48.incrementAll(doubleArray51);
        boolean boolean53 = variance40.equals((java.lang.Object) doubleArray51);
        variance34.incrementAll(doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            variance4.setData(doubleArray51, (int) '#', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 2L + "'", long46 == 2L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        double[] doubleArray32 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double34 = variance4.evaluate(doubleArray32, 100.0d);
        variance4.setBiasCorrected(true);
        long long37 = variance4.getN();
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        long long51 = variance45.getN();
        boolean boolean52 = variance45.isBiasCorrected();
        double double53 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = variance45.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        variance56.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        double[] doubleArray71 = new double[] { (-1), 100.0f };
        variance67.incrementAll(doubleArray71);
        double double73 = variance56.evaluate(doubleArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = variance56.equals(obj74);
        variance56.setBiasCorrected(true);
        double[] doubleArray84 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double86 = variance56.evaluate(doubleArray84, 100.0d);
        variance54.setData(doubleArray84, (int) (byte) 1, 0);
        boolean boolean90 = variance40.equals((java.lang.Object) doubleArray84);
        variance1.incrementAll(doubleArray84);
        boolean boolean92 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance96 = variance1.copy();
        variance96.clear();
        long long98 = variance96.getN();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 1617.066666666667d + "'", double34 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(variance40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2L + "'", long51 == 2L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertNotNull(variance54);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1617.066666666667d + "'", double86 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(variance96);
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        double double11 = variance1.getResult();
        double double12 = variance1.getResult();
        long long13 = variance1.getN();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        boolean boolean22 = variance1.equals((java.lang.Object) variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance24.copy();
        variance24.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = variance34.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance63.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        variance67.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        double double84 = variance67.evaluate(doubleArray82);
        double double85 = variance63.evaluate(doubleArray82);
        double double87 = variance44.evaluate(doubleArray82, (double) 100.0f);
        double double88 = variance42.evaluate(doubleArray82);
        variance40.setData(doubleArray82);
        double double91 = variance38.evaluate(doubleArray82, (double) ' ');
        variance34.setData(doubleArray82);
        double double94 = variance24.evaluate(doubleArray82, (double) 100.0f);
        double double98 = variance1.evaluate(doubleArray82, (double) ' ', (int) (byte) 1, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = doubleArray82.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double11));
        org.junit.Assert.assertTrue(Double.isNaN(double12));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNotNull(variance36);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        double double52 = variance30.evaluate(doubleArray49);
        double double54 = variance11.evaluate(doubleArray49, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment60 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment60);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance58, variance61);
        double[] doubleArray65 = new double[] { (-1), 100.0f };
        variance61.incrementAll(doubleArray65);
        double double67 = variance56.evaluate(doubleArray65);
        variance3.setData(doubleArray65);
        variance1.incrementAll(doubleArray65, 0, (int) (short) 0);
        java.lang.Class<?> wildcardClass72 = doubleArray65.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        double[] doubleArray54 = variance45.getData();
        double double55 = variance45.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment59);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        variance57.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double[] doubleArray72 = new double[] { (-1), 100.0f };
        variance68.incrementAll(doubleArray72);
        double double74 = variance57.evaluate(doubleArray72);
        boolean boolean75 = variance57.isBiasCorrected();
        variance57.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment81 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment81);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance79, variance82);
        double double84 = variance79.getResult();
        double[] doubleArray90 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double92 = variance79.evaluate(doubleArray90, (double) (short) 1);
        variance57.setData(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = variance57.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance95 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance57);
        variance57.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass98 = variance57.getClass();
        boolean boolean99 = variance45.equals((java.lang.Object) wildcardClass98);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double84));
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1030428.01d + "'", double92 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance94);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = variance4.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        boolean boolean27 = variance21.equals((java.lang.Object) 10);
        variance21.increment((double) (short) 10);
        variance21.clear();
        double double31 = variance21.getResult();
        double double32 = variance21.getResult();
        long long33 = variance21.getN();
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance42);
        boolean boolean45 = variance37.equals((java.lang.Object) variance44);
        boolean boolean47 = variance44.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment61 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment61);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance59, variance62);
        double[] doubleArray66 = new double[] { (-1), 100.0f };
        variance62.incrementAll(doubleArray66);
        double double68 = variance51.evaluate(doubleArray66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance70.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        variance74.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment84 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment84);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance82, variance85);
        double[] doubleArray89 = new double[] { (-1), 100.0f };
        variance85.incrementAll(doubleArray89);
        double double91 = variance74.evaluate(doubleArray89);
        double double92 = variance70.evaluate(doubleArray89);
        double double94 = variance51.evaluate(doubleArray89, (double) 100.0f);
        double double95 = variance49.evaluate(doubleArray89);
        double double96 = variance44.evaluate(doubleArray89);
        double double98 = variance21.evaluate(doubleArray89, (double) 10);
        variance19.incrementAll(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(variance18);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double31));
        org.junit.Assert.assertTrue(Double.isNaN(double32));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 2550.25d + "'", double96 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 2550.25d + "'", double98 == 2550.25d);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        double[] doubleArray12 = variance4.getData();
        boolean boolean13 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        double double8 = variance1.getResult();
        double double9 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        variance39.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance43.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        variance48.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment58 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment58);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance56, variance59);
        double[] doubleArray63 = new double[] { (-1), 100.0f };
        variance59.incrementAll(doubleArray63);
        double double65 = variance48.evaluate(doubleArray63);
        variance43.incrementAll(doubleArray63);
        variance39.incrementAll(doubleArray63);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        boolean boolean74 = variance69.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean77 = variance76.isBiasCorrected();
        double[] doubleArray79 = new double[] { 100 };
        variance76.incrementAll(doubleArray79);
        double double81 = variance69.evaluate(doubleArray79);
        double double83 = variance39.evaluate(doubleArray79, 1347.5555555555554d);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = variance1.evaluate(doubleArray79, (int) '4', 10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean6 = variance1.isBiasCorrected();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        variance9.incrementAll(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = variance9.copy();
        variance9.increment((double) 2L);
        double[] doubleArray36 = variance9.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance9);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(variance33);
        org.junit.Assert.assertNull(doubleArray36);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        variance6.clear();
        long long11 = variance6.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance6);
        variance4.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass15 = variance4.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.clear();
        variance4.setBiasCorrected(false);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance4.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance15);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        long long11 = variance4.getN();
        long long12 = variance4.getN();
        double double13 = variance4.getResult();
        variance4.clear();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 2L + "'", long11 == 2L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 2L + "'", long12 == 2L);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2550.25d + "'", double13 == 2550.25d);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = variance1.copy();
        variance1.setBiasCorrected(false);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance10.copy();
        boolean boolean14 = variance13.isBiasCorrected();
        variance13.clear();
        variance13.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance13.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        variance21.incrementAll(doubleArray41);
        variance19.setData(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance19);
        variance46.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        variance50.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance50);
        double double55 = variance50.getResult();
        double[] doubleArray56 = variance50.getData();
        variance17.setData(doubleArray56);
        double double58 = variance1.evaluate(doubleArray56);
        long long59 = variance1.getN();
        org.junit.Assert.assertNotNull(variance5);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance1.copy();
        double double10 = variance1.getResult();
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance14.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = variance14.copy();
        variance14.clear();
        variance14.increment((double) (short) 1);
        double double21 = variance14.getResult();
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        double double42 = variance25.evaluate(doubleArray40);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance45.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance45.copy();
        boolean boolean49 = variance48.isBiasCorrected();
        variance48.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = variance61.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment68 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment68);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance66, variance69);
        variance66.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment76 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance74, variance77);
        double[] doubleArray81 = new double[] { (-1), 100.0f };
        variance77.incrementAll(doubleArray81);
        double double83 = variance66.evaluate(doubleArray81);
        variance61.incrementAll(doubleArray81);
        variance59.setData(doubleArray81);
        double double87 = variance55.evaluate(doubleArray81, (double) (short) 10);
        variance48.setData(doubleArray81, 1, 1);
        double double91 = variance25.evaluate(doubleArray81);
        double double93 = variance14.evaluate(doubleArray81, (double) 1.0f);
        double double95 = variance1.evaluate(doubleArray81, (double) 6L);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(variance17);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertNotNull(variance64);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 2550.25d + "'", double91 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance4.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        variance9.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        variance9.clear();
        double double18 = variance9.getResult();
        boolean boolean19 = variance9.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance21.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        variance21.incrementAll(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance21.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        variance45.setData(doubleArray54);
        variance9.incrementAll(doubleArray54);
        double double58 = variance4.evaluate(doubleArray54);
        variance4.clear();
        org.junit.Assert.assertTrue(Double.isNaN(double18));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(variance24);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        boolean boolean11 = variance4.isBiasCorrected();
        double double12 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance4.copy();
        variance13.clear();
        double[] doubleArray15 = variance13.getData();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2550.25d + "'", double12 == 2550.25d);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNull(doubleArray15);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double double28 = variance23.getResult();
        double[] doubleArray34 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double36 = variance23.evaluate(doubleArray34, (double) (short) 1);
        double double37 = variance1.evaluate(doubleArray34);
        variance1.increment((double) (-1));
        double double40 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertTrue(Double.isNaN(double28));
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1030428.01d + "'", double36 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1030428.01d + "'", double37 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        variance10.increment((double) (byte) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance16.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        variance16.incrementAll(doubleArray36);
        variance14.setData(doubleArray36);
        variance14.increment(5100.5d);
        double double43 = variance14.getResult();
        boolean boolean44 = variance14.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance14);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(variance57);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        boolean boolean8 = variance1.isBiasCorrected();
        double[] doubleArray9 = variance1.getData();
        double[] doubleArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray10);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(doubleArray9);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment59 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false, secondMoment59);
        variance60.increment(10.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance57, variance60);
        boolean boolean64 = variance60.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance60);
        double[] doubleArray66 = variance60.getData();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(doubleArray66);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        variance1.clear();
        variance1.increment((double) (short) 1);
        variance1.increment((double) 0L);
        boolean boolean10 = variance1.isBiasCorrected();
        variance1.increment((double) (byte) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        java.lang.Class<?> wildcardClass15 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.setBiasCorrected(true);
        long long34 = variance1.getN();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        boolean boolean44 = variance38.equals((java.lang.Object) 10);
        variance38.increment((double) (short) 10);
        variance38.clear();
        double double48 = variance38.getResult();
        double double49 = variance38.getResult();
        long long50 = variance38.getN();
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        boolean boolean59 = variance38.equals((java.lang.Object) variance57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance38);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double48));
        org.junit.Assert.assertTrue(Double.isNaN(double49));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        double double31 = variance28.evaluate();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        variance33.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment43 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment43);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance41, variance44);
        double[] doubleArray48 = new double[] { (-1), 100.0f };
        variance44.incrementAll(doubleArray48);
        double double50 = variance33.evaluate(doubleArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = variance33.equals(obj51);
        double[] doubleArray53 = variance33.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance55.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance55.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        variance55.incrementAll(doubleArray75);
        variance33.incrementAll(doubleArray75);
        double double80 = variance28.evaluate(doubleArray75);
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 5100.5d + "'", double31 == 5100.5d);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(doubleArray53);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 5100.5d + "'", double80 == 5100.5d);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        boolean boolean13 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        variance14.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        double[] doubleArray29 = new double[] { (-1), 100.0f };
        variance25.incrementAll(doubleArray29);
        double double31 = variance14.evaluate(doubleArray29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance33.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        double double55 = variance33.evaluate(doubleArray52);
        double double57 = variance14.evaluate(doubleArray52, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = variance14.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance58);
        double[] doubleArray63 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double66 = variance58.evaluate(doubleArray63, 0, 0);
        boolean boolean67 = variance12.equals((java.lang.Object) variance58);
        double double68 = variance58.getResult();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 2550.25d + "'", double31 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(variance58);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double66));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double68));
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        variance1.setBiasCorrected(true);
        variance1.setBiasCorrected(true);
        double[] doubleArray11 = variance1.getData();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(doubleArray11);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        boolean boolean21 = variance13.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        variance31.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        double[] doubleArray46 = new double[] { (-1), 100.0f };
        variance42.incrementAll(doubleArray46);
        double double48 = variance31.evaluate(doubleArray46);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance50.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        variance54.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double[] doubleArray69 = new double[] { (-1), 100.0f };
        variance65.incrementAll(doubleArray69);
        double double71 = variance54.evaluate(doubleArray69);
        double double72 = variance50.evaluate(doubleArray69);
        double double74 = variance31.evaluate(doubleArray69, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = variance31.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance75);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment80 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance78, variance81);
        double[] doubleArray85 = new double[] { (-1), 100.0f };
        variance81.incrementAll(doubleArray85);
        double double87 = variance76.evaluate(doubleArray85);
        variance23.setData(doubleArray85);
        double double90 = variance13.evaluate(doubleArray85, (double) 1);
        double[] doubleArray91 = variance13.getData();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 2550.25d + "'", double74 == 2550.25d);
        org.junit.Assert.assertNotNull(variance75);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 2550.25d + "'", double87 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray91);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        variance1.increment((double) 2L);
        boolean boolean28 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance30.increment((double) (-1L));
        variance30.increment((double) (short) 100);
        boolean boolean35 = variance1.equals((java.lang.Object) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long40 = variance39.getN();
        long long41 = variance39.getN();
        variance39.clear();
        variance39.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        variance46.clear();
        double double55 = variance46.getResult();
        boolean boolean56 = variance39.equals((java.lang.Object) variance46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance46);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance24);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        double[] doubleArray40 = new double[] { (-1), 100.0f };
        variance36.incrementAll(doubleArray40);
        variance36.clear();
        boolean boolean43 = variance31.equals((java.lang.Object) variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance36);
        variance36.increment((double) (short) 1);
        long long47 = variance36.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment51 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment51);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance49, variance52);
        boolean boolean55 = variance49.equals((java.lang.Object) 10);
        variance49.increment((double) (short) 10);
        variance49.clear();
        double double59 = variance49.getResult();
        double double60 = variance49.getResult();
        double[] doubleArray61 = variance49.getData();
        variance49.setBiasCorrected(true);
        variance49.clear();
        variance49.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance49);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        variance72.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = variance72.copy();
        double[] doubleArray81 = variance80.getData();
        variance80.setBiasCorrected(false);
        variance80.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance80);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance86);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2L + "'", long47 == 2L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double59));
        org.junit.Assert.assertTrue(Double.isNaN(double60));
        org.junit.Assert.assertNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance80);
        org.junit.Assert.assertNull(doubleArray81);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        variance1.increment(0.0d);
        long long26 = variance1.getN();
        double double27 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        double double70 = variance48.evaluate(doubleArray67);
        double double72 = variance29.evaluate(doubleArray67, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance73.copy();
        double double75 = variance73.getResult();
        long long76 = variance73.getN();
        boolean boolean77 = variance1.equals((java.lang.Object) long76);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 2550.25d + "'", double70 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 2550.25d + "'", double72 == 2550.25d);
        org.junit.Assert.assertNotNull(variance73);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertTrue(Double.isNaN(double75));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance8.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        variance13.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        double[] doubleArray28 = new double[] { (-1), 100.0f };
        variance24.incrementAll(doubleArray28);
        double double30 = variance13.evaluate(doubleArray28);
        variance8.incrementAll(doubleArray28);
        variance6.setData(doubleArray28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double double39 = variance34.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        variance68.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment78 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance79 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance76, variance79);
        double[] doubleArray83 = new double[] { (-1), 100.0f };
        variance79.incrementAll(doubleArray83);
        double double85 = variance68.evaluate(doubleArray83);
        double double86 = variance64.evaluate(doubleArray83);
        double double88 = variance45.evaluate(doubleArray83, (double) 100.0f);
        double double89 = variance43.evaluate(doubleArray83);
        variance41.setData(doubleArray83);
        double double92 = variance34.evaluate(doubleArray83, (double) (-1));
        variance6.setData(doubleArray83);
        double[] doubleArray94 = variance6.getData();
        double double95 = variance1.evaluate(doubleArray94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(variance11);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 2550.25d + "'", double30 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double39));
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 2550.25d + "'", double88 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray94), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 5100.5d + "'", double95 == 5100.5d);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        variance45.clear();
        double double47 = variance45.getResult();
        variance45.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance49.clear();
        long long51 = variance49.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance49);
        double[] doubleArray53 = variance52.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNull(doubleArray53);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.increment((double) (byte) 10);
        variance1.increment((double) (short) 100);
        variance1.clear();
        java.lang.Class<?> wildcardClass15 = variance1.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance46.evaluate(doubleArray55);
        variance46.increment(Double.NaN);
        boolean boolean60 = variance46.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        variance62.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance62.evaluate(doubleArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = variance62.equals(obj80);
        variance62.setBiasCorrected(true);
        double[] doubleArray90 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double92 = variance62.evaluate(doubleArray90, 100.0d);
        double double93 = variance46.evaluate(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance46);
        // The following exception was thrown during execution in test generation
        try {
            double double95 = variance94.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 1617.066666666667d + "'", double92 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 1347.5555555555554d + "'", double93 == 1347.5555555555554d);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean10 = variance9.isBiasCorrected();
        double[] doubleArray12 = new double[] { 100 };
        variance9.incrementAll(doubleArray12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        variance19.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        double[] doubleArray34 = new double[] { (-1), 100.0f };
        variance30.incrementAll(doubleArray34);
        double double36 = variance19.evaluate(doubleArray34);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance38.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        double double60 = variance38.evaluate(doubleArray57);
        double double62 = variance19.evaluate(doubleArray57, (double) 100.0f);
        double double63 = variance17.evaluate(doubleArray57);
        variance15.setData(doubleArray57);
        double double66 = variance9.evaluate(doubleArray57, (double) (byte) -1);
        variance1.setData(doubleArray57, 1, (int) (short) 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        variance71.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance71);
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment82 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment82);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance80, variance83);
        double[] doubleArray87 = new double[] { (-1), 100.0f };
        variance83.incrementAll(doubleArray87);
        variance83.clear();
        boolean boolean90 = variance78.equals((java.lang.Object) variance83);
        double[] doubleArray91 = variance83.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance83);
        long long93 = variance83.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance94 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance83);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 2550.25d + "'", double36 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(doubleArray91);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = variance67.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = variance71.copy();
        boolean boolean75 = variance74.isBiasCorrected();
        variance74.clear();
        variance74.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance74.copy();
        java.lang.Class<?> wildcardClass79 = variance74.getClass();
        boolean boolean80 = variance67.equals((java.lang.Object) variance74);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNotNull(variance69);
        org.junit.Assert.assertNotNull(variance74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        double double23 = variance1.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = variance26.copy();
        boolean boolean30 = variance29.isBiasCorrected();
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance42.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        variance42.incrementAll(doubleArray62);
        variance40.setData(doubleArray62);
        double double68 = variance36.evaluate(doubleArray62, (double) (short) 10);
        variance29.setData(doubleArray62, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance29);
        boolean boolean73 = variance24.equals((java.lang.Object) variance29);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        double[] doubleArray82 = new double[] { (-1), 100.0f };
        variance78.incrementAll(doubleArray82);
        long long84 = variance78.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean87 = variance86.isBiasCorrected();
        double[] doubleArray89 = new double[] { 100 };
        variance86.incrementAll(doubleArray89);
        boolean boolean91 = variance78.equals((java.lang.Object) doubleArray89);
        long long92 = variance78.getN();
        java.lang.Class<?> wildcardClass93 = variance78.getClass();
        boolean boolean94 = variance24.equals((java.lang.Object) wildcardClass93);
        double[] doubleArray95 = variance24.getData();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 2L + "'", long84 == 2L);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 2L + "'", long92 == 2L);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(doubleArray95);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance41.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        variance45.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        double double62 = variance45.evaluate(doubleArray60);
        double double63 = variance41.evaluate(doubleArray60);
        double double65 = variance22.evaluate(doubleArray60, (double) 100.0f);
        double double66 = variance20.evaluate(doubleArray60);
        variance18.setData(doubleArray60);
        double double69 = variance16.evaluate(doubleArray60, (double) ' ');
        variance12.setData(doubleArray60);
        variance6.incrementAll(doubleArray60);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double double78 = variance73.getResult();
        double[] doubleArray84 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double86 = variance73.evaluate(doubleArray84, (double) (short) 1);
        double double87 = variance6.evaluate(doubleArray84);
        org.apache.commons.math.stat.descriptive.moment.Variance variance89 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance89.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance92 = variance89.copy();
        boolean boolean93 = variance92.isBiasCorrected();
        long long94 = variance92.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance92);
        double double96 = variance92.getResult();
        double double97 = variance92.getResult();
        long long98 = variance92.getN();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double78));
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 1030428.01d + "'", double86 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 1030428.01d + "'", double87 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 1L + "'", long94 == 1L);
        org.junit.Assert.assertTrue(Double.isNaN(double96));
        org.junit.Assert.assertTrue(Double.isNaN(double97));
        org.junit.Assert.assertTrue("'" + long98 + "' != '" + 0L + "'", long98 == 0L);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        java.lang.Object obj9 = null;
        boolean boolean10 = variance6.equals(obj9);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        boolean boolean18 = variance12.equals((java.lang.Object) 10);
        variance12.increment((double) (short) 10);
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = variance25.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        variance25.incrementAll(doubleArray45);
        variance23.setData(doubleArray45);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance23);
        variance50.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance54.increment((double) 10);
        variance54.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance54);
        double double59 = variance54.getResult();
        double[] doubleArray60 = variance54.getData();
        double double62 = variance12.evaluate(doubleArray60, 1347.5555555555554d);
        double double63 = variance6.evaluate(doubleArray60);
        java.lang.Class<?> wildcardClass64 = variance6.getClass();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(variance28);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.250000000233d + "'", double62 == 2550.250000000233d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        variance3.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        double[] doubleArray18 = new double[] { (-1), 100.0f };
        variance14.incrementAll(doubleArray18);
        double double20 = variance3.evaluate(doubleArray18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        double[] doubleArray41 = new double[] { (-1), 100.0f };
        variance37.incrementAll(doubleArray41);
        double double43 = variance26.evaluate(doubleArray41);
        double double44 = variance22.evaluate(doubleArray41);
        double double46 = variance3.evaluate(doubleArray41, (double) 100.0f);
        double double47 = variance1.evaluate(doubleArray41);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        boolean boolean49 = variance48.isBiasCorrected();
        variance48.setBiasCorrected(true);
        java.lang.Class<?> wildcardClass52 = variance48.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 2550.25d + "'", double20 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance4.copy();
        long long9 = variance8.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        boolean boolean52 = variance1.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment63 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment63);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance61, variance64);
        variance61.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        double[] doubleArray76 = new double[] { (-1), 100.0f };
        variance72.incrementAll(doubleArray76);
        double double78 = variance61.evaluate(doubleArray76);
        variance56.incrementAll(doubleArray76);
        variance54.setData(doubleArray76);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance54);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance84 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        variance1.increment((double) '#');
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        double[] doubleArray29 = new double[] { 1.0f, (short) -1, 0L, 10L, 100.0f, 0.0d };
        double double31 = variance1.evaluate(doubleArray29, 100.0d);
        variance1.increment((double) 0);
        double double34 = variance1.getResult();
        // The following exception was thrown during execution in test generation
        try {
            double double35 = variance1.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[1.0, -1.0, 0.0, 10.0, 100.0, 0.0]");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 1617.066666666667d + "'", double31 == 1617.066666666667d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        java.lang.Class<?> wildcardClass54 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance52);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        boolean boolean14 = variance8.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance8.copy();
        boolean boolean16 = variance15.isBiasCorrected();
        double[] doubleArray17 = null;
        variance15.setData(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        double double61 = variance39.evaluate(doubleArray58);
        double double63 = variance20.evaluate(doubleArray58, (double) 100.0f);
        double[] doubleArray64 = variance20.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = variance20.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance65);
        boolean boolean67 = variance4.equals((java.lang.Object) variance65);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray64);
        org.junit.Assert.assertNotNull(variance65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double double51 = variance50.getResult();
        variance50.clear();
        variance50.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance50.copy();
        long long56 = variance55.getN();
        variance55.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        variance1.increment((double) (short) 10);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance12.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance33.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance33);
        double[] doubleArray37 = variance33.getData();
        variance33.setBiasCorrected(true);
        long long40 = variance33.getN();
        double[] doubleArray41 = variance33.getData();
        long long42 = variance33.getN();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(doubleArray41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        double[] doubleArray7 = variance6.getData();
        double[] doubleArray8 = variance6.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance10.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean15 = variance14.isBiasCorrected();
        double[] doubleArray17 = new double[] { 100 };
        variance14.incrementAll(doubleArray17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        double double67 = variance24.evaluate(doubleArray62, (double) 100.0f);
        double double68 = variance22.evaluate(doubleArray62);
        variance20.setData(doubleArray62);
        double double71 = variance14.evaluate(doubleArray62, (double) (byte) -1);
        double double73 = variance10.evaluate(doubleArray62, (double) 1.0f);
        boolean boolean74 = variance6.equals((java.lang.Object) variance10);
        long long75 = variance10.getN();
        long long76 = variance10.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = variance10.copy();
        double[] doubleArray78 = variance77.getData();
        org.junit.Assert.assertNull(doubleArray7);
        org.junit.Assert.assertNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 2550.25d + "'", double67 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 2550.25d + "'", double68 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 2550.25d + "'", double71 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 2550.25d + "'", double73 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1L + "'", long75 == 1L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 1L + "'", long76 == 1L);
        org.junit.Assert.assertNotNull(variance77);
        org.junit.Assert.assertNull(doubleArray78);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance87.setBiasCorrected(false);
        double[] doubleArray90 = variance87.getData();
        variance87.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNull(doubleArray90);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        boolean boolean3 = variance2.isBiasCorrected();
        double[] doubleArray4 = variance2.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance6.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance8.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        double[] doubleArray30 = new double[] { (-1), 100.0f };
        variance26.incrementAll(doubleArray30);
        double double32 = variance15.evaluate(doubleArray30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance34.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        variance38.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        double[] doubleArray53 = new double[] { (-1), 100.0f };
        variance49.incrementAll(doubleArray53);
        double double55 = variance38.evaluate(doubleArray53);
        double double56 = variance34.evaluate(doubleArray53);
        double double58 = variance15.evaluate(doubleArray53, (double) 100.0f);
        double double59 = variance13.evaluate(doubleArray53);
        variance11.setData(doubleArray53);
        variance11.clear();
        boolean boolean62 = variance11.isBiasCorrected();
        double double63 = variance11.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.increment((double) 4L);
        boolean boolean67 = variance2.equals((java.lang.Object) variance8);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 2550.25d + "'", double32 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 2550.25d + "'", double58 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double63));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance22.increment((double) (-1.0f));
        boolean boolean25 = variance22.isBiasCorrected();
        variance22.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        long long6 = variance1.getN();
        variance1.setBiasCorrected(true);
        double double9 = variance1.getResult();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        long long3 = variance1.getN();
        variance1.clear();
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance8.clear();
        double double17 = variance8.getResult();
        boolean boolean18 = variance1.equals((java.lang.Object) variance8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = variance20.copy();
        boolean boolean24 = variance23.isBiasCorrected();
        long long25 = variance23.getN();
        variance23.increment((double) (short) 100);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance23);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double17));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(variance23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 1L + "'", long25 == 1L);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment5 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment5);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance3, variance6);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance6);
        boolean boolean9 = variance1.equals((java.lang.Object) variance8);
        boolean boolean11 = variance8.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance8.copy();
        variance12.increment(576.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance12);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        variance1.incrementAll(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance25.copy();
        double double27 = variance25.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance25);
        variance25.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 2046.8888888888887d + "'", double27 == 2046.8888888888887d);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long2 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment6 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment6);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance7);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        double[] doubleArray19 = new double[] { (-1), 100.0f };
        variance15.incrementAll(doubleArray19);
        double double21 = variance4.evaluate(doubleArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = variance4.equals(obj22);
        variance4.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment29 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment29);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance27, variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance35.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance35.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        variance35.incrementAll(doubleArray55);
        variance4.setData(doubleArray55);
        double double61 = variance1.evaluate(doubleArray55, (double) 100);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2550.25d + "'", double21 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double double6 = variance1.getResult();
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance11.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        variance16.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        double double33 = variance16.evaluate(doubleArray31);
        variance11.incrementAll(doubleArray31);
        variance9.setData(doubleArray31);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance9);
        variance36.increment((double) (-1));
        double double39 = variance36.evaluate();
        boolean boolean40 = variance36.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance47);
        boolean boolean50 = variance42.equals((java.lang.Object) variance49);
        boolean boolean52 = variance49.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = variance49.copy();
        double[] doubleArray59 = new double[] { 10, Double.NaN, 100.0f, 2550.25d, 0.0d };
        variance49.setData(doubleArray59);
        double double64 = variance36.evaluate(doubleArray59, 1617.066666666667d, (int) (byte) 1, 0);
        // The following exception was thrown during execution in test generation
        try {
            double double67 = variance1.evaluate(doubleArray59, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue(Double.isNaN(double6));
        org.junit.Assert.assertTrue(Double.isNaN(double7));
        org.junit.Assert.assertNotNull(variance14);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 2550.25d + "'", double33 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 5100.5d + "'", double39 == 5100.5d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(variance53);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[10.0, NaN, 100.0, 2550.25, 0.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double[] doubleArray50 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double53 = variance45.evaluate(doubleArray50, 0, 0);
        double[] doubleArray54 = variance45.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = variance56.copy();
        variance56.clear();
        variance56.increment((double) (short) 1);
        variance56.increment((double) 0L);
        boolean boolean65 = variance56.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = variance56.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance66);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        boolean boolean69 = variance45.equals((java.lang.Object) variance68);
        variance45.clear();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double53));
        org.junit.Assert.assertNull(doubleArray54);
        org.junit.Assert.assertNotNull(variance59);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(variance66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance3.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = variance3.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        variance8.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment18 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment18);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance16, variance19);
        double[] doubleArray23 = new double[] { (-1), 100.0f };
        variance19.incrementAll(doubleArray23);
        double double25 = variance8.evaluate(doubleArray23);
        variance3.incrementAll(doubleArray23);
        variance1.setData(doubleArray23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance28.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance32.increment((double) 10);
        variance32.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = variance28.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance39.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = variance39.copy();
        variance39.increment((double) '#');
        double[] doubleArray50 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance39.incrementAll(doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            variance37.incrementAll(doubleArray50, (int) (byte) 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertNotNull(variance37);
        org.junit.Assert.assertNotNull(variance42);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[35.0, 0.0, 1.0, -1.0, 1.0]");
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment7 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment7);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance5, variance8);
        variance5.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        double double22 = variance5.evaluate(doubleArray20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        double double46 = variance24.evaluate(doubleArray43);
        double double48 = variance5.evaluate(doubleArray43, (double) 100.0f);
        double double49 = variance3.evaluate(doubleArray43);
        variance1.setData(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        variance52.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        double[] doubleArray67 = new double[] { (-1), 100.0f };
        variance63.incrementAll(doubleArray67);
        double double69 = variance52.evaluate(doubleArray67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance71.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment77 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment77);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance75, variance78);
        variance75.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance83 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment85 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance86 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment85);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance83, variance86);
        double[] doubleArray90 = new double[] { (-1), 100.0f };
        variance86.incrementAll(doubleArray90);
        double double92 = variance75.evaluate(doubleArray90);
        double double93 = variance71.evaluate(doubleArray90);
        double double95 = variance52.evaluate(doubleArray90, (double) 100.0f);
        variance1.setData(doubleArray90);
        org.apache.commons.math.stat.descriptive.moment.Variance variance97 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        double[] doubleArray98 = variance1.getData();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 2550.25d + "'", double22 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 2550.25d + "'", double69 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 2550.25d + "'", double93 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 2550.25d + "'", double95 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray98), "[-1.0, 100.0]");
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        variance1.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance29);
        variance29.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment35 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment35);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance33, variance36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = variance36.copy();
        double[] doubleArray39 = variance38.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance38);
        double[] doubleArray42 = variance29.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(variance38);
        org.junit.Assert.assertNull(doubleArray39);
        org.junit.Assert.assertNull(doubleArray42);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        variance25.setBiasCorrected(false);
        variance25.increment(0.0d);
        variance25.setBiasCorrected(false);
        variance25.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        double double41 = variance22.getResult();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue(Double.isNaN(double41));
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = variance1.equals(obj19);
        double[] doubleArray21 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance1.incrementAll(doubleArray43);
        double[] doubleArray48 = variance1.getData();
        variance1.increment((double) 'a');
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        long long53 = variance52.getN();
        long long54 = variance52.getN();
        variance52.clear();
        variance52.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance60.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance60.copy();
        boolean boolean64 = variance63.isBiasCorrected();
        variance63.clear();
        variance63.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance63.copy();
        boolean boolean68 = variance1.equals((java.lang.Object) variance67);
        java.lang.Class<?> wildcardClass69 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray48);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance47.clear();
        boolean boolean49 = variance47.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance47);
        java.lang.Class<?> wildcardClass51 = variance1.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        variance4.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance17.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment24 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment24);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance22, variance25);
        variance22.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        double[] doubleArray37 = new double[] { (-1), 100.0f };
        variance33.incrementAll(doubleArray37);
        double double39 = variance22.evaluate(doubleArray37);
        variance17.incrementAll(doubleArray37);
        variance15.setData(doubleArray37);
        double double43 = variance11.evaluate(doubleArray37, (double) (short) 10);
        variance4.setData(doubleArray37, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        variance4.increment(0.0d);
        double double50 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance52.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance52.copy();
        variance52.setBiasCorrected(false);
        long long59 = variance52.getN();
        variance52.increment((double) (byte) 100);
        double[] doubleArray62 = variance52.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance52);
        boolean boolean65 = variance4.equals((java.lang.Object) variance64);
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 2550.25d + "'", double39 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 2550.25d + "'", double43 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 1L + "'", long59 == 1L);
        org.junit.Assert.assertNull(doubleArray62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance53.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = variance59.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment66 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment66);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance64, variance67);
        variance64.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment74 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment74);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance75);
        double[] doubleArray79 = new double[] { (-1), 100.0f };
        variance75.incrementAll(doubleArray79);
        double double81 = variance64.evaluate(doubleArray79);
        variance59.incrementAll(doubleArray79);
        variance57.setData(doubleArray79);
        double double85 = variance53.evaluate(doubleArray79, (double) (short) 10);
        variance46.incrementAll(doubleArray79);
        org.apache.commons.math.stat.descriptive.moment.Variance variance87 = variance46.copy();
        variance46.setBiasCorrected(true);
        double[] doubleArray90 = variance46.getData();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(variance62);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertNotNull(variance87);
        org.junit.Assert.assertNull(doubleArray90);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.apache.commons.math.stat.descriptive.moment.Variance variance0 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = variance0.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance2 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance0);
        double[] doubleArray3 = variance2.getData();
        variance2.clear();
        double double5 = variance2.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = variance13.copy();
        boolean boolean17 = variance16.isBiasCorrected();
        variance16.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance29.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = variance29.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        variance34.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        double[] doubleArray49 = new double[] { (-1), 100.0f };
        variance45.incrementAll(doubleArray49);
        double double51 = variance34.evaluate(doubleArray49);
        variance29.incrementAll(doubleArray49);
        variance27.setData(doubleArray49);
        double double55 = variance23.evaluate(doubleArray49, (double) (short) 10);
        variance16.setData(doubleArray49, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance59);
        variance59.clear();
        variance59.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = variance59.copy();
        java.lang.Object obj64 = null;
        boolean boolean65 = variance59.equals(obj64);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment69 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment69);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance70);
        double[] doubleArray73 = variance72.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance75 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance75.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance78 = variance75.copy();
        boolean boolean79 = variance78.isBiasCorrected();
        double[] doubleArray80 = variance78.getData();
        boolean boolean81 = variance78.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance78);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance72, variance82);
        boolean boolean84 = variance59.equals((java.lang.Object) variance72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance2, variance59);
        org.junit.Assert.assertNotNull(variance1);
        org.junit.Assert.assertNull(doubleArray3);
        org.junit.Assert.assertTrue(Double.isNaN(double5));
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance32);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(variance63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertNotNull(variance78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(doubleArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = variance1.copy();
        double double47 = variance46.getResult();
        variance46.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = variance46.copy();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertNotNull(variance46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance49);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        long long10 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean13 = variance12.isBiasCorrected();
        double[] doubleArray15 = new double[] { 100 };
        variance12.incrementAll(doubleArray15);
        boolean boolean17 = variance4.equals((java.lang.Object) doubleArray15);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance40.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance52 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment54 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment54);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance52, variance55);
        double[] doubleArray59 = new double[] { (-1), 100.0f };
        variance55.incrementAll(doubleArray59);
        double double61 = variance44.evaluate(doubleArray59);
        double double62 = variance40.evaluate(doubleArray59);
        double double64 = variance21.evaluate(doubleArray59, (double) 100.0f);
        double double65 = variance19.evaluate(doubleArray59);
        variance4.incrementAll(doubleArray59);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        long long68 = variance67.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance70.increment(2046.8888888888887d);
        double[] doubleArray73 = variance70.getData();
        long long74 = variance70.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance67, variance70);
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = variance70.copy();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 2L + "'", long10 == 2L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 2550.25d + "'", double61 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 2550.25d + "'", double62 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 4L + "'", long68 == 4L);
        org.junit.Assert.assertNull(doubleArray73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 1L + "'", long74 == 1L);
        org.junit.Assert.assertNotNull(variance76);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        long long6 = variance4.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment10 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance8, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = variance11.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance18);
        double[] doubleArray21 = variance20.getData();
        double[] doubleArray22 = variance20.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        boolean boolean30 = variance24.equals((java.lang.Object) 10);
        variance24.increment((double) (short) 10);
        variance24.increment((double) (byte) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        org.apache.commons.math.stat.descriptive.moment.Variance variance59 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance59.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment65 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance66 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment65);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance63, variance66);
        variance63.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment73 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance74 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment73);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance71, variance74);
        double[] doubleArray78 = new double[] { (-1), 100.0f };
        variance74.incrementAll(doubleArray78);
        double double80 = variance63.evaluate(doubleArray78);
        double double81 = variance59.evaluate(doubleArray78);
        double double83 = variance40.evaluate(doubleArray78, (double) 100.0f);
        double double84 = variance38.evaluate(doubleArray78);
        variance36.setData(doubleArray78);
        variance24.setData(doubleArray78, (int) (byte) 1, 0);
        double[] doubleArray89 = variance24.getData();
        variance20.incrementAll(doubleArray89);
        double double92 = variance11.evaluate(doubleArray89, (double) 10L);
        double double94 = variance4.evaluate(doubleArray89, 2550.25d);
        boolean boolean95 = variance4.isBiasCorrected();
        double double96 = variance4.getResult();
        variance4.clear();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(variance13);
        org.junit.Assert.assertNull(doubleArray21);
        org.junit.Assert.assertNull(doubleArray22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 2550.25d + "'", double81 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 2550.25d + "'", double84 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[]");
        org.junit.Assert.assertTrue(Double.isNaN(double92));
        org.junit.Assert.assertTrue(Double.isNaN(double94));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance22.increment((double) (-1.0f));
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment28 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment28);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance26, variance29);
        variance26.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance26);
        variance26.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = variance26.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        variance37.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment47 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment47);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance45, variance48);
        double[] doubleArray52 = new double[] { (-1), 100.0f };
        variance48.incrementAll(doubleArray52);
        double double54 = variance37.evaluate(doubleArray52);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance56.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment62 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance63 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment62);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance60, variance63);
        variance60.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment70 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance71 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment70);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance68, variance71);
        double[] doubleArray75 = new double[] { (-1), 100.0f };
        variance71.incrementAll(doubleArray75);
        double double77 = variance60.evaluate(doubleArray75);
        double double78 = variance56.evaluate(doubleArray75);
        double double80 = variance37.evaluate(doubleArray75, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance81 = variance37.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance82 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance81);
        double[] doubleArray86 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double89 = variance81.evaluate(doubleArray86, 0, 0);
        double double91 = variance26.evaluate(doubleArray86, (double) 100.0f);
        variance22.setData(doubleArray86);
        java.lang.Class<?> wildcardClass93 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(variance35);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 2550.25d + "'", double77 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 2550.25d + "'", double78 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 2550.25d + "'", double80 == 2550.25d);
        org.junit.Assert.assertNotNull(variance81);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double89));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1998.0d + "'", double91 == 1998.0d);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        boolean boolean16 = variance12.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        boolean boolean5 = variance4.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance7.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance7.copy();
        boolean boolean11 = variance10.isBiasCorrected();
        variance10.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance17.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance23.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        variance23.incrementAll(doubleArray43);
        variance21.setData(doubleArray43);
        double double49 = variance17.evaluate(doubleArray43, (double) (short) 10);
        variance10.setData(doubleArray43, 1, 1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance10);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance53);
        boolean boolean55 = variance53.isBiasCorrected();
        variance53.clear();
        long long57 = variance53.getN();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment12 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment12);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance10, variance13);
        double[] doubleArray17 = new double[] { (-1), 100.0f };
        variance13.incrementAll(doubleArray17);
        variance13.clear();
        boolean boolean20 = variance8.equals((java.lang.Object) variance13);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        boolean boolean23 = variance8.equals((java.lang.Object) variance22);
        double[] doubleArray24 = variance22.getData();
        double double25 = variance22.getResult();
        boolean boolean26 = variance22.isBiasCorrected();
        variance22.setBiasCorrected(false);
        variance22.clear();
        variance22.clear();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(doubleArray24);
        org.junit.Assert.assertTrue(Double.isNaN(double25));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance6.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = variance6.copy();
        boolean boolean10 = variance9.isBiasCorrected();
        variance9.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance13.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        variance17.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment27 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment27);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance25, variance28);
        double[] doubleArray32 = new double[] { (-1), 100.0f };
        variance28.incrementAll(doubleArray32);
        double double34 = variance17.evaluate(doubleArray32);
        double double35 = variance13.evaluate(doubleArray32);
        variance13.increment(0.0d);
        boolean boolean38 = variance9.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment42 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment42);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance40, variance43);
        variance40.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment50 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment50);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance48, variance51);
        double[] doubleArray55 = new double[] { (-1), 100.0f };
        variance51.incrementAll(doubleArray55);
        double double57 = variance40.evaluate(doubleArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = variance40.equals(obj58);
        double[] doubleArray60 = variance40.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment64 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment64);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance62, variance65);
        double double67 = variance62.getResult();
        double[] doubleArray73 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double75 = variance62.evaluate(doubleArray73, (double) (short) 1);
        double double76 = variance40.evaluate(doubleArray73);
        double double78 = variance9.evaluate(doubleArray73, (double) (short) 10);
        variance4.incrementAll(doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double double80 = variance4.evaluate();
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NullArgumentException; message: input array");
        } catch (org.apache.commons.math.exception.NullArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertNotNull(variance9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 2550.25d + "'", double34 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 2550.25d + "'", double35 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 2550.25d + "'", double57 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(doubleArray60);
        org.junit.Assert.assertTrue(Double.isNaN(double67));
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 1030428.01d + "'", double75 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1030428.01d + "'", double76 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1030428.01d + "'", double78 == 1030428.01d);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment14 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment14);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance12, variance15);
        variance12.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        double[] doubleArray27 = new double[] { (-1), 100.0f };
        variance23.incrementAll(doubleArray27);
        double double29 = variance12.evaluate(doubleArray27);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance31.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment37 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance35, variance38);
        variance35.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        double[] doubleArray50 = new double[] { (-1), 100.0f };
        variance46.incrementAll(doubleArray50);
        double double52 = variance35.evaluate(doubleArray50);
        double double53 = variance31.evaluate(doubleArray50);
        double double55 = variance12.evaluate(doubleArray50, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance12.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance56);
        double[] doubleArray61 = new double[] { 1.0d, 10.0d, (byte) 100 };
        double double64 = variance56.evaluate(doubleArray61, 0, 0);
        double double66 = variance1.evaluate(doubleArray61, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = variance67.copy();
        double double69 = variance68.getResult();
        long long70 = variance68.getN();
        boolean boolean71 = variance1.equals((java.lang.Object) long70);
        double[] doubleArray72 = variance1.getData();
        java.lang.Class<?> wildcardClass73 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance10);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 2550.25d + "'", double29 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 2550.25d + "'", double52 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2550.25d + "'", double53 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 2550.25d + "'", double55 == 2550.25d);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[1.0, 10.0, 100.0]");
        org.junit.Assert.assertTrue(Double.isNaN(double64));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1998.0d + "'", double66 == 1998.0d);
        org.junit.Assert.assertNotNull(variance68);
        org.junit.Assert.assertTrue(Double.isNaN(double69));
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(doubleArray72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = variance1.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        boolean boolean47 = variance45.isBiasCorrected();
        variance45.increment(1030428.01d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance45);
        double double51 = variance50.getResult();
        variance50.clear();
        variance50.increment((double) (byte) 10);
        boolean boolean55 = variance50.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNotNull(variance45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance3 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance5 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance7 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment9 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance10 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment9);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance7, variance10);
        variance7.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        double[] doubleArray22 = new double[] { (-1), 100.0f };
        variance18.incrementAll(doubleArray22);
        double double24 = variance7.evaluate(doubleArray22);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance26.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance30 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment32 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance33 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment32);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance30, variance33);
        variance30.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment40 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance41 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment40);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance38, variance41);
        double[] doubleArray45 = new double[] { (-1), 100.0f };
        variance41.incrementAll(doubleArray45);
        double double47 = variance30.evaluate(doubleArray45);
        double double48 = variance26.evaluate(doubleArray45);
        double double50 = variance7.evaluate(doubleArray45, (double) 100.0f);
        double double51 = variance5.evaluate(doubleArray45);
        variance3.setData(doubleArray45);
        double double54 = variance1.evaluate(doubleArray45, (double) ' ');
        double double55 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = variance1.copy();
        double double58 = variance1.getResult();
        double[] doubleArray59 = variance1.getData();
        double double60 = variance1.getResult();
        variance1.increment(3400.3333333333335d);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 2550.25d + "'", double24 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 2550.25d + "'", double48 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 2550.25d + "'", double51 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 2550.25d + "'", double54 == 2550.25d);
        org.junit.Assert.assertTrue(Double.isNaN(double55));
        org.junit.Assert.assertNotNull(variance57);
        org.junit.Assert.assertTrue(Double.isNaN(double58));
        org.junit.Assert.assertNull(doubleArray59);
        org.junit.Assert.assertTrue(Double.isNaN(double60));
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        double double9 = variance1.getResult();
        double double10 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance12.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = variance12.copy();
        variance12.increment((double) 100.0f);
        boolean boolean18 = variance12.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = variance12.copy();
        variance19.increment((double) 1L);
        boolean boolean22 = variance1.equals((java.lang.Object) 1L);
        double double23 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance1);
        variance1.increment((double) 10L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue(Double.isNaN(double9));
        org.junit.Assert.assertTrue(Double.isNaN(double10));
        org.junit.Assert.assertNotNull(variance15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(variance19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue(Double.isNaN(double23));
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        boolean boolean7 = variance1.equals((java.lang.Object) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance8 = variance1.copy();
        boolean boolean9 = variance8.isBiasCorrected();
        double[] doubleArray10 = null;
        variance8.setData(doubleArray10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance8);
        variance12.setBiasCorrected(true);
        variance12.setBiasCorrected(true);
        double[] doubleArray17 = null;
        variance12.setData(doubleArray17);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(variance8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = variance18.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance24.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = variance24.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        variance24.incrementAll(doubleArray44);
        variance22.setData(doubleArray44);
        double double50 = variance18.evaluate(doubleArray44, (double) (short) 10);
        variance12.setData(doubleArray44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance53.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = variance53.copy();
        variance53.increment((double) '#');
        double[] doubleArray64 = new double[] { '#', 0L, (byte) 1, (-1), (short) 1 };
        variance53.incrementAll(doubleArray64);
        double double67 = variance12.evaluate(doubleArray64, 2266.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance20);
        org.junit.Assert.assertNotNull(variance27);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 2550.25d + "'", double50 == 2550.25d);
        org.junit.Assert.assertNotNull(variance56);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[35.0, 0.0, 1.0, -1.0, 1.0]");
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 193.760000000149d + "'", double67 == 193.760000000149d);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        boolean boolean2 = variance1.isBiasCorrected();
        variance1.setBiasCorrected(true);
        variance1.increment((double) (short) 100);
        double double7 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance9.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance9.copy();
        boolean boolean13 = variance12.isBiasCorrected();
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance16.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment22 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment22);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance20, variance23);
        variance20.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        double[] doubleArray35 = new double[] { (-1), 100.0f };
        variance31.incrementAll(doubleArray35);
        double double37 = variance20.evaluate(doubleArray35);
        double double38 = variance16.evaluate(doubleArray35);
        variance16.increment(0.0d);
        boolean boolean41 = variance12.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment45 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment45);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance43, variance46);
        variance43.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment53 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment53);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance51, variance54);
        double[] doubleArray58 = new double[] { (-1), 100.0f };
        variance54.incrementAll(doubleArray58);
        double double60 = variance43.evaluate(doubleArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = variance43.equals(obj61);
        double[] doubleArray63 = variance43.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        double double70 = variance65.getResult();
        double[] doubleArray76 = new double[] { (byte) 0, 2550.25d, 1, (short) -1, '4' };
        double double78 = variance65.evaluate(doubleArray76, (double) (short) 1);
        double double79 = variance43.evaluate(doubleArray76);
        double double81 = variance12.evaluate(doubleArray76, (double) (short) 10);
        variance12.clear();
        variance12.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance12);
        org.apache.commons.math.stat.descriptive.moment.Variance variance85 = variance1.copy();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2550.25d + "'", double37 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 2550.25d + "'", double60 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(doubleArray63);
        org.junit.Assert.assertTrue(Double.isNaN(double70));
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[0.0, 2550.25, 1.0, -1.0, 52.0]");
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1030428.01d + "'", double78 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1030428.01d + "'", double79 == 1030428.01d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 1030428.01d + "'", double81 == 1030428.01d);
        org.junit.Assert.assertNotNull(variance85);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        variance1.increment(0.0d);
        long long10 = variance1.getN();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment19 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment19);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance17, variance20);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance20);
        boolean boolean23 = variance15.equals((java.lang.Object) variance22);
        boolean boolean25 = variance22.equals((java.lang.Object) 0.0d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = variance22.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance28 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment30 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment30);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance28, variance31);
        variance28.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment38 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment38);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance36, variance39);
        double[] doubleArray43 = new double[] { (-1), 100.0f };
        variance39.incrementAll(doubleArray43);
        double double45 = variance28.evaluate(doubleArray43);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance28);
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance48.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = variance48.copy();
        boolean boolean52 = variance51.isBiasCorrected();
        variance51.clear();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        org.apache.commons.math.stat.descriptive.moment.Variance variance60 = variance58.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance62 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance64 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance64.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance64.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance69 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment71 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance72 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment71);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance69, variance72);
        variance69.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance77 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment79 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance80 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment79);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance77, variance80);
        double[] doubleArray84 = new double[] { (-1), 100.0f };
        variance80.incrementAll(doubleArray84);
        double double86 = variance69.evaluate(doubleArray84);
        variance64.incrementAll(doubleArray84);
        variance62.setData(doubleArray84);
        double double90 = variance58.evaluate(doubleArray84, (double) (short) 10);
        variance51.setData(doubleArray84, 1, 1);
        double double94 = variance28.evaluate(doubleArray84);
        variance22.incrementAll(doubleArray84);
        variance11.setData(doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            variance1.incrementAll(doubleArray84, 10, (-1));
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NotPositiveException; message: length (-1)");
        } catch (org.apache.commons.math.exception.NotPositiveException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(variance26);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 2550.25d + "'", double45 == 2550.25d);
        org.junit.Assert.assertNotNull(variance51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(variance60);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 2550.25d + "'", double90 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 2550.25d + "'", double94 == 2550.25d);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance4);
        org.apache.commons.math.stat.descriptive.moment.Variance variance13 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment15 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance16 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment15);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance13, variance16);
        double[] doubleArray20 = new double[] { (-1), 100.0f };
        variance16.incrementAll(doubleArray20);
        long long22 = variance16.getN();
        long long23 = variance16.getN();
        long long24 = variance16.getN();
        double double25 = variance16.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance16);
        long long27 = variance11.getN();
        double double28 = variance11.getResult();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2L + "'", long22 == 2L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 2L + "'", long23 == 2L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 2L + "'", long24 == 2L);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 2550.25d + "'", double25 == 2550.25d);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2L + "'", long27 == 2L);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        double[] doubleArray4 = variance1.getData();
        org.apache.commons.math.stat.descriptive.moment.Variance variance6 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment8 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment8);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance6, variance9);
        variance6.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment16 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance17 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment16);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance14, variance17);
        double[] doubleArray21 = new double[] { (-1), 100.0f };
        variance17.incrementAll(doubleArray21);
        double double23 = variance6.evaluate(doubleArray21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance25.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        variance29.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment39 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance37, variance40);
        double[] doubleArray44 = new double[] { (-1), 100.0f };
        variance40.incrementAll(doubleArray44);
        double double46 = variance29.evaluate(doubleArray44);
        double double47 = variance25.evaluate(doubleArray44);
        double double49 = variance6.evaluate(doubleArray44, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = variance6.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance50);
        variance51.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance();
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = variance54.copy();
        java.lang.Class<?> wildcardClass56 = variance54.getClass();
        boolean boolean57 = variance51.equals((java.lang.Object) wildcardClass56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance51);
        double[] doubleArray59 = variance51.getData();
        org.junit.Assert.assertNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 2550.25d + "'", double23 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 2550.25d + "'", double46 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 2550.25d + "'", double47 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 2550.25d + "'", double49 == 2550.25d);
        org.junit.Assert.assertNotNull(variance50);
        org.junit.Assert.assertNotNull(variance55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(doubleArray59);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        boolean boolean19 = variance18.isBiasCorrected();
        org.apache.commons.math.stat.descriptive.moment.Variance variance21 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment23 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment23);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance24);
        variance21.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        double[] doubleArray36 = new double[] { (-1), 100.0f };
        variance32.incrementAll(doubleArray36);
        double double38 = variance21.evaluate(doubleArray36);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        variance21.increment(Double.NaN);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance21);
        org.apache.commons.math.stat.descriptive.moment.Variance variance44 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment46 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment46);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance44, variance47);
        variance44.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance51 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance44);
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment55 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance56 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment55);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance53, variance56);
        double[] doubleArray60 = new double[] { (-1), 100.0f };
        variance56.incrementAll(doubleArray60);
        variance56.clear();
        boolean boolean63 = variance51.equals((java.lang.Object) variance56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance21, variance56);
        boolean boolean65 = variance21.isBiasCorrected();
        double[] doubleArray66 = variance21.getData();
        double[] doubleArray67 = variance21.getData();
        variance21.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance18, variance21);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 2550.25d + "'", double38 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(doubleArray66);
        org.junit.Assert.assertNull(doubleArray67);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment13 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance14 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment13);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance14);
        variance11.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance19 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment21 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment21);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance19, variance22);
        double[] doubleArray26 = new double[] { (-1), 100.0f };
        variance22.incrementAll(doubleArray26);
        double double28 = variance11.evaluate(doubleArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = variance11.equals(obj29);
        variance11.setBiasCorrected(true);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment36 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance37 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment36);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance34, variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance37);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance11, variance39);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance4, variance11);
        org.apache.commons.math.stat.descriptive.moment.Variance variance43 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance43.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        variance47.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance55 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment57 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance58 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment57);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance55, variance58);
        double[] doubleArray62 = new double[] { (-1), 100.0f };
        variance58.incrementAll(doubleArray62);
        double double64 = variance47.evaluate(doubleArray62);
        double double65 = variance43.evaluate(doubleArray62);
        variance43.increment(0.0d);
        boolean boolean68 = variance4.equals((java.lang.Object) 0.0d);
        double[] doubleArray69 = variance4.getData();
        variance4.increment(2550.25d);
        boolean boolean72 = variance4.isBiasCorrected();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 2550.25d + "'", double28 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 2550.25d + "'", double65 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(doubleArray69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        variance4.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = variance4.copy();
        double[] doubleArray13 = variance12.getData();
        variance12.setBiasCorrected(false);
        variance12.increment((double) (-1));
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance12);
        variance18.increment((double) 0);
        org.apache.commons.math.stat.descriptive.moment.Variance variance22 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance22.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance25 = variance22.copy();
        variance22.increment((double) '#');
        org.apache.commons.math.stat.descriptive.moment.Variance variance29 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment31 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment31);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance29, variance32);
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = variance32.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance36 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance38 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance40 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment44 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance45 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment44);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance42, variance45);
        variance42.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment52 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance53 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment52);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance50, variance53);
        double[] doubleArray57 = new double[] { (-1), 100.0f };
        variance53.incrementAll(doubleArray57);
        double double59 = variance42.evaluate(doubleArray57);
        org.apache.commons.math.stat.descriptive.moment.Variance variance61 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance61.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance65 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment67 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment67);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance65, variance68);
        variance65.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment75 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance76 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment75);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance73, variance76);
        double[] doubleArray80 = new double[] { (-1), 100.0f };
        variance76.incrementAll(doubleArray80);
        double double82 = variance65.evaluate(doubleArray80);
        double double83 = variance61.evaluate(doubleArray80);
        double double85 = variance42.evaluate(doubleArray80, (double) 100.0f);
        double double86 = variance40.evaluate(doubleArray80);
        variance38.setData(doubleArray80);
        double double89 = variance36.evaluate(doubleArray80, (double) ' ');
        variance32.setData(doubleArray80);
        double double92 = variance22.evaluate(doubleArray80, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = variance18.evaluate(doubleArray80, (double) (byte) 10, 10, 100);
            org.junit.Assert.fail("Expected exception of type org.apache.commons.math.exception.NumberIsTooLargeException; message: subarray ends after array end");
        } catch (org.apache.commons.math.exception.NumberIsTooLargeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertNotNull(variance12);
        org.junit.Assert.assertNull(doubleArray13);
        org.junit.Assert.assertNotNull(variance25);
        org.junit.Assert.assertNotNull(variance34);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 2550.25d + "'", double59 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 2550.25d + "'", double82 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 2550.25d + "'", double83 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 2550.25d + "'", double85 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 2550.25d + "'", double86 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 2550.25d + "'", double89 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 2550.25d + "'", double92 == 2550.25d);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) (-1L));
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        double[] doubleArray31 = new double[] { (-1), 100.0f };
        variance27.incrementAll(doubleArray31);
        variance20.setData(doubleArray31);
        variance1.incrementAll(doubleArray31);
        variance1.increment((double) 10);
        double double37 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance39 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment41 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment41);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance39, variance42);
        variance39.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance47 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment49 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance50 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment49);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance47, variance50);
        double[] doubleArray54 = new double[] { (-1), 100.0f };
        variance50.incrementAll(doubleArray54);
        double double56 = variance39.evaluate(doubleArray54);
        java.lang.Object obj57 = null;
        boolean boolean58 = variance39.equals(obj57);
        variance39.setBiasCorrected(true);
        variance39.clear();
        variance39.clear();
        boolean boolean63 = variance1.equals((java.lang.Object) variance39);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 2046.8888888888887d + "'", double37 == 2046.8888888888887d);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 2550.25d + "'", double56 == 2550.25d);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = variance1.copy();
        long long5 = variance1.getN();
        long long6 = variance1.getN();
        double double7 = variance1.getResult();
        variance1.increment((double) (short) -1);
        org.apache.commons.math.stat.descriptive.moment.Variance variance11 = new org.apache.commons.math.stat.descriptive.moment.Variance(true);
        variance11.increment(2046.8888888888887d);
        org.apache.commons.math.stat.descriptive.moment.Variance variance15 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment17 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance18 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment17);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance15, variance18);
        variance15.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance23 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment25 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance26 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment25);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance23, variance26);
        variance23.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance31 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment33 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance34 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment33);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance31, variance34);
        double[] doubleArray38 = new double[] { (-1), 100.0f };
        variance34.incrementAll(doubleArray38);
        double double40 = variance23.evaluate(doubleArray38);
        org.apache.commons.math.stat.descriptive.moment.Variance variance42 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance42.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance46 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment48 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance49 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment48);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance46, variance49);
        variance46.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance54 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment56 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance57 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment56);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance54, variance57);
        double[] doubleArray61 = new double[] { (-1), 100.0f };
        variance57.incrementAll(doubleArray61);
        double double63 = variance46.evaluate(doubleArray61);
        double double64 = variance42.evaluate(doubleArray61);
        double double66 = variance23.evaluate(doubleArray61, (double) 100.0f);
        org.apache.commons.math.stat.descriptive.moment.Variance variance67 = variance23.copy();
        org.apache.commons.math.stat.descriptive.moment.Variance variance68 = new org.apache.commons.math.stat.descriptive.moment.Variance(variance67);
        org.apache.commons.math.stat.descriptive.moment.Variance variance70 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment72 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance73 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment72);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance70, variance73);
        double[] doubleArray77 = new double[] { (-1), 100.0f };
        variance73.incrementAll(doubleArray77);
        double double79 = variance68.evaluate(doubleArray77);
        variance15.setData(doubleArray77);
        variance11.setData(doubleArray77);
        variance1.incrementAll(doubleArray77);
        java.lang.Class<?> wildcardClass83 = variance1.getClass();
        org.junit.Assert.assertNotNull(variance4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 2550.25d + "'", double40 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 2550.25d + "'", double63 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 2550.25d + "'", double64 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 2550.25d + "'", double66 == 2550.25d);
        org.junit.Assert.assertNotNull(variance67);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 2550.25d + "'", double79 == 2550.25d);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance1.increment((double) (-1L));
        variance1.increment((double) (short) 100);
        double[] doubleArray6 = variance1.getData();
        boolean boolean7 = variance1.isBiasCorrected();
        org.junit.Assert.assertNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        double[] doubleArray8 = new double[] { (-1), 100.0f };
        variance4.incrementAll(doubleArray8);
        double double10 = variance4.getResult();
        variance4.setBiasCorrected(false);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 2550.25d + "'", double10 == 2550.25d);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.apache.commons.math.stat.descriptive.moment.Variance variance1 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment3 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance4 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment3);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance1, variance4);
        variance1.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance9 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment11 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance12 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment11);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance9, variance12);
        double[] doubleArray16 = new double[] { (-1), 100.0f };
        variance12.incrementAll(doubleArray16);
        double double18 = variance1.evaluate(doubleArray16);
        org.apache.commons.math.stat.descriptive.moment.Variance variance20 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        variance20.increment((double) 10);
        org.apache.commons.math.stat.descriptive.moment.Variance variance24 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment26 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance27 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment26);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance24, variance27);
        variance24.setBiasCorrected(false);
        org.apache.commons.math.stat.descriptive.moment.Variance variance32 = new org.apache.commons.math.stat.descriptive.moment.Variance(false);
        org.apache.commons.math.stat.descriptive.moment.SecondMoment secondMoment34 = null;
        org.apache.commons.math.stat.descriptive.moment.Variance variance35 = new org.apache.commons.math.stat.descriptive.moment.Variance(true, secondMoment34);
        org.apache.commons.math.stat.descriptive.moment.Variance.copy(variance32, variance35);
        double[] doubleArray39 = new double[] { (-1), 100.0f };
        variance35.incrementAll(doubleArray39);
        double double41 = variance24.evaluate(doubleArray39);
        double double42 = variance20.evaluate(doubleArray39);
        double double44 = variance1.evaluate(doubleArray39, (double) 100.0f);
        double[] doubleArray45 = variance1.getData();
        double[] doubleArray46 = variance1.getData();
        double double47 = variance1.getResult();
        org.apache.commons.math.stat.descriptive.moment.Variance variance48 = variance1.copy();
        long long49 = variance1.getN();
        double double50 = variance1.getResult();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 2550.25d + "'", double18 == 2550.25d);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[-1.0, 100.0]");
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2550.25d + "'", double41 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 2550.25d + "'", double42 == 2550.25d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2550.25d + "'", double44 == 2550.25d);
        org.junit.Assert.assertNull(doubleArray45);
        org.junit.Assert.assertNull(doubleArray46);
        org.junit.Assert.assertTrue(Double.isNaN(double47));
        org.junit.Assert.assertNotNull(variance48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue(Double.isNaN(double50));
    }
}

